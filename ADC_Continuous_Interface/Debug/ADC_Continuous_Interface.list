
ADC_Continuous_Interface.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000014b8  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000cc  08001658  08001658  00011658  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001724  08001724  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001724  08001724  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001724  08001724  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001724  08001724  00011724  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001728  08001728  00011728  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  0800172c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08001790  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08001790  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000128e  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000005cd  00000000  00000000  00021322  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000190  00000000  00000000  000218f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000138  00000000  00000000  00021a80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000f9a3  00000000  00000000  00021bb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001de0  00000000  00000000  0003155b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000546ae  00000000  00000000  0003333b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000879e9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000ce4  00000000  00000000  00087a3c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001640 	.word	0x08001640

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	08001640 	.word	0x08001640

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <ADC_Init0>:
#define CR2_SWSTART		(1U<<30)
#define SR_EOC			(1U<<1)
#define CR2_CONT		(1U<<1)

void ADC_Init0(void)
{
 8000280:	b480      	push	{r7}
 8000282:	af00      	add	r7, sp, #0
	/***Configure the ADC GPIO pin ***/
	/*Enable clock access to GPIOA*/
	RCC->AHB1ENR |= GPIOAEN;
 8000284:	4b11      	ldr	r3, [pc, #68]	; (80002cc <ADC_Init0+0x4c>)
 8000286:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000288:	4a10      	ldr	r2, [pc, #64]	; (80002cc <ADC_Init0+0x4c>)
 800028a:	f043 0301 	orr.w	r3, r3, #1
 800028e:	6313      	str	r3, [r2, #48]	; 0x30
	/*Set the mode of PA0 to analog*/
	GPIOA -> MODER |= (1U<<0)|(1U<<1);
 8000290:	4b0f      	ldr	r3, [pc, #60]	; (80002d0 <ADC_Init0+0x50>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	4a0e      	ldr	r2, [pc, #56]	; (80002d0 <ADC_Init0+0x50>)
 8000296:	f043 0303 	orr.w	r3, r3, #3
 800029a:	6013      	str	r3, [r2, #0]
	/***Configure the ADC module***/
	/*Enable clock access to ADC */
	RCC -> APB2ENR |= ADC1EN;
 800029c:	4b0b      	ldr	r3, [pc, #44]	; (80002cc <ADC_Init0+0x4c>)
 800029e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80002a0:	4a0a      	ldr	r2, [pc, #40]	; (80002cc <ADC_Init0+0x4c>)
 80002a2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002a6:	6453      	str	r3, [r2, #68]	; 0x44
	/*Conversion sequence start*/
	ADC1->SQR3 = 0;// channel 0
 80002a8:	4b0a      	ldr	r3, [pc, #40]	; (80002d4 <ADC_Init0+0x54>)
 80002aa:	2200      	movs	r2, #0
 80002ac:	635a      	str	r2, [r3, #52]	; 0x34
	/*Conversion sequence length*/
	ADC1->SQR1 = 0; // length = 1
 80002ae:	4b09      	ldr	r3, [pc, #36]	; (80002d4 <ADC_Init0+0x54>)
 80002b0:	2200      	movs	r2, #0
 80002b2:	62da      	str	r2, [r3, #44]	; 0x2c
	/*Enable ADC module*/
	ADC1->CR2 |= CR2_AD0N;
 80002b4:	4b07      	ldr	r3, [pc, #28]	; (80002d4 <ADC_Init0+0x54>)
 80002b6:	689b      	ldr	r3, [r3, #8]
 80002b8:	4a06      	ldr	r2, [pc, #24]	; (80002d4 <ADC_Init0+0x54>)
 80002ba:	f043 0301 	orr.w	r3, r3, #1
 80002be:	6093      	str	r3, [r2, #8]
}
 80002c0:	bf00      	nop
 80002c2:	46bd      	mov	sp, r7
 80002c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c8:	4770      	bx	lr
 80002ca:	bf00      	nop
 80002cc:	40023800 	.word	0x40023800
 80002d0:	40020000 	.word	0x40020000
 80002d4:	40012000 	.word	0x40012000

080002d8 <ADC_Continuous_Start0>:
	/*Start adc conversion*/
	ADC1->CR2 |= CR2_SWSTART;
}

void ADC_Continuous_Start0()
{
 80002d8:	b480      	push	{r7}
 80002da:	af00      	add	r7, sp, #0
	ADC1->CR2 |=CR2_CONT;
 80002dc:	4b08      	ldr	r3, [pc, #32]	; (8000300 <ADC_Continuous_Start0+0x28>)
 80002de:	689b      	ldr	r3, [r3, #8]
 80002e0:	4a07      	ldr	r2, [pc, #28]	; (8000300 <ADC_Continuous_Start0+0x28>)
 80002e2:	f043 0302 	orr.w	r3, r3, #2
 80002e6:	6093      	str	r3, [r2, #8]
	/*Enable ADC module*/
	ADC1->CR2 |= CR2_AD0N;
 80002e8:	4b05      	ldr	r3, [pc, #20]	; (8000300 <ADC_Continuous_Start0+0x28>)
 80002ea:	689b      	ldr	r3, [r3, #8]
 80002ec:	4a04      	ldr	r2, [pc, #16]	; (8000300 <ADC_Continuous_Start0+0x28>)
 80002ee:	f043 0301 	orr.w	r3, r3, #1
 80002f2:	6093      	str	r3, [r2, #8]
}
 80002f4:	bf00      	nop
 80002f6:	46bd      	mov	sp, r7
 80002f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002fc:	4770      	bx	lr
 80002fe:	bf00      	nop
 8000300:	40012000 	.word	0x40012000

08000304 <ADC_Get_Result>:

uint32_t ADC_Get_Result(void)
{
 8000304:	b480      	push	{r7}
 8000306:	af00      	add	r7, sp, #0

	/*Wait for conversion to be complete*/
	while(!(ADC1->SR & SR_EOC)){}
 8000308:	bf00      	nop
 800030a:	4b06      	ldr	r3, [pc, #24]	; (8000324 <ADC_Get_Result+0x20>)
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	f003 0302 	and.w	r3, r3, #2
 8000312:	2b00      	cmp	r3, #0
 8000314:	d0f9      	beq.n	800030a <ADC_Get_Result+0x6>
	//ADC1->CR2 &= ~CR2_AD0N;
	/*Read converted result*/
	return (ADC1->DR);
 8000316:	4b03      	ldr	r3, [pc, #12]	; (8000324 <ADC_Get_Result+0x20>)
 8000318:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 800031a:	4618      	mov	r0, r3
 800031c:	46bd      	mov	sp, r7
 800031e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000322:	4770      	bx	lr
 8000324:	40012000 	.word	0x40012000

08000328 <USART2_Init>:
#include "USART2.h"

#define GPIOAEN		    (1U<<0)

void USART2_Init()
{
 8000328:	b480      	push	{r7}
 800032a:	af00      	add	r7, sp, #0
	///////////////// Enable the Clocks ////////////////
	RCC -> AHB1ENR |= GPIOAEN;
 800032c:	4b17      	ldr	r3, [pc, #92]	; (800038c <USART2_Init+0x64>)
 800032e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000330:	4a16      	ldr	r2, [pc, #88]	; (800038c <USART2_Init+0x64>)
 8000332:	f043 0301 	orr.w	r3, r3, #1
 8000336:	6313      	str	r3, [r2, #48]	; 0x30
	RCC -> APB1ENR |= USART2EN;
 8000338:	4b14      	ldr	r3, [pc, #80]	; (800038c <USART2_Init+0x64>)
 800033a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800033c:	4a13      	ldr	r2, [pc, #76]	; (800038c <USART2_Init+0x64>)
 800033e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000342:	6413      	str	r3, [r2, #64]	; 0x40
	///////////////// SETUP THE GPIOs //////////////////
	GPIOA -> MODER |= (1<<7)|(1<<5); // PA3 and PA2 are Set to Alternate Functionality Mode
 8000344:	4b12      	ldr	r3, [pc, #72]	; (8000390 <USART2_Init+0x68>)
 8000346:	681b      	ldr	r3, [r3, #0]
 8000348:	4a11      	ldr	r2, [pc, #68]	; (8000390 <USART2_Init+0x68>)
 800034a:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 800034e:	6013      	str	r3, [r2, #0]
	GPIOA -> AFR[0] |= (1<<8)|(1<<9)|(1<<10)|(1<<12)|(1<<13)|(1<<14);
 8000350:	4b0f      	ldr	r3, [pc, #60]	; (8000390 <USART2_Init+0x68>)
 8000352:	6a1b      	ldr	r3, [r3, #32]
 8000354:	4a0e      	ldr	r2, [pc, #56]	; (8000390 <USART2_Init+0x68>)
 8000356:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 800035a:	6213      	str	r3, [r2, #32]
	// Set the AF mode to 7
	///////////////// Setup the USART Configurations ////////////
	USART2 -> CR1 |= TE|RE;
 800035c:	4b0d      	ldr	r3, [pc, #52]	; (8000394 <USART2_Init+0x6c>)
 800035e:	68db      	ldr	r3, [r3, #12]
 8000360:	4a0c      	ldr	r2, [pc, #48]	; (8000394 <USART2_Init+0x6c>)
 8000362:	f043 030c 	orr.w	r3, r3, #12
 8000366:	60d3      	str	r3, [r2, #12]
	//1. Setup the Control Register
	USART2 -> BRR = ((F_CPU + (BaudRate/2U))/BaudRate);
 8000368:	4b0a      	ldr	r3, [pc, #40]	; (8000394 <USART2_Init+0x6c>)
 800036a:	228b      	movs	r2, #139	; 0x8b
 800036c:	609a      	str	r2, [r3, #8]
	//2. COnfigure the Baud rate
	USART2 -> CR1 |= UE;
 800036e:	4b09      	ldr	r3, [pc, #36]	; (8000394 <USART2_Init+0x6c>)
 8000370:	68db      	ldr	r3, [r3, #12]
 8000372:	4a08      	ldr	r2, [pc, #32]	; (8000394 <USART2_Init+0x6c>)
 8000374:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000378:	60d3      	str	r3, [r2, #12]
	//3. Enable the UART Protocol
	USART2 -> DR = 0;
 800037a:	4b06      	ldr	r3, [pc, #24]	; (8000394 <USART2_Init+0x6c>)
 800037c:	2200      	movs	r2, #0
 800037e:	605a      	str	r2, [r3, #4]
}
 8000380:	bf00      	nop
 8000382:	46bd      	mov	sp, r7
 8000384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000388:	4770      	bx	lr
 800038a:	bf00      	nop
 800038c:	40023800 	.word	0x40023800
 8000390:	40020000 	.word	0x40020000
 8000394:	40004400 	.word	0x40004400

08000398 <USART2_Transmit>:

void USART2_Transmit(char data)
{
 8000398:	b480      	push	{r7}
 800039a:	b083      	sub	sp, #12
 800039c:	af00      	add	r7, sp, #0
 800039e:	4603      	mov	r3, r0
 80003a0:	71fb      	strb	r3, [r7, #7]
	while (((USART2 -> SR) & TXE)==0);
 80003a2:	bf00      	nop
 80003a4:	4b07      	ldr	r3, [pc, #28]	; (80003c4 <USART2_Transmit+0x2c>)
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80003ac:	2b00      	cmp	r3, #0
 80003ae:	d0f9      	beq.n	80003a4 <USART2_Transmit+0xc>
	//5. Now wait for the Transmit Flag to be set
	USART2 -> DR = data;
 80003b0:	4a04      	ldr	r2, [pc, #16]	; (80003c4 <USART2_Transmit+0x2c>)
 80003b2:	79fb      	ldrb	r3, [r7, #7]
 80003b4:	6053      	str	r3, [r2, #4]
	//3. Load the Data
}
 80003b6:	bf00      	nop
 80003b8:	370c      	adds	r7, #12
 80003ba:	46bd      	mov	sp, r7
 80003bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c0:	4770      	bx	lr
 80003c2:	bf00      	nop
 80003c4:	40004400 	.word	0x40004400

080003c8 <__io_putchar>:
	}
	USART2_Transmit('\r');
}

int __io_putchar(int ch)
{
 80003c8:	b580      	push	{r7, lr}
 80003ca:	b082      	sub	sp, #8
 80003cc:	af00      	add	r7, sp, #0
 80003ce:	6078      	str	r0, [r7, #4]
	USART2_Transmit(ch);
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	b2db      	uxtb	r3, r3
 80003d4:	4618      	mov	r0, r3
 80003d6:	f7ff ffdf 	bl	8000398 <USART2_Transmit>
	return ch;
 80003da:	687b      	ldr	r3, [r7, #4]
}
 80003dc:	4618      	mov	r0, r3
 80003de:	3708      	adds	r7, #8
 80003e0:	46bd      	mov	sp, r7
 80003e2:	bd80      	pop	{r7, pc}

080003e4 <main>:
#include "USART2.h"
#include "ADC.h"
#include <stdio.h>

int main(void)
{
 80003e4:	b580      	push	{r7, lr}
 80003e6:	b082      	sub	sp, #8
 80003e8:	af00      	add	r7, sp, #0
	USART2_Init();
 80003ea:	f7ff ff9d 	bl	8000328 <USART2_Init>
	printf("UART Init Complete\r\n");
 80003ee:	480f      	ldr	r0, [pc, #60]	; (800042c <main+0x48>)
 80003f0:	f000 f9a8 	bl	8000744 <puts>
	int result;
	ADC_Init0();
 80003f4:	f7ff ff44 	bl	8000280 <ADC_Init0>
	ADC_Continuous_Start0();
 80003f8:	f7ff ff6e 	bl	80002d8 <ADC_Continuous_Start0>
	//ADC_Regular_Start0();
	while(1)
	{
		//ADC_Regular_Start0();
		printf("\n\r\rADC0 Started.");
 80003fc:	480c      	ldr	r0, [pc, #48]	; (8000430 <main+0x4c>)
 80003fe:	f000 f91b 	bl	8000638 <iprintf>
		//Read converted result
		result = ADC_Get_Result();
 8000402:	f7ff ff7f 	bl	8000304 <ADC_Get_Result>
 8000406:	4603      	mov	r3, r0
 8000408:	603b      	str	r3, [r7, #0]
		printf("Value: %d\r",result);
 800040a:	6839      	ldr	r1, [r7, #0]
 800040c:	4809      	ldr	r0, [pc, #36]	; (8000434 <main+0x50>)
 800040e:	f000 f913 	bl	8000638 <iprintf>
		for(int i = 0; i<10000;i=i+1);
 8000412:	2300      	movs	r3, #0
 8000414:	607b      	str	r3, [r7, #4]
 8000416:	e002      	b.n	800041e <main+0x3a>
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	3301      	adds	r3, #1
 800041c:	607b      	str	r3, [r7, #4]
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	f242 720f 	movw	r2, #9999	; 0x270f
 8000424:	4293      	cmp	r3, r2
 8000426:	ddf7      	ble.n	8000418 <main+0x34>
		printf("\n\r\rADC0 Started.");
 8000428:	e7e8      	b.n	80003fc <main+0x18>
 800042a:	bf00      	nop
 800042c:	08001658 	.word	0x08001658
 8000430:	0800166c 	.word	0x0800166c
 8000434:	08001680 	.word	0x08001680

08000438 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000438:	b580      	push	{r7, lr}
 800043a:	b086      	sub	sp, #24
 800043c:	af00      	add	r7, sp, #0
 800043e:	60f8      	str	r0, [r7, #12]
 8000440:	60b9      	str	r1, [r7, #8]
 8000442:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000444:	2300      	movs	r3, #0
 8000446:	617b      	str	r3, [r7, #20]
 8000448:	e00a      	b.n	8000460 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800044a:	f3af 8000 	nop.w
 800044e:	4601      	mov	r1, r0
 8000450:	68bb      	ldr	r3, [r7, #8]
 8000452:	1c5a      	adds	r2, r3, #1
 8000454:	60ba      	str	r2, [r7, #8]
 8000456:	b2ca      	uxtb	r2, r1
 8000458:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800045a:	697b      	ldr	r3, [r7, #20]
 800045c:	3301      	adds	r3, #1
 800045e:	617b      	str	r3, [r7, #20]
 8000460:	697a      	ldr	r2, [r7, #20]
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	429a      	cmp	r2, r3
 8000466:	dbf0      	blt.n	800044a <_read+0x12>
	}

return len;
 8000468:	687b      	ldr	r3, [r7, #4]
}
 800046a:	4618      	mov	r0, r3
 800046c:	3718      	adds	r7, #24
 800046e:	46bd      	mov	sp, r7
 8000470:	bd80      	pop	{r7, pc}

08000472 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000472:	b580      	push	{r7, lr}
 8000474:	b086      	sub	sp, #24
 8000476:	af00      	add	r7, sp, #0
 8000478:	60f8      	str	r0, [r7, #12]
 800047a:	60b9      	str	r1, [r7, #8]
 800047c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800047e:	2300      	movs	r3, #0
 8000480:	617b      	str	r3, [r7, #20]
 8000482:	e009      	b.n	8000498 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000484:	68bb      	ldr	r3, [r7, #8]
 8000486:	1c5a      	adds	r2, r3, #1
 8000488:	60ba      	str	r2, [r7, #8]
 800048a:	781b      	ldrb	r3, [r3, #0]
 800048c:	4618      	mov	r0, r3
 800048e:	f7ff ff9b 	bl	80003c8 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000492:	697b      	ldr	r3, [r7, #20]
 8000494:	3301      	adds	r3, #1
 8000496:	617b      	str	r3, [r7, #20]
 8000498:	697a      	ldr	r2, [r7, #20]
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	429a      	cmp	r2, r3
 800049e:	dbf1      	blt.n	8000484 <_write+0x12>
	}
	return len;
 80004a0:	687b      	ldr	r3, [r7, #4]
}
 80004a2:	4618      	mov	r0, r3
 80004a4:	3718      	adds	r7, #24
 80004a6:	46bd      	mov	sp, r7
 80004a8:	bd80      	pop	{r7, pc}

080004aa <_close>:

int _close(int file)
{
 80004aa:	b480      	push	{r7}
 80004ac:	b083      	sub	sp, #12
 80004ae:	af00      	add	r7, sp, #0
 80004b0:	6078      	str	r0, [r7, #4]
	return -1;
 80004b2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004b6:	4618      	mov	r0, r3
 80004b8:	370c      	adds	r7, #12
 80004ba:	46bd      	mov	sp, r7
 80004bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c0:	4770      	bx	lr

080004c2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004c2:	b480      	push	{r7}
 80004c4:	b083      	sub	sp, #12
 80004c6:	af00      	add	r7, sp, #0
 80004c8:	6078      	str	r0, [r7, #4]
 80004ca:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80004cc:	683b      	ldr	r3, [r7, #0]
 80004ce:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80004d2:	605a      	str	r2, [r3, #4]
	return 0;
 80004d4:	2300      	movs	r3, #0
}
 80004d6:	4618      	mov	r0, r3
 80004d8:	370c      	adds	r7, #12
 80004da:	46bd      	mov	sp, r7
 80004dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e0:	4770      	bx	lr

080004e2 <_isatty>:

int _isatty(int file)
{
 80004e2:	b480      	push	{r7}
 80004e4:	b083      	sub	sp, #12
 80004e6:	af00      	add	r7, sp, #0
 80004e8:	6078      	str	r0, [r7, #4]
	return 1;
 80004ea:	2301      	movs	r3, #1
}
 80004ec:	4618      	mov	r0, r3
 80004ee:	370c      	adds	r7, #12
 80004f0:	46bd      	mov	sp, r7
 80004f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004f6:	4770      	bx	lr

080004f8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004f8:	b480      	push	{r7}
 80004fa:	b085      	sub	sp, #20
 80004fc:	af00      	add	r7, sp, #0
 80004fe:	60f8      	str	r0, [r7, #12]
 8000500:	60b9      	str	r1, [r7, #8]
 8000502:	607a      	str	r2, [r7, #4]
	return 0;
 8000504:	2300      	movs	r3, #0
}
 8000506:	4618      	mov	r0, r3
 8000508:	3714      	adds	r7, #20
 800050a:	46bd      	mov	sp, r7
 800050c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000510:	4770      	bx	lr
	...

08000514 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000514:	b580      	push	{r7, lr}
 8000516:	b086      	sub	sp, #24
 8000518:	af00      	add	r7, sp, #0
 800051a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800051c:	4a14      	ldr	r2, [pc, #80]	; (8000570 <_sbrk+0x5c>)
 800051e:	4b15      	ldr	r3, [pc, #84]	; (8000574 <_sbrk+0x60>)
 8000520:	1ad3      	subs	r3, r2, r3
 8000522:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000524:	697b      	ldr	r3, [r7, #20]
 8000526:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000528:	4b13      	ldr	r3, [pc, #76]	; (8000578 <_sbrk+0x64>)
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	2b00      	cmp	r3, #0
 800052e:	d102      	bne.n	8000536 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000530:	4b11      	ldr	r3, [pc, #68]	; (8000578 <_sbrk+0x64>)
 8000532:	4a12      	ldr	r2, [pc, #72]	; (800057c <_sbrk+0x68>)
 8000534:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000536:	4b10      	ldr	r3, [pc, #64]	; (8000578 <_sbrk+0x64>)
 8000538:	681a      	ldr	r2, [r3, #0]
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	4413      	add	r3, r2
 800053e:	693a      	ldr	r2, [r7, #16]
 8000540:	429a      	cmp	r2, r3
 8000542:	d207      	bcs.n	8000554 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000544:	f000 f846 	bl	80005d4 <__errno>
 8000548:	4603      	mov	r3, r0
 800054a:	220c      	movs	r2, #12
 800054c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800054e:	f04f 33ff 	mov.w	r3, #4294967295
 8000552:	e009      	b.n	8000568 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000554:	4b08      	ldr	r3, [pc, #32]	; (8000578 <_sbrk+0x64>)
 8000556:	681b      	ldr	r3, [r3, #0]
 8000558:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800055a:	4b07      	ldr	r3, [pc, #28]	; (8000578 <_sbrk+0x64>)
 800055c:	681a      	ldr	r2, [r3, #0]
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	4413      	add	r3, r2
 8000562:	4a05      	ldr	r2, [pc, #20]	; (8000578 <_sbrk+0x64>)
 8000564:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000566:	68fb      	ldr	r3, [r7, #12]
}
 8000568:	4618      	mov	r0, r3
 800056a:	3718      	adds	r7, #24
 800056c:	46bd      	mov	sp, r7
 800056e:	bd80      	pop	{r7, pc}
 8000570:	20018000 	.word	0x20018000
 8000574:	00000400 	.word	0x00000400
 8000578:	20000080 	.word	0x20000080
 800057c:	20000098 	.word	0x20000098

08000580 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000580:	480d      	ldr	r0, [pc, #52]	; (80005b8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000582:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000584:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000588:	480c      	ldr	r0, [pc, #48]	; (80005bc <LoopForever+0x6>)
  ldr r1, =_edata
 800058a:	490d      	ldr	r1, [pc, #52]	; (80005c0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800058c:	4a0d      	ldr	r2, [pc, #52]	; (80005c4 <LoopForever+0xe>)
  movs r3, #0
 800058e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000590:	e002      	b.n	8000598 <LoopCopyDataInit>

08000592 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000592:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000594:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000596:	3304      	adds	r3, #4

08000598 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000598:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800059a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800059c:	d3f9      	bcc.n	8000592 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800059e:	4a0a      	ldr	r2, [pc, #40]	; (80005c8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005a0:	4c0a      	ldr	r4, [pc, #40]	; (80005cc <LoopForever+0x16>)
  movs r3, #0
 80005a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005a4:	e001      	b.n	80005aa <LoopFillZerobss>

080005a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005a8:	3204      	adds	r2, #4

080005aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005ac:	d3fb      	bcc.n	80005a6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005ae:	f000 f817 	bl	80005e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005b2:	f7ff ff17 	bl	80003e4 <main>

080005b6 <LoopForever>:

LoopForever:
    b LoopForever
 80005b6:	e7fe      	b.n	80005b6 <LoopForever>
  ldr   r0, =_estack
 80005b8:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80005bc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005c0:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80005c4:	0800172c 	.word	0x0800172c
  ldr r2, =_sbss
 80005c8:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80005cc:	20000094 	.word	0x20000094

080005d0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005d0:	e7fe      	b.n	80005d0 <ADC_IRQHandler>
	...

080005d4 <__errno>:
 80005d4:	4b01      	ldr	r3, [pc, #4]	; (80005dc <__errno+0x8>)
 80005d6:	6818      	ldr	r0, [r3, #0]
 80005d8:	4770      	bx	lr
 80005da:	bf00      	nop
 80005dc:	20000000 	.word	0x20000000

080005e0 <__libc_init_array>:
 80005e0:	b570      	push	{r4, r5, r6, lr}
 80005e2:	4d0d      	ldr	r5, [pc, #52]	; (8000618 <__libc_init_array+0x38>)
 80005e4:	4c0d      	ldr	r4, [pc, #52]	; (800061c <__libc_init_array+0x3c>)
 80005e6:	1b64      	subs	r4, r4, r5
 80005e8:	10a4      	asrs	r4, r4, #2
 80005ea:	2600      	movs	r6, #0
 80005ec:	42a6      	cmp	r6, r4
 80005ee:	d109      	bne.n	8000604 <__libc_init_array+0x24>
 80005f0:	4d0b      	ldr	r5, [pc, #44]	; (8000620 <__libc_init_array+0x40>)
 80005f2:	4c0c      	ldr	r4, [pc, #48]	; (8000624 <__libc_init_array+0x44>)
 80005f4:	f001 f824 	bl	8001640 <_init>
 80005f8:	1b64      	subs	r4, r4, r5
 80005fa:	10a4      	asrs	r4, r4, #2
 80005fc:	2600      	movs	r6, #0
 80005fe:	42a6      	cmp	r6, r4
 8000600:	d105      	bne.n	800060e <__libc_init_array+0x2e>
 8000602:	bd70      	pop	{r4, r5, r6, pc}
 8000604:	f855 3b04 	ldr.w	r3, [r5], #4
 8000608:	4798      	blx	r3
 800060a:	3601      	adds	r6, #1
 800060c:	e7ee      	b.n	80005ec <__libc_init_array+0xc>
 800060e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000612:	4798      	blx	r3
 8000614:	3601      	adds	r6, #1
 8000616:	e7f2      	b.n	80005fe <__libc_init_array+0x1e>
 8000618:	08001724 	.word	0x08001724
 800061c:	08001724 	.word	0x08001724
 8000620:	08001724 	.word	0x08001724
 8000624:	08001728 	.word	0x08001728

08000628 <memset>:
 8000628:	4402      	add	r2, r0
 800062a:	4603      	mov	r3, r0
 800062c:	4293      	cmp	r3, r2
 800062e:	d100      	bne.n	8000632 <memset+0xa>
 8000630:	4770      	bx	lr
 8000632:	f803 1b01 	strb.w	r1, [r3], #1
 8000636:	e7f9      	b.n	800062c <memset+0x4>

08000638 <iprintf>:
 8000638:	b40f      	push	{r0, r1, r2, r3}
 800063a:	4b0a      	ldr	r3, [pc, #40]	; (8000664 <iprintf+0x2c>)
 800063c:	b513      	push	{r0, r1, r4, lr}
 800063e:	681c      	ldr	r4, [r3, #0]
 8000640:	b124      	cbz	r4, 800064c <iprintf+0x14>
 8000642:	69a3      	ldr	r3, [r4, #24]
 8000644:	b913      	cbnz	r3, 800064c <iprintf+0x14>
 8000646:	4620      	mov	r0, r4
 8000648:	f000 fa5e 	bl	8000b08 <__sinit>
 800064c:	ab05      	add	r3, sp, #20
 800064e:	9a04      	ldr	r2, [sp, #16]
 8000650:	68a1      	ldr	r1, [r4, #8]
 8000652:	9301      	str	r3, [sp, #4]
 8000654:	4620      	mov	r0, r4
 8000656:	f000 fc67 	bl	8000f28 <_vfiprintf_r>
 800065a:	b002      	add	sp, #8
 800065c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000660:	b004      	add	sp, #16
 8000662:	4770      	bx	lr
 8000664:	20000000 	.word	0x20000000

08000668 <_puts_r>:
 8000668:	b570      	push	{r4, r5, r6, lr}
 800066a:	460e      	mov	r6, r1
 800066c:	4605      	mov	r5, r0
 800066e:	b118      	cbz	r0, 8000678 <_puts_r+0x10>
 8000670:	6983      	ldr	r3, [r0, #24]
 8000672:	b90b      	cbnz	r3, 8000678 <_puts_r+0x10>
 8000674:	f000 fa48 	bl	8000b08 <__sinit>
 8000678:	69ab      	ldr	r3, [r5, #24]
 800067a:	68ac      	ldr	r4, [r5, #8]
 800067c:	b913      	cbnz	r3, 8000684 <_puts_r+0x1c>
 800067e:	4628      	mov	r0, r5
 8000680:	f000 fa42 	bl	8000b08 <__sinit>
 8000684:	4b2c      	ldr	r3, [pc, #176]	; (8000738 <_puts_r+0xd0>)
 8000686:	429c      	cmp	r4, r3
 8000688:	d120      	bne.n	80006cc <_puts_r+0x64>
 800068a:	686c      	ldr	r4, [r5, #4]
 800068c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800068e:	07db      	lsls	r3, r3, #31
 8000690:	d405      	bmi.n	800069e <_puts_r+0x36>
 8000692:	89a3      	ldrh	r3, [r4, #12]
 8000694:	0598      	lsls	r0, r3, #22
 8000696:	d402      	bmi.n	800069e <_puts_r+0x36>
 8000698:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800069a:	f000 fad3 	bl	8000c44 <__retarget_lock_acquire_recursive>
 800069e:	89a3      	ldrh	r3, [r4, #12]
 80006a0:	0719      	lsls	r1, r3, #28
 80006a2:	d51d      	bpl.n	80006e0 <_puts_r+0x78>
 80006a4:	6923      	ldr	r3, [r4, #16]
 80006a6:	b1db      	cbz	r3, 80006e0 <_puts_r+0x78>
 80006a8:	3e01      	subs	r6, #1
 80006aa:	68a3      	ldr	r3, [r4, #8]
 80006ac:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80006b0:	3b01      	subs	r3, #1
 80006b2:	60a3      	str	r3, [r4, #8]
 80006b4:	bb39      	cbnz	r1, 8000706 <_puts_r+0x9e>
 80006b6:	2b00      	cmp	r3, #0
 80006b8:	da38      	bge.n	800072c <_puts_r+0xc4>
 80006ba:	4622      	mov	r2, r4
 80006bc:	210a      	movs	r1, #10
 80006be:	4628      	mov	r0, r5
 80006c0:	f000 f848 	bl	8000754 <__swbuf_r>
 80006c4:	3001      	adds	r0, #1
 80006c6:	d011      	beq.n	80006ec <_puts_r+0x84>
 80006c8:	250a      	movs	r5, #10
 80006ca:	e011      	b.n	80006f0 <_puts_r+0x88>
 80006cc:	4b1b      	ldr	r3, [pc, #108]	; (800073c <_puts_r+0xd4>)
 80006ce:	429c      	cmp	r4, r3
 80006d0:	d101      	bne.n	80006d6 <_puts_r+0x6e>
 80006d2:	68ac      	ldr	r4, [r5, #8]
 80006d4:	e7da      	b.n	800068c <_puts_r+0x24>
 80006d6:	4b1a      	ldr	r3, [pc, #104]	; (8000740 <_puts_r+0xd8>)
 80006d8:	429c      	cmp	r4, r3
 80006da:	bf08      	it	eq
 80006dc:	68ec      	ldreq	r4, [r5, #12]
 80006de:	e7d5      	b.n	800068c <_puts_r+0x24>
 80006e0:	4621      	mov	r1, r4
 80006e2:	4628      	mov	r0, r5
 80006e4:	f000 f888 	bl	80007f8 <__swsetup_r>
 80006e8:	2800      	cmp	r0, #0
 80006ea:	d0dd      	beq.n	80006a8 <_puts_r+0x40>
 80006ec:	f04f 35ff 	mov.w	r5, #4294967295
 80006f0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80006f2:	07da      	lsls	r2, r3, #31
 80006f4:	d405      	bmi.n	8000702 <_puts_r+0x9a>
 80006f6:	89a3      	ldrh	r3, [r4, #12]
 80006f8:	059b      	lsls	r3, r3, #22
 80006fa:	d402      	bmi.n	8000702 <_puts_r+0x9a>
 80006fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006fe:	f000 faa2 	bl	8000c46 <__retarget_lock_release_recursive>
 8000702:	4628      	mov	r0, r5
 8000704:	bd70      	pop	{r4, r5, r6, pc}
 8000706:	2b00      	cmp	r3, #0
 8000708:	da04      	bge.n	8000714 <_puts_r+0xac>
 800070a:	69a2      	ldr	r2, [r4, #24]
 800070c:	429a      	cmp	r2, r3
 800070e:	dc06      	bgt.n	800071e <_puts_r+0xb6>
 8000710:	290a      	cmp	r1, #10
 8000712:	d004      	beq.n	800071e <_puts_r+0xb6>
 8000714:	6823      	ldr	r3, [r4, #0]
 8000716:	1c5a      	adds	r2, r3, #1
 8000718:	6022      	str	r2, [r4, #0]
 800071a:	7019      	strb	r1, [r3, #0]
 800071c:	e7c5      	b.n	80006aa <_puts_r+0x42>
 800071e:	4622      	mov	r2, r4
 8000720:	4628      	mov	r0, r5
 8000722:	f000 f817 	bl	8000754 <__swbuf_r>
 8000726:	3001      	adds	r0, #1
 8000728:	d1bf      	bne.n	80006aa <_puts_r+0x42>
 800072a:	e7df      	b.n	80006ec <_puts_r+0x84>
 800072c:	6823      	ldr	r3, [r4, #0]
 800072e:	250a      	movs	r5, #10
 8000730:	1c5a      	adds	r2, r3, #1
 8000732:	6022      	str	r2, [r4, #0]
 8000734:	701d      	strb	r5, [r3, #0]
 8000736:	e7db      	b.n	80006f0 <_puts_r+0x88>
 8000738:	080016b0 	.word	0x080016b0
 800073c:	080016d0 	.word	0x080016d0
 8000740:	08001690 	.word	0x08001690

08000744 <puts>:
 8000744:	4b02      	ldr	r3, [pc, #8]	; (8000750 <puts+0xc>)
 8000746:	4601      	mov	r1, r0
 8000748:	6818      	ldr	r0, [r3, #0]
 800074a:	f7ff bf8d 	b.w	8000668 <_puts_r>
 800074e:	bf00      	nop
 8000750:	20000000 	.word	0x20000000

08000754 <__swbuf_r>:
 8000754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000756:	460e      	mov	r6, r1
 8000758:	4614      	mov	r4, r2
 800075a:	4605      	mov	r5, r0
 800075c:	b118      	cbz	r0, 8000766 <__swbuf_r+0x12>
 800075e:	6983      	ldr	r3, [r0, #24]
 8000760:	b90b      	cbnz	r3, 8000766 <__swbuf_r+0x12>
 8000762:	f000 f9d1 	bl	8000b08 <__sinit>
 8000766:	4b21      	ldr	r3, [pc, #132]	; (80007ec <__swbuf_r+0x98>)
 8000768:	429c      	cmp	r4, r3
 800076a:	d12b      	bne.n	80007c4 <__swbuf_r+0x70>
 800076c:	686c      	ldr	r4, [r5, #4]
 800076e:	69a3      	ldr	r3, [r4, #24]
 8000770:	60a3      	str	r3, [r4, #8]
 8000772:	89a3      	ldrh	r3, [r4, #12]
 8000774:	071a      	lsls	r2, r3, #28
 8000776:	d52f      	bpl.n	80007d8 <__swbuf_r+0x84>
 8000778:	6923      	ldr	r3, [r4, #16]
 800077a:	b36b      	cbz	r3, 80007d8 <__swbuf_r+0x84>
 800077c:	6923      	ldr	r3, [r4, #16]
 800077e:	6820      	ldr	r0, [r4, #0]
 8000780:	1ac0      	subs	r0, r0, r3
 8000782:	6963      	ldr	r3, [r4, #20]
 8000784:	b2f6      	uxtb	r6, r6
 8000786:	4283      	cmp	r3, r0
 8000788:	4637      	mov	r7, r6
 800078a:	dc04      	bgt.n	8000796 <__swbuf_r+0x42>
 800078c:	4621      	mov	r1, r4
 800078e:	4628      	mov	r0, r5
 8000790:	f000 f926 	bl	80009e0 <_fflush_r>
 8000794:	bb30      	cbnz	r0, 80007e4 <__swbuf_r+0x90>
 8000796:	68a3      	ldr	r3, [r4, #8]
 8000798:	3b01      	subs	r3, #1
 800079a:	60a3      	str	r3, [r4, #8]
 800079c:	6823      	ldr	r3, [r4, #0]
 800079e:	1c5a      	adds	r2, r3, #1
 80007a0:	6022      	str	r2, [r4, #0]
 80007a2:	701e      	strb	r6, [r3, #0]
 80007a4:	6963      	ldr	r3, [r4, #20]
 80007a6:	3001      	adds	r0, #1
 80007a8:	4283      	cmp	r3, r0
 80007aa:	d004      	beq.n	80007b6 <__swbuf_r+0x62>
 80007ac:	89a3      	ldrh	r3, [r4, #12]
 80007ae:	07db      	lsls	r3, r3, #31
 80007b0:	d506      	bpl.n	80007c0 <__swbuf_r+0x6c>
 80007b2:	2e0a      	cmp	r6, #10
 80007b4:	d104      	bne.n	80007c0 <__swbuf_r+0x6c>
 80007b6:	4621      	mov	r1, r4
 80007b8:	4628      	mov	r0, r5
 80007ba:	f000 f911 	bl	80009e0 <_fflush_r>
 80007be:	b988      	cbnz	r0, 80007e4 <__swbuf_r+0x90>
 80007c0:	4638      	mov	r0, r7
 80007c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007c4:	4b0a      	ldr	r3, [pc, #40]	; (80007f0 <__swbuf_r+0x9c>)
 80007c6:	429c      	cmp	r4, r3
 80007c8:	d101      	bne.n	80007ce <__swbuf_r+0x7a>
 80007ca:	68ac      	ldr	r4, [r5, #8]
 80007cc:	e7cf      	b.n	800076e <__swbuf_r+0x1a>
 80007ce:	4b09      	ldr	r3, [pc, #36]	; (80007f4 <__swbuf_r+0xa0>)
 80007d0:	429c      	cmp	r4, r3
 80007d2:	bf08      	it	eq
 80007d4:	68ec      	ldreq	r4, [r5, #12]
 80007d6:	e7ca      	b.n	800076e <__swbuf_r+0x1a>
 80007d8:	4621      	mov	r1, r4
 80007da:	4628      	mov	r0, r5
 80007dc:	f000 f80c 	bl	80007f8 <__swsetup_r>
 80007e0:	2800      	cmp	r0, #0
 80007e2:	d0cb      	beq.n	800077c <__swbuf_r+0x28>
 80007e4:	f04f 37ff 	mov.w	r7, #4294967295
 80007e8:	e7ea      	b.n	80007c0 <__swbuf_r+0x6c>
 80007ea:	bf00      	nop
 80007ec:	080016b0 	.word	0x080016b0
 80007f0:	080016d0 	.word	0x080016d0
 80007f4:	08001690 	.word	0x08001690

080007f8 <__swsetup_r>:
 80007f8:	4b32      	ldr	r3, [pc, #200]	; (80008c4 <__swsetup_r+0xcc>)
 80007fa:	b570      	push	{r4, r5, r6, lr}
 80007fc:	681d      	ldr	r5, [r3, #0]
 80007fe:	4606      	mov	r6, r0
 8000800:	460c      	mov	r4, r1
 8000802:	b125      	cbz	r5, 800080e <__swsetup_r+0x16>
 8000804:	69ab      	ldr	r3, [r5, #24]
 8000806:	b913      	cbnz	r3, 800080e <__swsetup_r+0x16>
 8000808:	4628      	mov	r0, r5
 800080a:	f000 f97d 	bl	8000b08 <__sinit>
 800080e:	4b2e      	ldr	r3, [pc, #184]	; (80008c8 <__swsetup_r+0xd0>)
 8000810:	429c      	cmp	r4, r3
 8000812:	d10f      	bne.n	8000834 <__swsetup_r+0x3c>
 8000814:	686c      	ldr	r4, [r5, #4]
 8000816:	89a3      	ldrh	r3, [r4, #12]
 8000818:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800081c:	0719      	lsls	r1, r3, #28
 800081e:	d42c      	bmi.n	800087a <__swsetup_r+0x82>
 8000820:	06dd      	lsls	r5, r3, #27
 8000822:	d411      	bmi.n	8000848 <__swsetup_r+0x50>
 8000824:	2309      	movs	r3, #9
 8000826:	6033      	str	r3, [r6, #0]
 8000828:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800082c:	81a3      	strh	r3, [r4, #12]
 800082e:	f04f 30ff 	mov.w	r0, #4294967295
 8000832:	e03e      	b.n	80008b2 <__swsetup_r+0xba>
 8000834:	4b25      	ldr	r3, [pc, #148]	; (80008cc <__swsetup_r+0xd4>)
 8000836:	429c      	cmp	r4, r3
 8000838:	d101      	bne.n	800083e <__swsetup_r+0x46>
 800083a:	68ac      	ldr	r4, [r5, #8]
 800083c:	e7eb      	b.n	8000816 <__swsetup_r+0x1e>
 800083e:	4b24      	ldr	r3, [pc, #144]	; (80008d0 <__swsetup_r+0xd8>)
 8000840:	429c      	cmp	r4, r3
 8000842:	bf08      	it	eq
 8000844:	68ec      	ldreq	r4, [r5, #12]
 8000846:	e7e6      	b.n	8000816 <__swsetup_r+0x1e>
 8000848:	0758      	lsls	r0, r3, #29
 800084a:	d512      	bpl.n	8000872 <__swsetup_r+0x7a>
 800084c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800084e:	b141      	cbz	r1, 8000862 <__swsetup_r+0x6a>
 8000850:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000854:	4299      	cmp	r1, r3
 8000856:	d002      	beq.n	800085e <__swsetup_r+0x66>
 8000858:	4630      	mov	r0, r6
 800085a:	f000 fa5b 	bl	8000d14 <_free_r>
 800085e:	2300      	movs	r3, #0
 8000860:	6363      	str	r3, [r4, #52]	; 0x34
 8000862:	89a3      	ldrh	r3, [r4, #12]
 8000864:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000868:	81a3      	strh	r3, [r4, #12]
 800086a:	2300      	movs	r3, #0
 800086c:	6063      	str	r3, [r4, #4]
 800086e:	6923      	ldr	r3, [r4, #16]
 8000870:	6023      	str	r3, [r4, #0]
 8000872:	89a3      	ldrh	r3, [r4, #12]
 8000874:	f043 0308 	orr.w	r3, r3, #8
 8000878:	81a3      	strh	r3, [r4, #12]
 800087a:	6923      	ldr	r3, [r4, #16]
 800087c:	b94b      	cbnz	r3, 8000892 <__swsetup_r+0x9a>
 800087e:	89a3      	ldrh	r3, [r4, #12]
 8000880:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000884:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000888:	d003      	beq.n	8000892 <__swsetup_r+0x9a>
 800088a:	4621      	mov	r1, r4
 800088c:	4630      	mov	r0, r6
 800088e:	f000 fa01 	bl	8000c94 <__smakebuf_r>
 8000892:	89a0      	ldrh	r0, [r4, #12]
 8000894:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000898:	f010 0301 	ands.w	r3, r0, #1
 800089c:	d00a      	beq.n	80008b4 <__swsetup_r+0xbc>
 800089e:	2300      	movs	r3, #0
 80008a0:	60a3      	str	r3, [r4, #8]
 80008a2:	6963      	ldr	r3, [r4, #20]
 80008a4:	425b      	negs	r3, r3
 80008a6:	61a3      	str	r3, [r4, #24]
 80008a8:	6923      	ldr	r3, [r4, #16]
 80008aa:	b943      	cbnz	r3, 80008be <__swsetup_r+0xc6>
 80008ac:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80008b0:	d1ba      	bne.n	8000828 <__swsetup_r+0x30>
 80008b2:	bd70      	pop	{r4, r5, r6, pc}
 80008b4:	0781      	lsls	r1, r0, #30
 80008b6:	bf58      	it	pl
 80008b8:	6963      	ldrpl	r3, [r4, #20]
 80008ba:	60a3      	str	r3, [r4, #8]
 80008bc:	e7f4      	b.n	80008a8 <__swsetup_r+0xb0>
 80008be:	2000      	movs	r0, #0
 80008c0:	e7f7      	b.n	80008b2 <__swsetup_r+0xba>
 80008c2:	bf00      	nop
 80008c4:	20000000 	.word	0x20000000
 80008c8:	080016b0 	.word	0x080016b0
 80008cc:	080016d0 	.word	0x080016d0
 80008d0:	08001690 	.word	0x08001690

080008d4 <__sflush_r>:
 80008d4:	898a      	ldrh	r2, [r1, #12]
 80008d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80008da:	4605      	mov	r5, r0
 80008dc:	0710      	lsls	r0, r2, #28
 80008de:	460c      	mov	r4, r1
 80008e0:	d458      	bmi.n	8000994 <__sflush_r+0xc0>
 80008e2:	684b      	ldr	r3, [r1, #4]
 80008e4:	2b00      	cmp	r3, #0
 80008e6:	dc05      	bgt.n	80008f4 <__sflush_r+0x20>
 80008e8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80008ea:	2b00      	cmp	r3, #0
 80008ec:	dc02      	bgt.n	80008f4 <__sflush_r+0x20>
 80008ee:	2000      	movs	r0, #0
 80008f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008f4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008f6:	2e00      	cmp	r6, #0
 80008f8:	d0f9      	beq.n	80008ee <__sflush_r+0x1a>
 80008fa:	2300      	movs	r3, #0
 80008fc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000900:	682f      	ldr	r7, [r5, #0]
 8000902:	602b      	str	r3, [r5, #0]
 8000904:	d032      	beq.n	800096c <__sflush_r+0x98>
 8000906:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000908:	89a3      	ldrh	r3, [r4, #12]
 800090a:	075a      	lsls	r2, r3, #29
 800090c:	d505      	bpl.n	800091a <__sflush_r+0x46>
 800090e:	6863      	ldr	r3, [r4, #4]
 8000910:	1ac0      	subs	r0, r0, r3
 8000912:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000914:	b10b      	cbz	r3, 800091a <__sflush_r+0x46>
 8000916:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000918:	1ac0      	subs	r0, r0, r3
 800091a:	2300      	movs	r3, #0
 800091c:	4602      	mov	r2, r0
 800091e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000920:	6a21      	ldr	r1, [r4, #32]
 8000922:	4628      	mov	r0, r5
 8000924:	47b0      	blx	r6
 8000926:	1c43      	adds	r3, r0, #1
 8000928:	89a3      	ldrh	r3, [r4, #12]
 800092a:	d106      	bne.n	800093a <__sflush_r+0x66>
 800092c:	6829      	ldr	r1, [r5, #0]
 800092e:	291d      	cmp	r1, #29
 8000930:	d82c      	bhi.n	800098c <__sflush_r+0xb8>
 8000932:	4a2a      	ldr	r2, [pc, #168]	; (80009dc <__sflush_r+0x108>)
 8000934:	40ca      	lsrs	r2, r1
 8000936:	07d6      	lsls	r6, r2, #31
 8000938:	d528      	bpl.n	800098c <__sflush_r+0xb8>
 800093a:	2200      	movs	r2, #0
 800093c:	6062      	str	r2, [r4, #4]
 800093e:	04d9      	lsls	r1, r3, #19
 8000940:	6922      	ldr	r2, [r4, #16]
 8000942:	6022      	str	r2, [r4, #0]
 8000944:	d504      	bpl.n	8000950 <__sflush_r+0x7c>
 8000946:	1c42      	adds	r2, r0, #1
 8000948:	d101      	bne.n	800094e <__sflush_r+0x7a>
 800094a:	682b      	ldr	r3, [r5, #0]
 800094c:	b903      	cbnz	r3, 8000950 <__sflush_r+0x7c>
 800094e:	6560      	str	r0, [r4, #84]	; 0x54
 8000950:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000952:	602f      	str	r7, [r5, #0]
 8000954:	2900      	cmp	r1, #0
 8000956:	d0ca      	beq.n	80008ee <__sflush_r+0x1a>
 8000958:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800095c:	4299      	cmp	r1, r3
 800095e:	d002      	beq.n	8000966 <__sflush_r+0x92>
 8000960:	4628      	mov	r0, r5
 8000962:	f000 f9d7 	bl	8000d14 <_free_r>
 8000966:	2000      	movs	r0, #0
 8000968:	6360      	str	r0, [r4, #52]	; 0x34
 800096a:	e7c1      	b.n	80008f0 <__sflush_r+0x1c>
 800096c:	6a21      	ldr	r1, [r4, #32]
 800096e:	2301      	movs	r3, #1
 8000970:	4628      	mov	r0, r5
 8000972:	47b0      	blx	r6
 8000974:	1c41      	adds	r1, r0, #1
 8000976:	d1c7      	bne.n	8000908 <__sflush_r+0x34>
 8000978:	682b      	ldr	r3, [r5, #0]
 800097a:	2b00      	cmp	r3, #0
 800097c:	d0c4      	beq.n	8000908 <__sflush_r+0x34>
 800097e:	2b1d      	cmp	r3, #29
 8000980:	d001      	beq.n	8000986 <__sflush_r+0xb2>
 8000982:	2b16      	cmp	r3, #22
 8000984:	d101      	bne.n	800098a <__sflush_r+0xb6>
 8000986:	602f      	str	r7, [r5, #0]
 8000988:	e7b1      	b.n	80008ee <__sflush_r+0x1a>
 800098a:	89a3      	ldrh	r3, [r4, #12]
 800098c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000990:	81a3      	strh	r3, [r4, #12]
 8000992:	e7ad      	b.n	80008f0 <__sflush_r+0x1c>
 8000994:	690f      	ldr	r7, [r1, #16]
 8000996:	2f00      	cmp	r7, #0
 8000998:	d0a9      	beq.n	80008ee <__sflush_r+0x1a>
 800099a:	0793      	lsls	r3, r2, #30
 800099c:	680e      	ldr	r6, [r1, #0]
 800099e:	bf08      	it	eq
 80009a0:	694b      	ldreq	r3, [r1, #20]
 80009a2:	600f      	str	r7, [r1, #0]
 80009a4:	bf18      	it	ne
 80009a6:	2300      	movne	r3, #0
 80009a8:	eba6 0807 	sub.w	r8, r6, r7
 80009ac:	608b      	str	r3, [r1, #8]
 80009ae:	f1b8 0f00 	cmp.w	r8, #0
 80009b2:	dd9c      	ble.n	80008ee <__sflush_r+0x1a>
 80009b4:	6a21      	ldr	r1, [r4, #32]
 80009b6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80009b8:	4643      	mov	r3, r8
 80009ba:	463a      	mov	r2, r7
 80009bc:	4628      	mov	r0, r5
 80009be:	47b0      	blx	r6
 80009c0:	2800      	cmp	r0, #0
 80009c2:	dc06      	bgt.n	80009d2 <__sflush_r+0xfe>
 80009c4:	89a3      	ldrh	r3, [r4, #12]
 80009c6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80009ca:	81a3      	strh	r3, [r4, #12]
 80009cc:	f04f 30ff 	mov.w	r0, #4294967295
 80009d0:	e78e      	b.n	80008f0 <__sflush_r+0x1c>
 80009d2:	4407      	add	r7, r0
 80009d4:	eba8 0800 	sub.w	r8, r8, r0
 80009d8:	e7e9      	b.n	80009ae <__sflush_r+0xda>
 80009da:	bf00      	nop
 80009dc:	20400001 	.word	0x20400001

080009e0 <_fflush_r>:
 80009e0:	b538      	push	{r3, r4, r5, lr}
 80009e2:	690b      	ldr	r3, [r1, #16]
 80009e4:	4605      	mov	r5, r0
 80009e6:	460c      	mov	r4, r1
 80009e8:	b913      	cbnz	r3, 80009f0 <_fflush_r+0x10>
 80009ea:	2500      	movs	r5, #0
 80009ec:	4628      	mov	r0, r5
 80009ee:	bd38      	pop	{r3, r4, r5, pc}
 80009f0:	b118      	cbz	r0, 80009fa <_fflush_r+0x1a>
 80009f2:	6983      	ldr	r3, [r0, #24]
 80009f4:	b90b      	cbnz	r3, 80009fa <_fflush_r+0x1a>
 80009f6:	f000 f887 	bl	8000b08 <__sinit>
 80009fa:	4b14      	ldr	r3, [pc, #80]	; (8000a4c <_fflush_r+0x6c>)
 80009fc:	429c      	cmp	r4, r3
 80009fe:	d11b      	bne.n	8000a38 <_fflush_r+0x58>
 8000a00:	686c      	ldr	r4, [r5, #4]
 8000a02:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a06:	2b00      	cmp	r3, #0
 8000a08:	d0ef      	beq.n	80009ea <_fflush_r+0xa>
 8000a0a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000a0c:	07d0      	lsls	r0, r2, #31
 8000a0e:	d404      	bmi.n	8000a1a <_fflush_r+0x3a>
 8000a10:	0599      	lsls	r1, r3, #22
 8000a12:	d402      	bmi.n	8000a1a <_fflush_r+0x3a>
 8000a14:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000a16:	f000 f915 	bl	8000c44 <__retarget_lock_acquire_recursive>
 8000a1a:	4628      	mov	r0, r5
 8000a1c:	4621      	mov	r1, r4
 8000a1e:	f7ff ff59 	bl	80008d4 <__sflush_r>
 8000a22:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000a24:	07da      	lsls	r2, r3, #31
 8000a26:	4605      	mov	r5, r0
 8000a28:	d4e0      	bmi.n	80009ec <_fflush_r+0xc>
 8000a2a:	89a3      	ldrh	r3, [r4, #12]
 8000a2c:	059b      	lsls	r3, r3, #22
 8000a2e:	d4dd      	bmi.n	80009ec <_fflush_r+0xc>
 8000a30:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000a32:	f000 f908 	bl	8000c46 <__retarget_lock_release_recursive>
 8000a36:	e7d9      	b.n	80009ec <_fflush_r+0xc>
 8000a38:	4b05      	ldr	r3, [pc, #20]	; (8000a50 <_fflush_r+0x70>)
 8000a3a:	429c      	cmp	r4, r3
 8000a3c:	d101      	bne.n	8000a42 <_fflush_r+0x62>
 8000a3e:	68ac      	ldr	r4, [r5, #8]
 8000a40:	e7df      	b.n	8000a02 <_fflush_r+0x22>
 8000a42:	4b04      	ldr	r3, [pc, #16]	; (8000a54 <_fflush_r+0x74>)
 8000a44:	429c      	cmp	r4, r3
 8000a46:	bf08      	it	eq
 8000a48:	68ec      	ldreq	r4, [r5, #12]
 8000a4a:	e7da      	b.n	8000a02 <_fflush_r+0x22>
 8000a4c:	080016b0 	.word	0x080016b0
 8000a50:	080016d0 	.word	0x080016d0
 8000a54:	08001690 	.word	0x08001690

08000a58 <std>:
 8000a58:	2300      	movs	r3, #0
 8000a5a:	b510      	push	{r4, lr}
 8000a5c:	4604      	mov	r4, r0
 8000a5e:	e9c0 3300 	strd	r3, r3, [r0]
 8000a62:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000a66:	6083      	str	r3, [r0, #8]
 8000a68:	8181      	strh	r1, [r0, #12]
 8000a6a:	6643      	str	r3, [r0, #100]	; 0x64
 8000a6c:	81c2      	strh	r2, [r0, #14]
 8000a6e:	6183      	str	r3, [r0, #24]
 8000a70:	4619      	mov	r1, r3
 8000a72:	2208      	movs	r2, #8
 8000a74:	305c      	adds	r0, #92	; 0x5c
 8000a76:	f7ff fdd7 	bl	8000628 <memset>
 8000a7a:	4b05      	ldr	r3, [pc, #20]	; (8000a90 <std+0x38>)
 8000a7c:	6263      	str	r3, [r4, #36]	; 0x24
 8000a7e:	4b05      	ldr	r3, [pc, #20]	; (8000a94 <std+0x3c>)
 8000a80:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a82:	4b05      	ldr	r3, [pc, #20]	; (8000a98 <std+0x40>)
 8000a84:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a86:	4b05      	ldr	r3, [pc, #20]	; (8000a9c <std+0x44>)
 8000a88:	6224      	str	r4, [r4, #32]
 8000a8a:	6323      	str	r3, [r4, #48]	; 0x30
 8000a8c:	bd10      	pop	{r4, pc}
 8000a8e:	bf00      	nop
 8000a90:	080014d1 	.word	0x080014d1
 8000a94:	080014f3 	.word	0x080014f3
 8000a98:	0800152b 	.word	0x0800152b
 8000a9c:	0800154f 	.word	0x0800154f

08000aa0 <_cleanup_r>:
 8000aa0:	4901      	ldr	r1, [pc, #4]	; (8000aa8 <_cleanup_r+0x8>)
 8000aa2:	f000 b8af 	b.w	8000c04 <_fwalk_reent>
 8000aa6:	bf00      	nop
 8000aa8:	080009e1 	.word	0x080009e1

08000aac <__sfmoreglue>:
 8000aac:	b570      	push	{r4, r5, r6, lr}
 8000aae:	2268      	movs	r2, #104	; 0x68
 8000ab0:	1e4d      	subs	r5, r1, #1
 8000ab2:	4355      	muls	r5, r2
 8000ab4:	460e      	mov	r6, r1
 8000ab6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000aba:	f000 f997 	bl	8000dec <_malloc_r>
 8000abe:	4604      	mov	r4, r0
 8000ac0:	b140      	cbz	r0, 8000ad4 <__sfmoreglue+0x28>
 8000ac2:	2100      	movs	r1, #0
 8000ac4:	e9c0 1600 	strd	r1, r6, [r0]
 8000ac8:	300c      	adds	r0, #12
 8000aca:	60a0      	str	r0, [r4, #8]
 8000acc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000ad0:	f7ff fdaa 	bl	8000628 <memset>
 8000ad4:	4620      	mov	r0, r4
 8000ad6:	bd70      	pop	{r4, r5, r6, pc}

08000ad8 <__sfp_lock_acquire>:
 8000ad8:	4801      	ldr	r0, [pc, #4]	; (8000ae0 <__sfp_lock_acquire+0x8>)
 8000ada:	f000 b8b3 	b.w	8000c44 <__retarget_lock_acquire_recursive>
 8000ade:	bf00      	nop
 8000ae0:	20000085 	.word	0x20000085

08000ae4 <__sfp_lock_release>:
 8000ae4:	4801      	ldr	r0, [pc, #4]	; (8000aec <__sfp_lock_release+0x8>)
 8000ae6:	f000 b8ae 	b.w	8000c46 <__retarget_lock_release_recursive>
 8000aea:	bf00      	nop
 8000aec:	20000085 	.word	0x20000085

08000af0 <__sinit_lock_acquire>:
 8000af0:	4801      	ldr	r0, [pc, #4]	; (8000af8 <__sinit_lock_acquire+0x8>)
 8000af2:	f000 b8a7 	b.w	8000c44 <__retarget_lock_acquire_recursive>
 8000af6:	bf00      	nop
 8000af8:	20000086 	.word	0x20000086

08000afc <__sinit_lock_release>:
 8000afc:	4801      	ldr	r0, [pc, #4]	; (8000b04 <__sinit_lock_release+0x8>)
 8000afe:	f000 b8a2 	b.w	8000c46 <__retarget_lock_release_recursive>
 8000b02:	bf00      	nop
 8000b04:	20000086 	.word	0x20000086

08000b08 <__sinit>:
 8000b08:	b510      	push	{r4, lr}
 8000b0a:	4604      	mov	r4, r0
 8000b0c:	f7ff fff0 	bl	8000af0 <__sinit_lock_acquire>
 8000b10:	69a3      	ldr	r3, [r4, #24]
 8000b12:	b11b      	cbz	r3, 8000b1c <__sinit+0x14>
 8000b14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b18:	f7ff bff0 	b.w	8000afc <__sinit_lock_release>
 8000b1c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000b20:	6523      	str	r3, [r4, #80]	; 0x50
 8000b22:	4b13      	ldr	r3, [pc, #76]	; (8000b70 <__sinit+0x68>)
 8000b24:	4a13      	ldr	r2, [pc, #76]	; (8000b74 <__sinit+0x6c>)
 8000b26:	681b      	ldr	r3, [r3, #0]
 8000b28:	62a2      	str	r2, [r4, #40]	; 0x28
 8000b2a:	42a3      	cmp	r3, r4
 8000b2c:	bf04      	itt	eq
 8000b2e:	2301      	moveq	r3, #1
 8000b30:	61a3      	streq	r3, [r4, #24]
 8000b32:	4620      	mov	r0, r4
 8000b34:	f000 f820 	bl	8000b78 <__sfp>
 8000b38:	6060      	str	r0, [r4, #4]
 8000b3a:	4620      	mov	r0, r4
 8000b3c:	f000 f81c 	bl	8000b78 <__sfp>
 8000b40:	60a0      	str	r0, [r4, #8]
 8000b42:	4620      	mov	r0, r4
 8000b44:	f000 f818 	bl	8000b78 <__sfp>
 8000b48:	2200      	movs	r2, #0
 8000b4a:	60e0      	str	r0, [r4, #12]
 8000b4c:	2104      	movs	r1, #4
 8000b4e:	6860      	ldr	r0, [r4, #4]
 8000b50:	f7ff ff82 	bl	8000a58 <std>
 8000b54:	68a0      	ldr	r0, [r4, #8]
 8000b56:	2201      	movs	r2, #1
 8000b58:	2109      	movs	r1, #9
 8000b5a:	f7ff ff7d 	bl	8000a58 <std>
 8000b5e:	68e0      	ldr	r0, [r4, #12]
 8000b60:	2202      	movs	r2, #2
 8000b62:	2112      	movs	r1, #18
 8000b64:	f7ff ff78 	bl	8000a58 <std>
 8000b68:	2301      	movs	r3, #1
 8000b6a:	61a3      	str	r3, [r4, #24]
 8000b6c:	e7d2      	b.n	8000b14 <__sinit+0xc>
 8000b6e:	bf00      	nop
 8000b70:	0800168c 	.word	0x0800168c
 8000b74:	08000aa1 	.word	0x08000aa1

08000b78 <__sfp>:
 8000b78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b7a:	4607      	mov	r7, r0
 8000b7c:	f7ff ffac 	bl	8000ad8 <__sfp_lock_acquire>
 8000b80:	4b1e      	ldr	r3, [pc, #120]	; (8000bfc <__sfp+0x84>)
 8000b82:	681e      	ldr	r6, [r3, #0]
 8000b84:	69b3      	ldr	r3, [r6, #24]
 8000b86:	b913      	cbnz	r3, 8000b8e <__sfp+0x16>
 8000b88:	4630      	mov	r0, r6
 8000b8a:	f7ff ffbd 	bl	8000b08 <__sinit>
 8000b8e:	3648      	adds	r6, #72	; 0x48
 8000b90:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000b94:	3b01      	subs	r3, #1
 8000b96:	d503      	bpl.n	8000ba0 <__sfp+0x28>
 8000b98:	6833      	ldr	r3, [r6, #0]
 8000b9a:	b30b      	cbz	r3, 8000be0 <__sfp+0x68>
 8000b9c:	6836      	ldr	r6, [r6, #0]
 8000b9e:	e7f7      	b.n	8000b90 <__sfp+0x18>
 8000ba0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000ba4:	b9d5      	cbnz	r5, 8000bdc <__sfp+0x64>
 8000ba6:	4b16      	ldr	r3, [pc, #88]	; (8000c00 <__sfp+0x88>)
 8000ba8:	60e3      	str	r3, [r4, #12]
 8000baa:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000bae:	6665      	str	r5, [r4, #100]	; 0x64
 8000bb0:	f000 f847 	bl	8000c42 <__retarget_lock_init_recursive>
 8000bb4:	f7ff ff96 	bl	8000ae4 <__sfp_lock_release>
 8000bb8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000bbc:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000bc0:	6025      	str	r5, [r4, #0]
 8000bc2:	61a5      	str	r5, [r4, #24]
 8000bc4:	2208      	movs	r2, #8
 8000bc6:	4629      	mov	r1, r5
 8000bc8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000bcc:	f7ff fd2c 	bl	8000628 <memset>
 8000bd0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000bd4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000bd8:	4620      	mov	r0, r4
 8000bda:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000bdc:	3468      	adds	r4, #104	; 0x68
 8000bde:	e7d9      	b.n	8000b94 <__sfp+0x1c>
 8000be0:	2104      	movs	r1, #4
 8000be2:	4638      	mov	r0, r7
 8000be4:	f7ff ff62 	bl	8000aac <__sfmoreglue>
 8000be8:	4604      	mov	r4, r0
 8000bea:	6030      	str	r0, [r6, #0]
 8000bec:	2800      	cmp	r0, #0
 8000bee:	d1d5      	bne.n	8000b9c <__sfp+0x24>
 8000bf0:	f7ff ff78 	bl	8000ae4 <__sfp_lock_release>
 8000bf4:	230c      	movs	r3, #12
 8000bf6:	603b      	str	r3, [r7, #0]
 8000bf8:	e7ee      	b.n	8000bd8 <__sfp+0x60>
 8000bfa:	bf00      	nop
 8000bfc:	0800168c 	.word	0x0800168c
 8000c00:	ffff0001 	.word	0xffff0001

08000c04 <_fwalk_reent>:
 8000c04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c08:	4606      	mov	r6, r0
 8000c0a:	4688      	mov	r8, r1
 8000c0c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000c10:	2700      	movs	r7, #0
 8000c12:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000c16:	f1b9 0901 	subs.w	r9, r9, #1
 8000c1a:	d505      	bpl.n	8000c28 <_fwalk_reent+0x24>
 8000c1c:	6824      	ldr	r4, [r4, #0]
 8000c1e:	2c00      	cmp	r4, #0
 8000c20:	d1f7      	bne.n	8000c12 <_fwalk_reent+0xe>
 8000c22:	4638      	mov	r0, r7
 8000c24:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000c28:	89ab      	ldrh	r3, [r5, #12]
 8000c2a:	2b01      	cmp	r3, #1
 8000c2c:	d907      	bls.n	8000c3e <_fwalk_reent+0x3a>
 8000c2e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000c32:	3301      	adds	r3, #1
 8000c34:	d003      	beq.n	8000c3e <_fwalk_reent+0x3a>
 8000c36:	4629      	mov	r1, r5
 8000c38:	4630      	mov	r0, r6
 8000c3a:	47c0      	blx	r8
 8000c3c:	4307      	orrs	r7, r0
 8000c3e:	3568      	adds	r5, #104	; 0x68
 8000c40:	e7e9      	b.n	8000c16 <_fwalk_reent+0x12>

08000c42 <__retarget_lock_init_recursive>:
 8000c42:	4770      	bx	lr

08000c44 <__retarget_lock_acquire_recursive>:
 8000c44:	4770      	bx	lr

08000c46 <__retarget_lock_release_recursive>:
 8000c46:	4770      	bx	lr

08000c48 <__swhatbuf_r>:
 8000c48:	b570      	push	{r4, r5, r6, lr}
 8000c4a:	460e      	mov	r6, r1
 8000c4c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c50:	2900      	cmp	r1, #0
 8000c52:	b096      	sub	sp, #88	; 0x58
 8000c54:	4614      	mov	r4, r2
 8000c56:	461d      	mov	r5, r3
 8000c58:	da08      	bge.n	8000c6c <__swhatbuf_r+0x24>
 8000c5a:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000c5e:	2200      	movs	r2, #0
 8000c60:	602a      	str	r2, [r5, #0]
 8000c62:	061a      	lsls	r2, r3, #24
 8000c64:	d410      	bmi.n	8000c88 <__swhatbuf_r+0x40>
 8000c66:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000c6a:	e00e      	b.n	8000c8a <__swhatbuf_r+0x42>
 8000c6c:	466a      	mov	r2, sp
 8000c6e:	f000 fc95 	bl	800159c <_fstat_r>
 8000c72:	2800      	cmp	r0, #0
 8000c74:	dbf1      	blt.n	8000c5a <__swhatbuf_r+0x12>
 8000c76:	9a01      	ldr	r2, [sp, #4]
 8000c78:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000c7c:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000c80:	425a      	negs	r2, r3
 8000c82:	415a      	adcs	r2, r3
 8000c84:	602a      	str	r2, [r5, #0]
 8000c86:	e7ee      	b.n	8000c66 <__swhatbuf_r+0x1e>
 8000c88:	2340      	movs	r3, #64	; 0x40
 8000c8a:	2000      	movs	r0, #0
 8000c8c:	6023      	str	r3, [r4, #0]
 8000c8e:	b016      	add	sp, #88	; 0x58
 8000c90:	bd70      	pop	{r4, r5, r6, pc}
	...

08000c94 <__smakebuf_r>:
 8000c94:	898b      	ldrh	r3, [r1, #12]
 8000c96:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000c98:	079d      	lsls	r5, r3, #30
 8000c9a:	4606      	mov	r6, r0
 8000c9c:	460c      	mov	r4, r1
 8000c9e:	d507      	bpl.n	8000cb0 <__smakebuf_r+0x1c>
 8000ca0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000ca4:	6023      	str	r3, [r4, #0]
 8000ca6:	6123      	str	r3, [r4, #16]
 8000ca8:	2301      	movs	r3, #1
 8000caa:	6163      	str	r3, [r4, #20]
 8000cac:	b002      	add	sp, #8
 8000cae:	bd70      	pop	{r4, r5, r6, pc}
 8000cb0:	ab01      	add	r3, sp, #4
 8000cb2:	466a      	mov	r2, sp
 8000cb4:	f7ff ffc8 	bl	8000c48 <__swhatbuf_r>
 8000cb8:	9900      	ldr	r1, [sp, #0]
 8000cba:	4605      	mov	r5, r0
 8000cbc:	4630      	mov	r0, r6
 8000cbe:	f000 f895 	bl	8000dec <_malloc_r>
 8000cc2:	b948      	cbnz	r0, 8000cd8 <__smakebuf_r+0x44>
 8000cc4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000cc8:	059a      	lsls	r2, r3, #22
 8000cca:	d4ef      	bmi.n	8000cac <__smakebuf_r+0x18>
 8000ccc:	f023 0303 	bic.w	r3, r3, #3
 8000cd0:	f043 0302 	orr.w	r3, r3, #2
 8000cd4:	81a3      	strh	r3, [r4, #12]
 8000cd6:	e7e3      	b.n	8000ca0 <__smakebuf_r+0xc>
 8000cd8:	4b0d      	ldr	r3, [pc, #52]	; (8000d10 <__smakebuf_r+0x7c>)
 8000cda:	62b3      	str	r3, [r6, #40]	; 0x28
 8000cdc:	89a3      	ldrh	r3, [r4, #12]
 8000cde:	6020      	str	r0, [r4, #0]
 8000ce0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000ce4:	81a3      	strh	r3, [r4, #12]
 8000ce6:	9b00      	ldr	r3, [sp, #0]
 8000ce8:	6163      	str	r3, [r4, #20]
 8000cea:	9b01      	ldr	r3, [sp, #4]
 8000cec:	6120      	str	r0, [r4, #16]
 8000cee:	b15b      	cbz	r3, 8000d08 <__smakebuf_r+0x74>
 8000cf0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000cf4:	4630      	mov	r0, r6
 8000cf6:	f000 fc63 	bl	80015c0 <_isatty_r>
 8000cfa:	b128      	cbz	r0, 8000d08 <__smakebuf_r+0x74>
 8000cfc:	89a3      	ldrh	r3, [r4, #12]
 8000cfe:	f023 0303 	bic.w	r3, r3, #3
 8000d02:	f043 0301 	orr.w	r3, r3, #1
 8000d06:	81a3      	strh	r3, [r4, #12]
 8000d08:	89a0      	ldrh	r0, [r4, #12]
 8000d0a:	4305      	orrs	r5, r0
 8000d0c:	81a5      	strh	r5, [r4, #12]
 8000d0e:	e7cd      	b.n	8000cac <__smakebuf_r+0x18>
 8000d10:	08000aa1 	.word	0x08000aa1

08000d14 <_free_r>:
 8000d14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000d16:	2900      	cmp	r1, #0
 8000d18:	d044      	beq.n	8000da4 <_free_r+0x90>
 8000d1a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000d1e:	9001      	str	r0, [sp, #4]
 8000d20:	2b00      	cmp	r3, #0
 8000d22:	f1a1 0404 	sub.w	r4, r1, #4
 8000d26:	bfb8      	it	lt
 8000d28:	18e4      	addlt	r4, r4, r3
 8000d2a:	f000 fc6b 	bl	8001604 <__malloc_lock>
 8000d2e:	4a1e      	ldr	r2, [pc, #120]	; (8000da8 <_free_r+0x94>)
 8000d30:	9801      	ldr	r0, [sp, #4]
 8000d32:	6813      	ldr	r3, [r2, #0]
 8000d34:	b933      	cbnz	r3, 8000d44 <_free_r+0x30>
 8000d36:	6063      	str	r3, [r4, #4]
 8000d38:	6014      	str	r4, [r2, #0]
 8000d3a:	b003      	add	sp, #12
 8000d3c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000d40:	f000 bc66 	b.w	8001610 <__malloc_unlock>
 8000d44:	42a3      	cmp	r3, r4
 8000d46:	d908      	bls.n	8000d5a <_free_r+0x46>
 8000d48:	6825      	ldr	r5, [r4, #0]
 8000d4a:	1961      	adds	r1, r4, r5
 8000d4c:	428b      	cmp	r3, r1
 8000d4e:	bf01      	itttt	eq
 8000d50:	6819      	ldreq	r1, [r3, #0]
 8000d52:	685b      	ldreq	r3, [r3, #4]
 8000d54:	1949      	addeq	r1, r1, r5
 8000d56:	6021      	streq	r1, [r4, #0]
 8000d58:	e7ed      	b.n	8000d36 <_free_r+0x22>
 8000d5a:	461a      	mov	r2, r3
 8000d5c:	685b      	ldr	r3, [r3, #4]
 8000d5e:	b10b      	cbz	r3, 8000d64 <_free_r+0x50>
 8000d60:	42a3      	cmp	r3, r4
 8000d62:	d9fa      	bls.n	8000d5a <_free_r+0x46>
 8000d64:	6811      	ldr	r1, [r2, #0]
 8000d66:	1855      	adds	r5, r2, r1
 8000d68:	42a5      	cmp	r5, r4
 8000d6a:	d10b      	bne.n	8000d84 <_free_r+0x70>
 8000d6c:	6824      	ldr	r4, [r4, #0]
 8000d6e:	4421      	add	r1, r4
 8000d70:	1854      	adds	r4, r2, r1
 8000d72:	42a3      	cmp	r3, r4
 8000d74:	6011      	str	r1, [r2, #0]
 8000d76:	d1e0      	bne.n	8000d3a <_free_r+0x26>
 8000d78:	681c      	ldr	r4, [r3, #0]
 8000d7a:	685b      	ldr	r3, [r3, #4]
 8000d7c:	6053      	str	r3, [r2, #4]
 8000d7e:	4421      	add	r1, r4
 8000d80:	6011      	str	r1, [r2, #0]
 8000d82:	e7da      	b.n	8000d3a <_free_r+0x26>
 8000d84:	d902      	bls.n	8000d8c <_free_r+0x78>
 8000d86:	230c      	movs	r3, #12
 8000d88:	6003      	str	r3, [r0, #0]
 8000d8a:	e7d6      	b.n	8000d3a <_free_r+0x26>
 8000d8c:	6825      	ldr	r5, [r4, #0]
 8000d8e:	1961      	adds	r1, r4, r5
 8000d90:	428b      	cmp	r3, r1
 8000d92:	bf04      	itt	eq
 8000d94:	6819      	ldreq	r1, [r3, #0]
 8000d96:	685b      	ldreq	r3, [r3, #4]
 8000d98:	6063      	str	r3, [r4, #4]
 8000d9a:	bf04      	itt	eq
 8000d9c:	1949      	addeq	r1, r1, r5
 8000d9e:	6021      	streq	r1, [r4, #0]
 8000da0:	6054      	str	r4, [r2, #4]
 8000da2:	e7ca      	b.n	8000d3a <_free_r+0x26>
 8000da4:	b003      	add	sp, #12
 8000da6:	bd30      	pop	{r4, r5, pc}
 8000da8:	20000088 	.word	0x20000088

08000dac <sbrk_aligned>:
 8000dac:	b570      	push	{r4, r5, r6, lr}
 8000dae:	4e0e      	ldr	r6, [pc, #56]	; (8000de8 <sbrk_aligned+0x3c>)
 8000db0:	460c      	mov	r4, r1
 8000db2:	6831      	ldr	r1, [r6, #0]
 8000db4:	4605      	mov	r5, r0
 8000db6:	b911      	cbnz	r1, 8000dbe <sbrk_aligned+0x12>
 8000db8:	f000 fb7a 	bl	80014b0 <_sbrk_r>
 8000dbc:	6030      	str	r0, [r6, #0]
 8000dbe:	4621      	mov	r1, r4
 8000dc0:	4628      	mov	r0, r5
 8000dc2:	f000 fb75 	bl	80014b0 <_sbrk_r>
 8000dc6:	1c43      	adds	r3, r0, #1
 8000dc8:	d00a      	beq.n	8000de0 <sbrk_aligned+0x34>
 8000dca:	1cc4      	adds	r4, r0, #3
 8000dcc:	f024 0403 	bic.w	r4, r4, #3
 8000dd0:	42a0      	cmp	r0, r4
 8000dd2:	d007      	beq.n	8000de4 <sbrk_aligned+0x38>
 8000dd4:	1a21      	subs	r1, r4, r0
 8000dd6:	4628      	mov	r0, r5
 8000dd8:	f000 fb6a 	bl	80014b0 <_sbrk_r>
 8000ddc:	3001      	adds	r0, #1
 8000dde:	d101      	bne.n	8000de4 <sbrk_aligned+0x38>
 8000de0:	f04f 34ff 	mov.w	r4, #4294967295
 8000de4:	4620      	mov	r0, r4
 8000de6:	bd70      	pop	{r4, r5, r6, pc}
 8000de8:	2000008c 	.word	0x2000008c

08000dec <_malloc_r>:
 8000dec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000df0:	1ccd      	adds	r5, r1, #3
 8000df2:	f025 0503 	bic.w	r5, r5, #3
 8000df6:	3508      	adds	r5, #8
 8000df8:	2d0c      	cmp	r5, #12
 8000dfa:	bf38      	it	cc
 8000dfc:	250c      	movcc	r5, #12
 8000dfe:	2d00      	cmp	r5, #0
 8000e00:	4607      	mov	r7, r0
 8000e02:	db01      	blt.n	8000e08 <_malloc_r+0x1c>
 8000e04:	42a9      	cmp	r1, r5
 8000e06:	d905      	bls.n	8000e14 <_malloc_r+0x28>
 8000e08:	230c      	movs	r3, #12
 8000e0a:	603b      	str	r3, [r7, #0]
 8000e0c:	2600      	movs	r6, #0
 8000e0e:	4630      	mov	r0, r6
 8000e10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000e14:	4e2e      	ldr	r6, [pc, #184]	; (8000ed0 <_malloc_r+0xe4>)
 8000e16:	f000 fbf5 	bl	8001604 <__malloc_lock>
 8000e1a:	6833      	ldr	r3, [r6, #0]
 8000e1c:	461c      	mov	r4, r3
 8000e1e:	bb34      	cbnz	r4, 8000e6e <_malloc_r+0x82>
 8000e20:	4629      	mov	r1, r5
 8000e22:	4638      	mov	r0, r7
 8000e24:	f7ff ffc2 	bl	8000dac <sbrk_aligned>
 8000e28:	1c43      	adds	r3, r0, #1
 8000e2a:	4604      	mov	r4, r0
 8000e2c:	d14d      	bne.n	8000eca <_malloc_r+0xde>
 8000e2e:	6834      	ldr	r4, [r6, #0]
 8000e30:	4626      	mov	r6, r4
 8000e32:	2e00      	cmp	r6, #0
 8000e34:	d140      	bne.n	8000eb8 <_malloc_r+0xcc>
 8000e36:	6823      	ldr	r3, [r4, #0]
 8000e38:	4631      	mov	r1, r6
 8000e3a:	4638      	mov	r0, r7
 8000e3c:	eb04 0803 	add.w	r8, r4, r3
 8000e40:	f000 fb36 	bl	80014b0 <_sbrk_r>
 8000e44:	4580      	cmp	r8, r0
 8000e46:	d13a      	bne.n	8000ebe <_malloc_r+0xd2>
 8000e48:	6821      	ldr	r1, [r4, #0]
 8000e4a:	3503      	adds	r5, #3
 8000e4c:	1a6d      	subs	r5, r5, r1
 8000e4e:	f025 0503 	bic.w	r5, r5, #3
 8000e52:	3508      	adds	r5, #8
 8000e54:	2d0c      	cmp	r5, #12
 8000e56:	bf38      	it	cc
 8000e58:	250c      	movcc	r5, #12
 8000e5a:	4629      	mov	r1, r5
 8000e5c:	4638      	mov	r0, r7
 8000e5e:	f7ff ffa5 	bl	8000dac <sbrk_aligned>
 8000e62:	3001      	adds	r0, #1
 8000e64:	d02b      	beq.n	8000ebe <_malloc_r+0xd2>
 8000e66:	6823      	ldr	r3, [r4, #0]
 8000e68:	442b      	add	r3, r5
 8000e6a:	6023      	str	r3, [r4, #0]
 8000e6c:	e00e      	b.n	8000e8c <_malloc_r+0xa0>
 8000e6e:	6822      	ldr	r2, [r4, #0]
 8000e70:	1b52      	subs	r2, r2, r5
 8000e72:	d41e      	bmi.n	8000eb2 <_malloc_r+0xc6>
 8000e74:	2a0b      	cmp	r2, #11
 8000e76:	d916      	bls.n	8000ea6 <_malloc_r+0xba>
 8000e78:	1961      	adds	r1, r4, r5
 8000e7a:	42a3      	cmp	r3, r4
 8000e7c:	6025      	str	r5, [r4, #0]
 8000e7e:	bf18      	it	ne
 8000e80:	6059      	strne	r1, [r3, #4]
 8000e82:	6863      	ldr	r3, [r4, #4]
 8000e84:	bf08      	it	eq
 8000e86:	6031      	streq	r1, [r6, #0]
 8000e88:	5162      	str	r2, [r4, r5]
 8000e8a:	604b      	str	r3, [r1, #4]
 8000e8c:	4638      	mov	r0, r7
 8000e8e:	f104 060b 	add.w	r6, r4, #11
 8000e92:	f000 fbbd 	bl	8001610 <__malloc_unlock>
 8000e96:	f026 0607 	bic.w	r6, r6, #7
 8000e9a:	1d23      	adds	r3, r4, #4
 8000e9c:	1af2      	subs	r2, r6, r3
 8000e9e:	d0b6      	beq.n	8000e0e <_malloc_r+0x22>
 8000ea0:	1b9b      	subs	r3, r3, r6
 8000ea2:	50a3      	str	r3, [r4, r2]
 8000ea4:	e7b3      	b.n	8000e0e <_malloc_r+0x22>
 8000ea6:	6862      	ldr	r2, [r4, #4]
 8000ea8:	42a3      	cmp	r3, r4
 8000eaa:	bf0c      	ite	eq
 8000eac:	6032      	streq	r2, [r6, #0]
 8000eae:	605a      	strne	r2, [r3, #4]
 8000eb0:	e7ec      	b.n	8000e8c <_malloc_r+0xa0>
 8000eb2:	4623      	mov	r3, r4
 8000eb4:	6864      	ldr	r4, [r4, #4]
 8000eb6:	e7b2      	b.n	8000e1e <_malloc_r+0x32>
 8000eb8:	4634      	mov	r4, r6
 8000eba:	6876      	ldr	r6, [r6, #4]
 8000ebc:	e7b9      	b.n	8000e32 <_malloc_r+0x46>
 8000ebe:	230c      	movs	r3, #12
 8000ec0:	603b      	str	r3, [r7, #0]
 8000ec2:	4638      	mov	r0, r7
 8000ec4:	f000 fba4 	bl	8001610 <__malloc_unlock>
 8000ec8:	e7a1      	b.n	8000e0e <_malloc_r+0x22>
 8000eca:	6025      	str	r5, [r4, #0]
 8000ecc:	e7de      	b.n	8000e8c <_malloc_r+0xa0>
 8000ece:	bf00      	nop
 8000ed0:	20000088 	.word	0x20000088

08000ed4 <__sfputc_r>:
 8000ed4:	6893      	ldr	r3, [r2, #8]
 8000ed6:	3b01      	subs	r3, #1
 8000ed8:	2b00      	cmp	r3, #0
 8000eda:	b410      	push	{r4}
 8000edc:	6093      	str	r3, [r2, #8]
 8000ede:	da08      	bge.n	8000ef2 <__sfputc_r+0x1e>
 8000ee0:	6994      	ldr	r4, [r2, #24]
 8000ee2:	42a3      	cmp	r3, r4
 8000ee4:	db01      	blt.n	8000eea <__sfputc_r+0x16>
 8000ee6:	290a      	cmp	r1, #10
 8000ee8:	d103      	bne.n	8000ef2 <__sfputc_r+0x1e>
 8000eea:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000eee:	f7ff bc31 	b.w	8000754 <__swbuf_r>
 8000ef2:	6813      	ldr	r3, [r2, #0]
 8000ef4:	1c58      	adds	r0, r3, #1
 8000ef6:	6010      	str	r0, [r2, #0]
 8000ef8:	7019      	strb	r1, [r3, #0]
 8000efa:	4608      	mov	r0, r1
 8000efc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000f00:	4770      	bx	lr

08000f02 <__sfputs_r>:
 8000f02:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f04:	4606      	mov	r6, r0
 8000f06:	460f      	mov	r7, r1
 8000f08:	4614      	mov	r4, r2
 8000f0a:	18d5      	adds	r5, r2, r3
 8000f0c:	42ac      	cmp	r4, r5
 8000f0e:	d101      	bne.n	8000f14 <__sfputs_r+0x12>
 8000f10:	2000      	movs	r0, #0
 8000f12:	e007      	b.n	8000f24 <__sfputs_r+0x22>
 8000f14:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f18:	463a      	mov	r2, r7
 8000f1a:	4630      	mov	r0, r6
 8000f1c:	f7ff ffda 	bl	8000ed4 <__sfputc_r>
 8000f20:	1c43      	adds	r3, r0, #1
 8000f22:	d1f3      	bne.n	8000f0c <__sfputs_r+0xa>
 8000f24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000f28 <_vfiprintf_r>:
 8000f28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000f2c:	460d      	mov	r5, r1
 8000f2e:	b09d      	sub	sp, #116	; 0x74
 8000f30:	4614      	mov	r4, r2
 8000f32:	4698      	mov	r8, r3
 8000f34:	4606      	mov	r6, r0
 8000f36:	b118      	cbz	r0, 8000f40 <_vfiprintf_r+0x18>
 8000f38:	6983      	ldr	r3, [r0, #24]
 8000f3a:	b90b      	cbnz	r3, 8000f40 <_vfiprintf_r+0x18>
 8000f3c:	f7ff fde4 	bl	8000b08 <__sinit>
 8000f40:	4b89      	ldr	r3, [pc, #548]	; (8001168 <_vfiprintf_r+0x240>)
 8000f42:	429d      	cmp	r5, r3
 8000f44:	d11b      	bne.n	8000f7e <_vfiprintf_r+0x56>
 8000f46:	6875      	ldr	r5, [r6, #4]
 8000f48:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000f4a:	07d9      	lsls	r1, r3, #31
 8000f4c:	d405      	bmi.n	8000f5a <_vfiprintf_r+0x32>
 8000f4e:	89ab      	ldrh	r3, [r5, #12]
 8000f50:	059a      	lsls	r2, r3, #22
 8000f52:	d402      	bmi.n	8000f5a <_vfiprintf_r+0x32>
 8000f54:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000f56:	f7ff fe75 	bl	8000c44 <__retarget_lock_acquire_recursive>
 8000f5a:	89ab      	ldrh	r3, [r5, #12]
 8000f5c:	071b      	lsls	r3, r3, #28
 8000f5e:	d501      	bpl.n	8000f64 <_vfiprintf_r+0x3c>
 8000f60:	692b      	ldr	r3, [r5, #16]
 8000f62:	b9eb      	cbnz	r3, 8000fa0 <_vfiprintf_r+0x78>
 8000f64:	4629      	mov	r1, r5
 8000f66:	4630      	mov	r0, r6
 8000f68:	f7ff fc46 	bl	80007f8 <__swsetup_r>
 8000f6c:	b1c0      	cbz	r0, 8000fa0 <_vfiprintf_r+0x78>
 8000f6e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000f70:	07dc      	lsls	r4, r3, #31
 8000f72:	d50e      	bpl.n	8000f92 <_vfiprintf_r+0x6a>
 8000f74:	f04f 30ff 	mov.w	r0, #4294967295
 8000f78:	b01d      	add	sp, #116	; 0x74
 8000f7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000f7e:	4b7b      	ldr	r3, [pc, #492]	; (800116c <_vfiprintf_r+0x244>)
 8000f80:	429d      	cmp	r5, r3
 8000f82:	d101      	bne.n	8000f88 <_vfiprintf_r+0x60>
 8000f84:	68b5      	ldr	r5, [r6, #8]
 8000f86:	e7df      	b.n	8000f48 <_vfiprintf_r+0x20>
 8000f88:	4b79      	ldr	r3, [pc, #484]	; (8001170 <_vfiprintf_r+0x248>)
 8000f8a:	429d      	cmp	r5, r3
 8000f8c:	bf08      	it	eq
 8000f8e:	68f5      	ldreq	r5, [r6, #12]
 8000f90:	e7da      	b.n	8000f48 <_vfiprintf_r+0x20>
 8000f92:	89ab      	ldrh	r3, [r5, #12]
 8000f94:	0598      	lsls	r0, r3, #22
 8000f96:	d4ed      	bmi.n	8000f74 <_vfiprintf_r+0x4c>
 8000f98:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000f9a:	f7ff fe54 	bl	8000c46 <__retarget_lock_release_recursive>
 8000f9e:	e7e9      	b.n	8000f74 <_vfiprintf_r+0x4c>
 8000fa0:	2300      	movs	r3, #0
 8000fa2:	9309      	str	r3, [sp, #36]	; 0x24
 8000fa4:	2320      	movs	r3, #32
 8000fa6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000faa:	f8cd 800c 	str.w	r8, [sp, #12]
 8000fae:	2330      	movs	r3, #48	; 0x30
 8000fb0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001174 <_vfiprintf_r+0x24c>
 8000fb4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000fb8:	f04f 0901 	mov.w	r9, #1
 8000fbc:	4623      	mov	r3, r4
 8000fbe:	469a      	mov	sl, r3
 8000fc0:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000fc4:	b10a      	cbz	r2, 8000fca <_vfiprintf_r+0xa2>
 8000fc6:	2a25      	cmp	r2, #37	; 0x25
 8000fc8:	d1f9      	bne.n	8000fbe <_vfiprintf_r+0x96>
 8000fca:	ebba 0b04 	subs.w	fp, sl, r4
 8000fce:	d00b      	beq.n	8000fe8 <_vfiprintf_r+0xc0>
 8000fd0:	465b      	mov	r3, fp
 8000fd2:	4622      	mov	r2, r4
 8000fd4:	4629      	mov	r1, r5
 8000fd6:	4630      	mov	r0, r6
 8000fd8:	f7ff ff93 	bl	8000f02 <__sfputs_r>
 8000fdc:	3001      	adds	r0, #1
 8000fde:	f000 80aa 	beq.w	8001136 <_vfiprintf_r+0x20e>
 8000fe2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000fe4:	445a      	add	r2, fp
 8000fe6:	9209      	str	r2, [sp, #36]	; 0x24
 8000fe8:	f89a 3000 	ldrb.w	r3, [sl]
 8000fec:	2b00      	cmp	r3, #0
 8000fee:	f000 80a2 	beq.w	8001136 <_vfiprintf_r+0x20e>
 8000ff2:	2300      	movs	r3, #0
 8000ff4:	f04f 32ff 	mov.w	r2, #4294967295
 8000ff8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000ffc:	f10a 0a01 	add.w	sl, sl, #1
 8001000:	9304      	str	r3, [sp, #16]
 8001002:	9307      	str	r3, [sp, #28]
 8001004:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8001008:	931a      	str	r3, [sp, #104]	; 0x68
 800100a:	4654      	mov	r4, sl
 800100c:	2205      	movs	r2, #5
 800100e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001012:	4858      	ldr	r0, [pc, #352]	; (8001174 <_vfiprintf_r+0x24c>)
 8001014:	f7ff f8e4 	bl	80001e0 <memchr>
 8001018:	9a04      	ldr	r2, [sp, #16]
 800101a:	b9d8      	cbnz	r0, 8001054 <_vfiprintf_r+0x12c>
 800101c:	06d1      	lsls	r1, r2, #27
 800101e:	bf44      	itt	mi
 8001020:	2320      	movmi	r3, #32
 8001022:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001026:	0713      	lsls	r3, r2, #28
 8001028:	bf44      	itt	mi
 800102a:	232b      	movmi	r3, #43	; 0x2b
 800102c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001030:	f89a 3000 	ldrb.w	r3, [sl]
 8001034:	2b2a      	cmp	r3, #42	; 0x2a
 8001036:	d015      	beq.n	8001064 <_vfiprintf_r+0x13c>
 8001038:	9a07      	ldr	r2, [sp, #28]
 800103a:	4654      	mov	r4, sl
 800103c:	2000      	movs	r0, #0
 800103e:	f04f 0c0a 	mov.w	ip, #10
 8001042:	4621      	mov	r1, r4
 8001044:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001048:	3b30      	subs	r3, #48	; 0x30
 800104a:	2b09      	cmp	r3, #9
 800104c:	d94e      	bls.n	80010ec <_vfiprintf_r+0x1c4>
 800104e:	b1b0      	cbz	r0, 800107e <_vfiprintf_r+0x156>
 8001050:	9207      	str	r2, [sp, #28]
 8001052:	e014      	b.n	800107e <_vfiprintf_r+0x156>
 8001054:	eba0 0308 	sub.w	r3, r0, r8
 8001058:	fa09 f303 	lsl.w	r3, r9, r3
 800105c:	4313      	orrs	r3, r2
 800105e:	9304      	str	r3, [sp, #16]
 8001060:	46a2      	mov	sl, r4
 8001062:	e7d2      	b.n	800100a <_vfiprintf_r+0xe2>
 8001064:	9b03      	ldr	r3, [sp, #12]
 8001066:	1d19      	adds	r1, r3, #4
 8001068:	681b      	ldr	r3, [r3, #0]
 800106a:	9103      	str	r1, [sp, #12]
 800106c:	2b00      	cmp	r3, #0
 800106e:	bfbb      	ittet	lt
 8001070:	425b      	neglt	r3, r3
 8001072:	f042 0202 	orrlt.w	r2, r2, #2
 8001076:	9307      	strge	r3, [sp, #28]
 8001078:	9307      	strlt	r3, [sp, #28]
 800107a:	bfb8      	it	lt
 800107c:	9204      	strlt	r2, [sp, #16]
 800107e:	7823      	ldrb	r3, [r4, #0]
 8001080:	2b2e      	cmp	r3, #46	; 0x2e
 8001082:	d10c      	bne.n	800109e <_vfiprintf_r+0x176>
 8001084:	7863      	ldrb	r3, [r4, #1]
 8001086:	2b2a      	cmp	r3, #42	; 0x2a
 8001088:	d135      	bne.n	80010f6 <_vfiprintf_r+0x1ce>
 800108a:	9b03      	ldr	r3, [sp, #12]
 800108c:	1d1a      	adds	r2, r3, #4
 800108e:	681b      	ldr	r3, [r3, #0]
 8001090:	9203      	str	r2, [sp, #12]
 8001092:	2b00      	cmp	r3, #0
 8001094:	bfb8      	it	lt
 8001096:	f04f 33ff 	movlt.w	r3, #4294967295
 800109a:	3402      	adds	r4, #2
 800109c:	9305      	str	r3, [sp, #20]
 800109e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8001184 <_vfiprintf_r+0x25c>
 80010a2:	7821      	ldrb	r1, [r4, #0]
 80010a4:	2203      	movs	r2, #3
 80010a6:	4650      	mov	r0, sl
 80010a8:	f7ff f89a 	bl	80001e0 <memchr>
 80010ac:	b140      	cbz	r0, 80010c0 <_vfiprintf_r+0x198>
 80010ae:	2340      	movs	r3, #64	; 0x40
 80010b0:	eba0 000a 	sub.w	r0, r0, sl
 80010b4:	fa03 f000 	lsl.w	r0, r3, r0
 80010b8:	9b04      	ldr	r3, [sp, #16]
 80010ba:	4303      	orrs	r3, r0
 80010bc:	3401      	adds	r4, #1
 80010be:	9304      	str	r3, [sp, #16]
 80010c0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80010c4:	482c      	ldr	r0, [pc, #176]	; (8001178 <_vfiprintf_r+0x250>)
 80010c6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80010ca:	2206      	movs	r2, #6
 80010cc:	f7ff f888 	bl	80001e0 <memchr>
 80010d0:	2800      	cmp	r0, #0
 80010d2:	d03f      	beq.n	8001154 <_vfiprintf_r+0x22c>
 80010d4:	4b29      	ldr	r3, [pc, #164]	; (800117c <_vfiprintf_r+0x254>)
 80010d6:	bb1b      	cbnz	r3, 8001120 <_vfiprintf_r+0x1f8>
 80010d8:	9b03      	ldr	r3, [sp, #12]
 80010da:	3307      	adds	r3, #7
 80010dc:	f023 0307 	bic.w	r3, r3, #7
 80010e0:	3308      	adds	r3, #8
 80010e2:	9303      	str	r3, [sp, #12]
 80010e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80010e6:	443b      	add	r3, r7
 80010e8:	9309      	str	r3, [sp, #36]	; 0x24
 80010ea:	e767      	b.n	8000fbc <_vfiprintf_r+0x94>
 80010ec:	fb0c 3202 	mla	r2, ip, r2, r3
 80010f0:	460c      	mov	r4, r1
 80010f2:	2001      	movs	r0, #1
 80010f4:	e7a5      	b.n	8001042 <_vfiprintf_r+0x11a>
 80010f6:	2300      	movs	r3, #0
 80010f8:	3401      	adds	r4, #1
 80010fa:	9305      	str	r3, [sp, #20]
 80010fc:	4619      	mov	r1, r3
 80010fe:	f04f 0c0a 	mov.w	ip, #10
 8001102:	4620      	mov	r0, r4
 8001104:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001108:	3a30      	subs	r2, #48	; 0x30
 800110a:	2a09      	cmp	r2, #9
 800110c:	d903      	bls.n	8001116 <_vfiprintf_r+0x1ee>
 800110e:	2b00      	cmp	r3, #0
 8001110:	d0c5      	beq.n	800109e <_vfiprintf_r+0x176>
 8001112:	9105      	str	r1, [sp, #20]
 8001114:	e7c3      	b.n	800109e <_vfiprintf_r+0x176>
 8001116:	fb0c 2101 	mla	r1, ip, r1, r2
 800111a:	4604      	mov	r4, r0
 800111c:	2301      	movs	r3, #1
 800111e:	e7f0      	b.n	8001102 <_vfiprintf_r+0x1da>
 8001120:	ab03      	add	r3, sp, #12
 8001122:	9300      	str	r3, [sp, #0]
 8001124:	462a      	mov	r2, r5
 8001126:	4b16      	ldr	r3, [pc, #88]	; (8001180 <_vfiprintf_r+0x258>)
 8001128:	a904      	add	r1, sp, #16
 800112a:	4630      	mov	r0, r6
 800112c:	f3af 8000 	nop.w
 8001130:	4607      	mov	r7, r0
 8001132:	1c78      	adds	r0, r7, #1
 8001134:	d1d6      	bne.n	80010e4 <_vfiprintf_r+0x1bc>
 8001136:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001138:	07d9      	lsls	r1, r3, #31
 800113a:	d405      	bmi.n	8001148 <_vfiprintf_r+0x220>
 800113c:	89ab      	ldrh	r3, [r5, #12]
 800113e:	059a      	lsls	r2, r3, #22
 8001140:	d402      	bmi.n	8001148 <_vfiprintf_r+0x220>
 8001142:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001144:	f7ff fd7f 	bl	8000c46 <__retarget_lock_release_recursive>
 8001148:	89ab      	ldrh	r3, [r5, #12]
 800114a:	065b      	lsls	r3, r3, #25
 800114c:	f53f af12 	bmi.w	8000f74 <_vfiprintf_r+0x4c>
 8001150:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001152:	e711      	b.n	8000f78 <_vfiprintf_r+0x50>
 8001154:	ab03      	add	r3, sp, #12
 8001156:	9300      	str	r3, [sp, #0]
 8001158:	462a      	mov	r2, r5
 800115a:	4b09      	ldr	r3, [pc, #36]	; (8001180 <_vfiprintf_r+0x258>)
 800115c:	a904      	add	r1, sp, #16
 800115e:	4630      	mov	r0, r6
 8001160:	f000 f880 	bl	8001264 <_printf_i>
 8001164:	e7e4      	b.n	8001130 <_vfiprintf_r+0x208>
 8001166:	bf00      	nop
 8001168:	080016b0 	.word	0x080016b0
 800116c:	080016d0 	.word	0x080016d0
 8001170:	08001690 	.word	0x08001690
 8001174:	080016f0 	.word	0x080016f0
 8001178:	080016fa 	.word	0x080016fa
 800117c:	00000000 	.word	0x00000000
 8001180:	08000f03 	.word	0x08000f03
 8001184:	080016f6 	.word	0x080016f6

08001188 <_printf_common>:
 8001188:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800118c:	4616      	mov	r6, r2
 800118e:	4699      	mov	r9, r3
 8001190:	688a      	ldr	r2, [r1, #8]
 8001192:	690b      	ldr	r3, [r1, #16]
 8001194:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001198:	4293      	cmp	r3, r2
 800119a:	bfb8      	it	lt
 800119c:	4613      	movlt	r3, r2
 800119e:	6033      	str	r3, [r6, #0]
 80011a0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80011a4:	4607      	mov	r7, r0
 80011a6:	460c      	mov	r4, r1
 80011a8:	b10a      	cbz	r2, 80011ae <_printf_common+0x26>
 80011aa:	3301      	adds	r3, #1
 80011ac:	6033      	str	r3, [r6, #0]
 80011ae:	6823      	ldr	r3, [r4, #0]
 80011b0:	0699      	lsls	r1, r3, #26
 80011b2:	bf42      	ittt	mi
 80011b4:	6833      	ldrmi	r3, [r6, #0]
 80011b6:	3302      	addmi	r3, #2
 80011b8:	6033      	strmi	r3, [r6, #0]
 80011ba:	6825      	ldr	r5, [r4, #0]
 80011bc:	f015 0506 	ands.w	r5, r5, #6
 80011c0:	d106      	bne.n	80011d0 <_printf_common+0x48>
 80011c2:	f104 0a19 	add.w	sl, r4, #25
 80011c6:	68e3      	ldr	r3, [r4, #12]
 80011c8:	6832      	ldr	r2, [r6, #0]
 80011ca:	1a9b      	subs	r3, r3, r2
 80011cc:	42ab      	cmp	r3, r5
 80011ce:	dc26      	bgt.n	800121e <_printf_common+0x96>
 80011d0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80011d4:	1e13      	subs	r3, r2, #0
 80011d6:	6822      	ldr	r2, [r4, #0]
 80011d8:	bf18      	it	ne
 80011da:	2301      	movne	r3, #1
 80011dc:	0692      	lsls	r2, r2, #26
 80011de:	d42b      	bmi.n	8001238 <_printf_common+0xb0>
 80011e0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80011e4:	4649      	mov	r1, r9
 80011e6:	4638      	mov	r0, r7
 80011e8:	47c0      	blx	r8
 80011ea:	3001      	adds	r0, #1
 80011ec:	d01e      	beq.n	800122c <_printf_common+0xa4>
 80011ee:	6823      	ldr	r3, [r4, #0]
 80011f0:	68e5      	ldr	r5, [r4, #12]
 80011f2:	6832      	ldr	r2, [r6, #0]
 80011f4:	f003 0306 	and.w	r3, r3, #6
 80011f8:	2b04      	cmp	r3, #4
 80011fa:	bf08      	it	eq
 80011fc:	1aad      	subeq	r5, r5, r2
 80011fe:	68a3      	ldr	r3, [r4, #8]
 8001200:	6922      	ldr	r2, [r4, #16]
 8001202:	bf0c      	ite	eq
 8001204:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001208:	2500      	movne	r5, #0
 800120a:	4293      	cmp	r3, r2
 800120c:	bfc4      	itt	gt
 800120e:	1a9b      	subgt	r3, r3, r2
 8001210:	18ed      	addgt	r5, r5, r3
 8001212:	2600      	movs	r6, #0
 8001214:	341a      	adds	r4, #26
 8001216:	42b5      	cmp	r5, r6
 8001218:	d11a      	bne.n	8001250 <_printf_common+0xc8>
 800121a:	2000      	movs	r0, #0
 800121c:	e008      	b.n	8001230 <_printf_common+0xa8>
 800121e:	2301      	movs	r3, #1
 8001220:	4652      	mov	r2, sl
 8001222:	4649      	mov	r1, r9
 8001224:	4638      	mov	r0, r7
 8001226:	47c0      	blx	r8
 8001228:	3001      	adds	r0, #1
 800122a:	d103      	bne.n	8001234 <_printf_common+0xac>
 800122c:	f04f 30ff 	mov.w	r0, #4294967295
 8001230:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001234:	3501      	adds	r5, #1
 8001236:	e7c6      	b.n	80011c6 <_printf_common+0x3e>
 8001238:	18e1      	adds	r1, r4, r3
 800123a:	1c5a      	adds	r2, r3, #1
 800123c:	2030      	movs	r0, #48	; 0x30
 800123e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001242:	4422      	add	r2, r4
 8001244:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001248:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800124c:	3302      	adds	r3, #2
 800124e:	e7c7      	b.n	80011e0 <_printf_common+0x58>
 8001250:	2301      	movs	r3, #1
 8001252:	4622      	mov	r2, r4
 8001254:	4649      	mov	r1, r9
 8001256:	4638      	mov	r0, r7
 8001258:	47c0      	blx	r8
 800125a:	3001      	adds	r0, #1
 800125c:	d0e6      	beq.n	800122c <_printf_common+0xa4>
 800125e:	3601      	adds	r6, #1
 8001260:	e7d9      	b.n	8001216 <_printf_common+0x8e>
	...

08001264 <_printf_i>:
 8001264:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001268:	7e0f      	ldrb	r7, [r1, #24]
 800126a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800126c:	2f78      	cmp	r7, #120	; 0x78
 800126e:	4691      	mov	r9, r2
 8001270:	4680      	mov	r8, r0
 8001272:	460c      	mov	r4, r1
 8001274:	469a      	mov	sl, r3
 8001276:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800127a:	d807      	bhi.n	800128c <_printf_i+0x28>
 800127c:	2f62      	cmp	r7, #98	; 0x62
 800127e:	d80a      	bhi.n	8001296 <_printf_i+0x32>
 8001280:	2f00      	cmp	r7, #0
 8001282:	f000 80d8 	beq.w	8001436 <_printf_i+0x1d2>
 8001286:	2f58      	cmp	r7, #88	; 0x58
 8001288:	f000 80a3 	beq.w	80013d2 <_printf_i+0x16e>
 800128c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001290:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001294:	e03a      	b.n	800130c <_printf_i+0xa8>
 8001296:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800129a:	2b15      	cmp	r3, #21
 800129c:	d8f6      	bhi.n	800128c <_printf_i+0x28>
 800129e:	a101      	add	r1, pc, #4	; (adr r1, 80012a4 <_printf_i+0x40>)
 80012a0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80012a4:	080012fd 	.word	0x080012fd
 80012a8:	08001311 	.word	0x08001311
 80012ac:	0800128d 	.word	0x0800128d
 80012b0:	0800128d 	.word	0x0800128d
 80012b4:	0800128d 	.word	0x0800128d
 80012b8:	0800128d 	.word	0x0800128d
 80012bc:	08001311 	.word	0x08001311
 80012c0:	0800128d 	.word	0x0800128d
 80012c4:	0800128d 	.word	0x0800128d
 80012c8:	0800128d 	.word	0x0800128d
 80012cc:	0800128d 	.word	0x0800128d
 80012d0:	0800141d 	.word	0x0800141d
 80012d4:	08001341 	.word	0x08001341
 80012d8:	080013ff 	.word	0x080013ff
 80012dc:	0800128d 	.word	0x0800128d
 80012e0:	0800128d 	.word	0x0800128d
 80012e4:	0800143f 	.word	0x0800143f
 80012e8:	0800128d 	.word	0x0800128d
 80012ec:	08001341 	.word	0x08001341
 80012f0:	0800128d 	.word	0x0800128d
 80012f4:	0800128d 	.word	0x0800128d
 80012f8:	08001407 	.word	0x08001407
 80012fc:	682b      	ldr	r3, [r5, #0]
 80012fe:	1d1a      	adds	r2, r3, #4
 8001300:	681b      	ldr	r3, [r3, #0]
 8001302:	602a      	str	r2, [r5, #0]
 8001304:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001308:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800130c:	2301      	movs	r3, #1
 800130e:	e0a3      	b.n	8001458 <_printf_i+0x1f4>
 8001310:	6820      	ldr	r0, [r4, #0]
 8001312:	6829      	ldr	r1, [r5, #0]
 8001314:	0606      	lsls	r6, r0, #24
 8001316:	f101 0304 	add.w	r3, r1, #4
 800131a:	d50a      	bpl.n	8001332 <_printf_i+0xce>
 800131c:	680e      	ldr	r6, [r1, #0]
 800131e:	602b      	str	r3, [r5, #0]
 8001320:	2e00      	cmp	r6, #0
 8001322:	da03      	bge.n	800132c <_printf_i+0xc8>
 8001324:	232d      	movs	r3, #45	; 0x2d
 8001326:	4276      	negs	r6, r6
 8001328:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800132c:	485e      	ldr	r0, [pc, #376]	; (80014a8 <_printf_i+0x244>)
 800132e:	230a      	movs	r3, #10
 8001330:	e019      	b.n	8001366 <_printf_i+0x102>
 8001332:	680e      	ldr	r6, [r1, #0]
 8001334:	602b      	str	r3, [r5, #0]
 8001336:	f010 0f40 	tst.w	r0, #64	; 0x40
 800133a:	bf18      	it	ne
 800133c:	b236      	sxthne	r6, r6
 800133e:	e7ef      	b.n	8001320 <_printf_i+0xbc>
 8001340:	682b      	ldr	r3, [r5, #0]
 8001342:	6820      	ldr	r0, [r4, #0]
 8001344:	1d19      	adds	r1, r3, #4
 8001346:	6029      	str	r1, [r5, #0]
 8001348:	0601      	lsls	r1, r0, #24
 800134a:	d501      	bpl.n	8001350 <_printf_i+0xec>
 800134c:	681e      	ldr	r6, [r3, #0]
 800134e:	e002      	b.n	8001356 <_printf_i+0xf2>
 8001350:	0646      	lsls	r6, r0, #25
 8001352:	d5fb      	bpl.n	800134c <_printf_i+0xe8>
 8001354:	881e      	ldrh	r6, [r3, #0]
 8001356:	4854      	ldr	r0, [pc, #336]	; (80014a8 <_printf_i+0x244>)
 8001358:	2f6f      	cmp	r7, #111	; 0x6f
 800135a:	bf0c      	ite	eq
 800135c:	2308      	moveq	r3, #8
 800135e:	230a      	movne	r3, #10
 8001360:	2100      	movs	r1, #0
 8001362:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001366:	6865      	ldr	r5, [r4, #4]
 8001368:	60a5      	str	r5, [r4, #8]
 800136a:	2d00      	cmp	r5, #0
 800136c:	bfa2      	ittt	ge
 800136e:	6821      	ldrge	r1, [r4, #0]
 8001370:	f021 0104 	bicge.w	r1, r1, #4
 8001374:	6021      	strge	r1, [r4, #0]
 8001376:	b90e      	cbnz	r6, 800137c <_printf_i+0x118>
 8001378:	2d00      	cmp	r5, #0
 800137a:	d04d      	beq.n	8001418 <_printf_i+0x1b4>
 800137c:	4615      	mov	r5, r2
 800137e:	fbb6 f1f3 	udiv	r1, r6, r3
 8001382:	fb03 6711 	mls	r7, r3, r1, r6
 8001386:	5dc7      	ldrb	r7, [r0, r7]
 8001388:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800138c:	4637      	mov	r7, r6
 800138e:	42bb      	cmp	r3, r7
 8001390:	460e      	mov	r6, r1
 8001392:	d9f4      	bls.n	800137e <_printf_i+0x11a>
 8001394:	2b08      	cmp	r3, #8
 8001396:	d10b      	bne.n	80013b0 <_printf_i+0x14c>
 8001398:	6823      	ldr	r3, [r4, #0]
 800139a:	07de      	lsls	r6, r3, #31
 800139c:	d508      	bpl.n	80013b0 <_printf_i+0x14c>
 800139e:	6923      	ldr	r3, [r4, #16]
 80013a0:	6861      	ldr	r1, [r4, #4]
 80013a2:	4299      	cmp	r1, r3
 80013a4:	bfde      	ittt	le
 80013a6:	2330      	movle	r3, #48	; 0x30
 80013a8:	f805 3c01 	strble.w	r3, [r5, #-1]
 80013ac:	f105 35ff 	addle.w	r5, r5, #4294967295
 80013b0:	1b52      	subs	r2, r2, r5
 80013b2:	6122      	str	r2, [r4, #16]
 80013b4:	f8cd a000 	str.w	sl, [sp]
 80013b8:	464b      	mov	r3, r9
 80013ba:	aa03      	add	r2, sp, #12
 80013bc:	4621      	mov	r1, r4
 80013be:	4640      	mov	r0, r8
 80013c0:	f7ff fee2 	bl	8001188 <_printf_common>
 80013c4:	3001      	adds	r0, #1
 80013c6:	d14c      	bne.n	8001462 <_printf_i+0x1fe>
 80013c8:	f04f 30ff 	mov.w	r0, #4294967295
 80013cc:	b004      	add	sp, #16
 80013ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80013d2:	4835      	ldr	r0, [pc, #212]	; (80014a8 <_printf_i+0x244>)
 80013d4:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80013d8:	6829      	ldr	r1, [r5, #0]
 80013da:	6823      	ldr	r3, [r4, #0]
 80013dc:	f851 6b04 	ldr.w	r6, [r1], #4
 80013e0:	6029      	str	r1, [r5, #0]
 80013e2:	061d      	lsls	r5, r3, #24
 80013e4:	d514      	bpl.n	8001410 <_printf_i+0x1ac>
 80013e6:	07df      	lsls	r7, r3, #31
 80013e8:	bf44      	itt	mi
 80013ea:	f043 0320 	orrmi.w	r3, r3, #32
 80013ee:	6023      	strmi	r3, [r4, #0]
 80013f0:	b91e      	cbnz	r6, 80013fa <_printf_i+0x196>
 80013f2:	6823      	ldr	r3, [r4, #0]
 80013f4:	f023 0320 	bic.w	r3, r3, #32
 80013f8:	6023      	str	r3, [r4, #0]
 80013fa:	2310      	movs	r3, #16
 80013fc:	e7b0      	b.n	8001360 <_printf_i+0xfc>
 80013fe:	6823      	ldr	r3, [r4, #0]
 8001400:	f043 0320 	orr.w	r3, r3, #32
 8001404:	6023      	str	r3, [r4, #0]
 8001406:	2378      	movs	r3, #120	; 0x78
 8001408:	4828      	ldr	r0, [pc, #160]	; (80014ac <_printf_i+0x248>)
 800140a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800140e:	e7e3      	b.n	80013d8 <_printf_i+0x174>
 8001410:	0659      	lsls	r1, r3, #25
 8001412:	bf48      	it	mi
 8001414:	b2b6      	uxthmi	r6, r6
 8001416:	e7e6      	b.n	80013e6 <_printf_i+0x182>
 8001418:	4615      	mov	r5, r2
 800141a:	e7bb      	b.n	8001394 <_printf_i+0x130>
 800141c:	682b      	ldr	r3, [r5, #0]
 800141e:	6826      	ldr	r6, [r4, #0]
 8001420:	6961      	ldr	r1, [r4, #20]
 8001422:	1d18      	adds	r0, r3, #4
 8001424:	6028      	str	r0, [r5, #0]
 8001426:	0635      	lsls	r5, r6, #24
 8001428:	681b      	ldr	r3, [r3, #0]
 800142a:	d501      	bpl.n	8001430 <_printf_i+0x1cc>
 800142c:	6019      	str	r1, [r3, #0]
 800142e:	e002      	b.n	8001436 <_printf_i+0x1d2>
 8001430:	0670      	lsls	r0, r6, #25
 8001432:	d5fb      	bpl.n	800142c <_printf_i+0x1c8>
 8001434:	8019      	strh	r1, [r3, #0]
 8001436:	2300      	movs	r3, #0
 8001438:	6123      	str	r3, [r4, #16]
 800143a:	4615      	mov	r5, r2
 800143c:	e7ba      	b.n	80013b4 <_printf_i+0x150>
 800143e:	682b      	ldr	r3, [r5, #0]
 8001440:	1d1a      	adds	r2, r3, #4
 8001442:	602a      	str	r2, [r5, #0]
 8001444:	681d      	ldr	r5, [r3, #0]
 8001446:	6862      	ldr	r2, [r4, #4]
 8001448:	2100      	movs	r1, #0
 800144a:	4628      	mov	r0, r5
 800144c:	f7fe fec8 	bl	80001e0 <memchr>
 8001450:	b108      	cbz	r0, 8001456 <_printf_i+0x1f2>
 8001452:	1b40      	subs	r0, r0, r5
 8001454:	6060      	str	r0, [r4, #4]
 8001456:	6863      	ldr	r3, [r4, #4]
 8001458:	6123      	str	r3, [r4, #16]
 800145a:	2300      	movs	r3, #0
 800145c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001460:	e7a8      	b.n	80013b4 <_printf_i+0x150>
 8001462:	6923      	ldr	r3, [r4, #16]
 8001464:	462a      	mov	r2, r5
 8001466:	4649      	mov	r1, r9
 8001468:	4640      	mov	r0, r8
 800146a:	47d0      	blx	sl
 800146c:	3001      	adds	r0, #1
 800146e:	d0ab      	beq.n	80013c8 <_printf_i+0x164>
 8001470:	6823      	ldr	r3, [r4, #0]
 8001472:	079b      	lsls	r3, r3, #30
 8001474:	d413      	bmi.n	800149e <_printf_i+0x23a>
 8001476:	68e0      	ldr	r0, [r4, #12]
 8001478:	9b03      	ldr	r3, [sp, #12]
 800147a:	4298      	cmp	r0, r3
 800147c:	bfb8      	it	lt
 800147e:	4618      	movlt	r0, r3
 8001480:	e7a4      	b.n	80013cc <_printf_i+0x168>
 8001482:	2301      	movs	r3, #1
 8001484:	4632      	mov	r2, r6
 8001486:	4649      	mov	r1, r9
 8001488:	4640      	mov	r0, r8
 800148a:	47d0      	blx	sl
 800148c:	3001      	adds	r0, #1
 800148e:	d09b      	beq.n	80013c8 <_printf_i+0x164>
 8001490:	3501      	adds	r5, #1
 8001492:	68e3      	ldr	r3, [r4, #12]
 8001494:	9903      	ldr	r1, [sp, #12]
 8001496:	1a5b      	subs	r3, r3, r1
 8001498:	42ab      	cmp	r3, r5
 800149a:	dcf2      	bgt.n	8001482 <_printf_i+0x21e>
 800149c:	e7eb      	b.n	8001476 <_printf_i+0x212>
 800149e:	2500      	movs	r5, #0
 80014a0:	f104 0619 	add.w	r6, r4, #25
 80014a4:	e7f5      	b.n	8001492 <_printf_i+0x22e>
 80014a6:	bf00      	nop
 80014a8:	08001701 	.word	0x08001701
 80014ac:	08001712 	.word	0x08001712

080014b0 <_sbrk_r>:
 80014b0:	b538      	push	{r3, r4, r5, lr}
 80014b2:	4d06      	ldr	r5, [pc, #24]	; (80014cc <_sbrk_r+0x1c>)
 80014b4:	2300      	movs	r3, #0
 80014b6:	4604      	mov	r4, r0
 80014b8:	4608      	mov	r0, r1
 80014ba:	602b      	str	r3, [r5, #0]
 80014bc:	f7ff f82a 	bl	8000514 <_sbrk>
 80014c0:	1c43      	adds	r3, r0, #1
 80014c2:	d102      	bne.n	80014ca <_sbrk_r+0x1a>
 80014c4:	682b      	ldr	r3, [r5, #0]
 80014c6:	b103      	cbz	r3, 80014ca <_sbrk_r+0x1a>
 80014c8:	6023      	str	r3, [r4, #0]
 80014ca:	bd38      	pop	{r3, r4, r5, pc}
 80014cc:	20000090 	.word	0x20000090

080014d0 <__sread>:
 80014d0:	b510      	push	{r4, lr}
 80014d2:	460c      	mov	r4, r1
 80014d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014d8:	f000 f8a0 	bl	800161c <_read_r>
 80014dc:	2800      	cmp	r0, #0
 80014de:	bfab      	itete	ge
 80014e0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80014e2:	89a3      	ldrhlt	r3, [r4, #12]
 80014e4:	181b      	addge	r3, r3, r0
 80014e6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80014ea:	bfac      	ite	ge
 80014ec:	6563      	strge	r3, [r4, #84]	; 0x54
 80014ee:	81a3      	strhlt	r3, [r4, #12]
 80014f0:	bd10      	pop	{r4, pc}

080014f2 <__swrite>:
 80014f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80014f6:	461f      	mov	r7, r3
 80014f8:	898b      	ldrh	r3, [r1, #12]
 80014fa:	05db      	lsls	r3, r3, #23
 80014fc:	4605      	mov	r5, r0
 80014fe:	460c      	mov	r4, r1
 8001500:	4616      	mov	r6, r2
 8001502:	d505      	bpl.n	8001510 <__swrite+0x1e>
 8001504:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001508:	2302      	movs	r3, #2
 800150a:	2200      	movs	r2, #0
 800150c:	f000 f868 	bl	80015e0 <_lseek_r>
 8001510:	89a3      	ldrh	r3, [r4, #12]
 8001512:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001516:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800151a:	81a3      	strh	r3, [r4, #12]
 800151c:	4632      	mov	r2, r6
 800151e:	463b      	mov	r3, r7
 8001520:	4628      	mov	r0, r5
 8001522:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001526:	f000 b817 	b.w	8001558 <_write_r>

0800152a <__sseek>:
 800152a:	b510      	push	{r4, lr}
 800152c:	460c      	mov	r4, r1
 800152e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001532:	f000 f855 	bl	80015e0 <_lseek_r>
 8001536:	1c43      	adds	r3, r0, #1
 8001538:	89a3      	ldrh	r3, [r4, #12]
 800153a:	bf15      	itete	ne
 800153c:	6560      	strne	r0, [r4, #84]	; 0x54
 800153e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001542:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001546:	81a3      	strheq	r3, [r4, #12]
 8001548:	bf18      	it	ne
 800154a:	81a3      	strhne	r3, [r4, #12]
 800154c:	bd10      	pop	{r4, pc}

0800154e <__sclose>:
 800154e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001552:	f000 b813 	b.w	800157c <_close_r>
	...

08001558 <_write_r>:
 8001558:	b538      	push	{r3, r4, r5, lr}
 800155a:	4d07      	ldr	r5, [pc, #28]	; (8001578 <_write_r+0x20>)
 800155c:	4604      	mov	r4, r0
 800155e:	4608      	mov	r0, r1
 8001560:	4611      	mov	r1, r2
 8001562:	2200      	movs	r2, #0
 8001564:	602a      	str	r2, [r5, #0]
 8001566:	461a      	mov	r2, r3
 8001568:	f7fe ff83 	bl	8000472 <_write>
 800156c:	1c43      	adds	r3, r0, #1
 800156e:	d102      	bne.n	8001576 <_write_r+0x1e>
 8001570:	682b      	ldr	r3, [r5, #0]
 8001572:	b103      	cbz	r3, 8001576 <_write_r+0x1e>
 8001574:	6023      	str	r3, [r4, #0]
 8001576:	bd38      	pop	{r3, r4, r5, pc}
 8001578:	20000090 	.word	0x20000090

0800157c <_close_r>:
 800157c:	b538      	push	{r3, r4, r5, lr}
 800157e:	4d06      	ldr	r5, [pc, #24]	; (8001598 <_close_r+0x1c>)
 8001580:	2300      	movs	r3, #0
 8001582:	4604      	mov	r4, r0
 8001584:	4608      	mov	r0, r1
 8001586:	602b      	str	r3, [r5, #0]
 8001588:	f7fe ff8f 	bl	80004aa <_close>
 800158c:	1c43      	adds	r3, r0, #1
 800158e:	d102      	bne.n	8001596 <_close_r+0x1a>
 8001590:	682b      	ldr	r3, [r5, #0]
 8001592:	b103      	cbz	r3, 8001596 <_close_r+0x1a>
 8001594:	6023      	str	r3, [r4, #0]
 8001596:	bd38      	pop	{r3, r4, r5, pc}
 8001598:	20000090 	.word	0x20000090

0800159c <_fstat_r>:
 800159c:	b538      	push	{r3, r4, r5, lr}
 800159e:	4d07      	ldr	r5, [pc, #28]	; (80015bc <_fstat_r+0x20>)
 80015a0:	2300      	movs	r3, #0
 80015a2:	4604      	mov	r4, r0
 80015a4:	4608      	mov	r0, r1
 80015a6:	4611      	mov	r1, r2
 80015a8:	602b      	str	r3, [r5, #0]
 80015aa:	f7fe ff8a 	bl	80004c2 <_fstat>
 80015ae:	1c43      	adds	r3, r0, #1
 80015b0:	d102      	bne.n	80015b8 <_fstat_r+0x1c>
 80015b2:	682b      	ldr	r3, [r5, #0]
 80015b4:	b103      	cbz	r3, 80015b8 <_fstat_r+0x1c>
 80015b6:	6023      	str	r3, [r4, #0]
 80015b8:	bd38      	pop	{r3, r4, r5, pc}
 80015ba:	bf00      	nop
 80015bc:	20000090 	.word	0x20000090

080015c0 <_isatty_r>:
 80015c0:	b538      	push	{r3, r4, r5, lr}
 80015c2:	4d06      	ldr	r5, [pc, #24]	; (80015dc <_isatty_r+0x1c>)
 80015c4:	2300      	movs	r3, #0
 80015c6:	4604      	mov	r4, r0
 80015c8:	4608      	mov	r0, r1
 80015ca:	602b      	str	r3, [r5, #0]
 80015cc:	f7fe ff89 	bl	80004e2 <_isatty>
 80015d0:	1c43      	adds	r3, r0, #1
 80015d2:	d102      	bne.n	80015da <_isatty_r+0x1a>
 80015d4:	682b      	ldr	r3, [r5, #0]
 80015d6:	b103      	cbz	r3, 80015da <_isatty_r+0x1a>
 80015d8:	6023      	str	r3, [r4, #0]
 80015da:	bd38      	pop	{r3, r4, r5, pc}
 80015dc:	20000090 	.word	0x20000090

080015e0 <_lseek_r>:
 80015e0:	b538      	push	{r3, r4, r5, lr}
 80015e2:	4d07      	ldr	r5, [pc, #28]	; (8001600 <_lseek_r+0x20>)
 80015e4:	4604      	mov	r4, r0
 80015e6:	4608      	mov	r0, r1
 80015e8:	4611      	mov	r1, r2
 80015ea:	2200      	movs	r2, #0
 80015ec:	602a      	str	r2, [r5, #0]
 80015ee:	461a      	mov	r2, r3
 80015f0:	f7fe ff82 	bl	80004f8 <_lseek>
 80015f4:	1c43      	adds	r3, r0, #1
 80015f6:	d102      	bne.n	80015fe <_lseek_r+0x1e>
 80015f8:	682b      	ldr	r3, [r5, #0]
 80015fa:	b103      	cbz	r3, 80015fe <_lseek_r+0x1e>
 80015fc:	6023      	str	r3, [r4, #0]
 80015fe:	bd38      	pop	{r3, r4, r5, pc}
 8001600:	20000090 	.word	0x20000090

08001604 <__malloc_lock>:
 8001604:	4801      	ldr	r0, [pc, #4]	; (800160c <__malloc_lock+0x8>)
 8001606:	f7ff bb1d 	b.w	8000c44 <__retarget_lock_acquire_recursive>
 800160a:	bf00      	nop
 800160c:	20000084 	.word	0x20000084

08001610 <__malloc_unlock>:
 8001610:	4801      	ldr	r0, [pc, #4]	; (8001618 <__malloc_unlock+0x8>)
 8001612:	f7ff bb18 	b.w	8000c46 <__retarget_lock_release_recursive>
 8001616:	bf00      	nop
 8001618:	20000084 	.word	0x20000084

0800161c <_read_r>:
 800161c:	b538      	push	{r3, r4, r5, lr}
 800161e:	4d07      	ldr	r5, [pc, #28]	; (800163c <_read_r+0x20>)
 8001620:	4604      	mov	r4, r0
 8001622:	4608      	mov	r0, r1
 8001624:	4611      	mov	r1, r2
 8001626:	2200      	movs	r2, #0
 8001628:	602a      	str	r2, [r5, #0]
 800162a:	461a      	mov	r2, r3
 800162c:	f7fe ff04 	bl	8000438 <_read>
 8001630:	1c43      	adds	r3, r0, #1
 8001632:	d102      	bne.n	800163a <_read_r+0x1e>
 8001634:	682b      	ldr	r3, [r5, #0]
 8001636:	b103      	cbz	r3, 800163a <_read_r+0x1e>
 8001638:	6023      	str	r3, [r4, #0]
 800163a:	bd38      	pop	{r3, r4, r5, pc}
 800163c:	20000090 	.word	0x20000090

08001640 <_init>:
 8001640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001642:	bf00      	nop
 8001644:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001646:	bc08      	pop	{r3}
 8001648:	469e      	mov	lr, r3
 800164a:	4770      	bx	lr

0800164c <_fini>:
 800164c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800164e:	bf00      	nop
 8001650:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001652:	bc08      	pop	{r3}
 8001654:	469e      	mov	lr, r3
 8001656:	4770      	bx	lr
