
ADC_Simple_Interface.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001520  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000dc  080016c0  080016c0  000116c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800179c  0800179c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  0800179c  0800179c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800179c  0800179c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800179c  0800179c  0001179c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080017a0  080017a0  000117a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080017a4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08001808  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08001808  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000127f  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000005c0  00000000  00000000  00021313  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000180  00000000  00000000  000218d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000128  00000000  00000000  00021a58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000f9a3  00000000  00000000  00021b80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001dd3  00000000  00000000  00031523  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000546a8  00000000  00000000  000332f6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0008799e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000ca4  00000000  00000000  000879f0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080016a8 	.word	0x080016a8

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	080016a8 	.word	0x080016a8

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <ADC_Init0>:
#define CR2_SWSTART		(1U<<30)
#define SR_EOC			(1U<<1)
#define CR2_CONT		(1U<<1)

void ADC_Init0(void)
{
 8000280:	b480      	push	{r7}
 8000282:	af00      	add	r7, sp, #0
	/***Configure the ADC GPIO pin ***/
	/*Enable clock access to GPIOA*/
	RCC->AHB1ENR |= GPIOAEN;
 8000284:	4b11      	ldr	r3, [pc, #68]	; (80002cc <ADC_Init0+0x4c>)
 8000286:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000288:	4a10      	ldr	r2, [pc, #64]	; (80002cc <ADC_Init0+0x4c>)
 800028a:	f043 0301 	orr.w	r3, r3, #1
 800028e:	6313      	str	r3, [r2, #48]	; 0x30
	/*Set the mode of PA0 to analog*/
	GPIOA -> MODER |= (1U<<0)|(1U<<1);
 8000290:	4b0f      	ldr	r3, [pc, #60]	; (80002d0 <ADC_Init0+0x50>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	4a0e      	ldr	r2, [pc, #56]	; (80002d0 <ADC_Init0+0x50>)
 8000296:	f043 0303 	orr.w	r3, r3, #3
 800029a:	6013      	str	r3, [r2, #0]
	/***Configure the ADC module***/
	/*Enable clock access to ADC */
	RCC -> APB2ENR |= ADC1EN;
 800029c:	4b0b      	ldr	r3, [pc, #44]	; (80002cc <ADC_Init0+0x4c>)
 800029e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80002a0:	4a0a      	ldr	r2, [pc, #40]	; (80002cc <ADC_Init0+0x4c>)
 80002a2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002a6:	6453      	str	r3, [r2, #68]	; 0x44
	/*Conversion sequence start*/
	ADC1->SQR3 = 0;// channel 0
 80002a8:	4b0a      	ldr	r3, [pc, #40]	; (80002d4 <ADC_Init0+0x54>)
 80002aa:	2200      	movs	r2, #0
 80002ac:	635a      	str	r2, [r3, #52]	; 0x34
	/*Conversion sequence length*/
	ADC1->SQR1 = 0; // length = 1
 80002ae:	4b09      	ldr	r3, [pc, #36]	; (80002d4 <ADC_Init0+0x54>)
 80002b0:	2200      	movs	r2, #0
 80002b2:	62da      	str	r2, [r3, #44]	; 0x2c
	/*Enable ADC module*/
	ADC1->CR2 |= CR2_AD0N;
 80002b4:	4b07      	ldr	r3, [pc, #28]	; (80002d4 <ADC_Init0+0x54>)
 80002b6:	689b      	ldr	r3, [r3, #8]
 80002b8:	4a06      	ldr	r2, [pc, #24]	; (80002d4 <ADC_Init0+0x54>)
 80002ba:	f043 0301 	orr.w	r3, r3, #1
 80002be:	6093      	str	r3, [r2, #8]
}
 80002c0:	bf00      	nop
 80002c2:	46bd      	mov	sp, r7
 80002c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c8:	4770      	bx	lr
 80002ca:	bf00      	nop
 80002cc:	40023800 	.word	0x40023800
 80002d0:	40020000 	.word	0x40020000
 80002d4:	40012000 	.word	0x40012000

080002d8 <ADC_Init1>:
void ADC_Init1(void)
{
 80002d8:	b480      	push	{r7}
 80002da:	af00      	add	r7, sp, #0
	/***Configure the ADC GPIO pin ***/
	/*Enable clock access to GPIOA*/
	RCC -> AHB1ENR |= GPIOAEN;
 80002dc:	4b11      	ldr	r3, [pc, #68]	; (8000324 <ADC_Init1+0x4c>)
 80002de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e0:	4a10      	ldr	r2, [pc, #64]	; (8000324 <ADC_Init1+0x4c>)
 80002e2:	f043 0301 	orr.w	r3, r3, #1
 80002e6:	6313      	str	r3, [r2, #48]	; 0x30
	/*Set the mode of PA1 to analog*/
	GPIOA -> MODER |= (1U<<2)|(1U<<3);
 80002e8:	4b0f      	ldr	r3, [pc, #60]	; (8000328 <ADC_Init1+0x50>)
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	4a0e      	ldr	r2, [pc, #56]	; (8000328 <ADC_Init1+0x50>)
 80002ee:	f043 030c 	orr.w	r3, r3, #12
 80002f2:	6013      	str	r3, [r2, #0]
	/***Configure the ADC module***/
	/*Enable clock access to ADC */
	RCC -> APB2ENR |= ADC1EN;
 80002f4:	4b0b      	ldr	r3, [pc, #44]	; (8000324 <ADC_Init1+0x4c>)
 80002f6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80002f8:	4a0a      	ldr	r2, [pc, #40]	; (8000324 <ADC_Init1+0x4c>)
 80002fa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002fe:	6453      	str	r3, [r2, #68]	; 0x44
	/*Conversion sequence start*/
	ADC1->SQR3 = (1U<<0);//channel 1
 8000300:	4b0a      	ldr	r3, [pc, #40]	; (800032c <ADC_Init1+0x54>)
 8000302:	2201      	movs	r2, #1
 8000304:	635a      	str	r2, [r3, #52]	; 0x34
	/*Conversion sequence length*/
	ADC1->SQR1 = 0; // length = 1
 8000306:	4b09      	ldr	r3, [pc, #36]	; (800032c <ADC_Init1+0x54>)
 8000308:	2200      	movs	r2, #0
 800030a:	62da      	str	r2, [r3, #44]	; 0x2c
	/*Enable ADC module*/
	ADC1->CR2 |= CR2_AD0N;
 800030c:	4b07      	ldr	r3, [pc, #28]	; (800032c <ADC_Init1+0x54>)
 800030e:	689b      	ldr	r3, [r3, #8]
 8000310:	4a06      	ldr	r2, [pc, #24]	; (800032c <ADC_Init1+0x54>)
 8000312:	f043 0301 	orr.w	r3, r3, #1
 8000316:	6093      	str	r3, [r2, #8]
}
 8000318:	bf00      	nop
 800031a:	46bd      	mov	sp, r7
 800031c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000320:	4770      	bx	lr
 8000322:	bf00      	nop
 8000324:	40023800 	.word	0x40023800
 8000328:	40020000 	.word	0x40020000
 800032c:	40012000 	.word	0x40012000

08000330 <ADC_Get_Result>:

uint32_t ADC_Get_Result(void)
{
 8000330:	b480      	push	{r7}
 8000332:	af00      	add	r7, sp, #0
	/*Start adc conversion*/
	ADC1->CR2 |= CR2_SWSTART;
 8000334:	4b09      	ldr	r3, [pc, #36]	; (800035c <ADC_Get_Result+0x2c>)
 8000336:	689b      	ldr	r3, [r3, #8]
 8000338:	4a08      	ldr	r2, [pc, #32]	; (800035c <ADC_Get_Result+0x2c>)
 800033a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800033e:	6093      	str	r3, [r2, #8]
	/*Wait for conversion to be complete*/
	while(!(ADC1->SR & SR_EOC)){}
 8000340:	bf00      	nop
 8000342:	4b06      	ldr	r3, [pc, #24]	; (800035c <ADC_Get_Result+0x2c>)
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	f003 0302 	and.w	r3, r3, #2
 800034a:	2b00      	cmp	r3, #0
 800034c:	d0f9      	beq.n	8000342 <ADC_Get_Result+0x12>
	//ADC1->CR2 &= ~CR2_AD0N;
	/*Read converted result*/
	return (ADC1->DR);
 800034e:	4b03      	ldr	r3, [pc, #12]	; (800035c <ADC_Get_Result+0x2c>)
 8000350:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 8000352:	4618      	mov	r0, r3
 8000354:	46bd      	mov	sp, r7
 8000356:	f85d 7b04 	ldr.w	r7, [sp], #4
 800035a:	4770      	bx	lr
 800035c:	40012000 	.word	0x40012000

08000360 <USART2_Init>:
#include "USART2.h"

#define GPIOAEN		    (1U<<0)

void USART2_Init()
{
 8000360:	b480      	push	{r7}
 8000362:	af00      	add	r7, sp, #0
	///////////////// Enable the Clocks ////////////////
	RCC -> AHB1ENR |= GPIOAEN;
 8000364:	4b17      	ldr	r3, [pc, #92]	; (80003c4 <USART2_Init+0x64>)
 8000366:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000368:	4a16      	ldr	r2, [pc, #88]	; (80003c4 <USART2_Init+0x64>)
 800036a:	f043 0301 	orr.w	r3, r3, #1
 800036e:	6313      	str	r3, [r2, #48]	; 0x30
	RCC -> APB1ENR |= USART2EN;
 8000370:	4b14      	ldr	r3, [pc, #80]	; (80003c4 <USART2_Init+0x64>)
 8000372:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000374:	4a13      	ldr	r2, [pc, #76]	; (80003c4 <USART2_Init+0x64>)
 8000376:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800037a:	6413      	str	r3, [r2, #64]	; 0x40
	///////////////// SETUP THE GPIOs //////////////////
	GPIOA -> MODER |= (1<<7)|(1<<5); // PA3 and PA2 are Set to Alternate Functionality Mode
 800037c:	4b12      	ldr	r3, [pc, #72]	; (80003c8 <USART2_Init+0x68>)
 800037e:	681b      	ldr	r3, [r3, #0]
 8000380:	4a11      	ldr	r2, [pc, #68]	; (80003c8 <USART2_Init+0x68>)
 8000382:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8000386:	6013      	str	r3, [r2, #0]
	GPIOA -> AFR[0] |= (1<<8)|(1<<9)|(1<<10)|(1<<12)|(1<<13)|(1<<14);
 8000388:	4b0f      	ldr	r3, [pc, #60]	; (80003c8 <USART2_Init+0x68>)
 800038a:	6a1b      	ldr	r3, [r3, #32]
 800038c:	4a0e      	ldr	r2, [pc, #56]	; (80003c8 <USART2_Init+0x68>)
 800038e:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 8000392:	6213      	str	r3, [r2, #32]
	// Set the AF mode to 7
	///////////////// Setup the USART Configurations ////////////
	USART2 -> CR1 |= TE|RE;
 8000394:	4b0d      	ldr	r3, [pc, #52]	; (80003cc <USART2_Init+0x6c>)
 8000396:	68db      	ldr	r3, [r3, #12]
 8000398:	4a0c      	ldr	r2, [pc, #48]	; (80003cc <USART2_Init+0x6c>)
 800039a:	f043 030c 	orr.w	r3, r3, #12
 800039e:	60d3      	str	r3, [r2, #12]
	//1. Setup the Control Register
	USART2 -> BRR = ((F_CPU + (BaudRate/2U))/BaudRate);
 80003a0:	4b0a      	ldr	r3, [pc, #40]	; (80003cc <USART2_Init+0x6c>)
 80003a2:	228b      	movs	r2, #139	; 0x8b
 80003a4:	609a      	str	r2, [r3, #8]
	//2. COnfigure the Baud rate
	USART2 -> CR1 |= UE;
 80003a6:	4b09      	ldr	r3, [pc, #36]	; (80003cc <USART2_Init+0x6c>)
 80003a8:	68db      	ldr	r3, [r3, #12]
 80003aa:	4a08      	ldr	r2, [pc, #32]	; (80003cc <USART2_Init+0x6c>)
 80003ac:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80003b0:	60d3      	str	r3, [r2, #12]
	//3. Enable the UART Protocol
	USART2 -> DR = 0;
 80003b2:	4b06      	ldr	r3, [pc, #24]	; (80003cc <USART2_Init+0x6c>)
 80003b4:	2200      	movs	r2, #0
 80003b6:	605a      	str	r2, [r3, #4]
}
 80003b8:	bf00      	nop
 80003ba:	46bd      	mov	sp, r7
 80003bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c0:	4770      	bx	lr
 80003c2:	bf00      	nop
 80003c4:	40023800 	.word	0x40023800
 80003c8:	40020000 	.word	0x40020000
 80003cc:	40004400 	.word	0x40004400

080003d0 <USART2_Transmit>:

void USART2_Transmit(char data)
{
 80003d0:	b480      	push	{r7}
 80003d2:	b083      	sub	sp, #12
 80003d4:	af00      	add	r7, sp, #0
 80003d6:	4603      	mov	r3, r0
 80003d8:	71fb      	strb	r3, [r7, #7]
	while (((USART2 -> SR) & TXE)==0);
 80003da:	bf00      	nop
 80003dc:	4b07      	ldr	r3, [pc, #28]	; (80003fc <USART2_Transmit+0x2c>)
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80003e4:	2b00      	cmp	r3, #0
 80003e6:	d0f9      	beq.n	80003dc <USART2_Transmit+0xc>
	//5. Now wait for the Transmit Flag to be set
	USART2 -> DR = data;
 80003e8:	4a04      	ldr	r2, [pc, #16]	; (80003fc <USART2_Transmit+0x2c>)
 80003ea:	79fb      	ldrb	r3, [r7, #7]
 80003ec:	6053      	str	r3, [r2, #4]
	//3. Load the Data
}
 80003ee:	bf00      	nop
 80003f0:	370c      	adds	r7, #12
 80003f2:	46bd      	mov	sp, r7
 80003f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003f8:	4770      	bx	lr
 80003fa:	bf00      	nop
 80003fc:	40004400 	.word	0x40004400

08000400 <__io_putchar>:
	}
	USART2_Transmit('\r');
}

int __io_putchar(int ch)
{
 8000400:	b580      	push	{r7, lr}
 8000402:	b082      	sub	sp, #8
 8000404:	af00      	add	r7, sp, #0
 8000406:	6078      	str	r0, [r7, #4]
	USART2_Transmit(ch);
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	b2db      	uxtb	r3, r3
 800040c:	4618      	mov	r0, r3
 800040e:	f7ff ffdf 	bl	80003d0 <USART2_Transmit>
	return ch;
 8000412:	687b      	ldr	r3, [r7, #4]
}
 8000414:	4618      	mov	r0, r3
 8000416:	3708      	adds	r7, #8
 8000418:	46bd      	mov	sp, r7
 800041a:	bd80      	pop	{r7, pc}

0800041c <main>:
#include "USART2.h"
#include "ADC.h"
#include <stdio.h>

int main(void)
{
 800041c:	b580      	push	{r7, lr}
 800041e:	b084      	sub	sp, #16
 8000420:	af00      	add	r7, sp, #0
	USART2_Init();
 8000422:	f7ff ff9d 	bl	8000360 <USART2_Init>
	printf("UART Init Complete\r\n");
 8000426:	481a      	ldr	r0, [pc, #104]	; (8000490 <main+0x74>)
 8000428:	f000 f9c0 	bl	80007ac <puts>
	int result;
	while(1)
	{
		ADC_Init0();
 800042c:	f7ff ff28 	bl	8000280 <ADC_Init0>
		printf("\n\r\rADC0 Started.");
 8000430:	4818      	ldr	r0, [pc, #96]	; (8000494 <main+0x78>)
 8000432:	f000 f935 	bl	80006a0 <iprintf>
		//Read converted result
		result = ADC_Get_Result();
 8000436:	f7ff ff7b 	bl	8000330 <ADC_Get_Result>
 800043a:	4603      	mov	r3, r0
 800043c:	607b      	str	r3, [r7, #4]
		printf("Value: %d\r",result);
 800043e:	6879      	ldr	r1, [r7, #4]
 8000440:	4815      	ldr	r0, [pc, #84]	; (8000498 <main+0x7c>)
 8000442:	f000 f92d 	bl	80006a0 <iprintf>
		for(int i = 0; i<10000;i=i+1);
 8000446:	2300      	movs	r3, #0
 8000448:	60fb      	str	r3, [r7, #12]
 800044a:	e002      	b.n	8000452 <main+0x36>
 800044c:	68fb      	ldr	r3, [r7, #12]
 800044e:	3301      	adds	r3, #1
 8000450:	60fb      	str	r3, [r7, #12]
 8000452:	68fb      	ldr	r3, [r7, #12]
 8000454:	f242 720f 	movw	r2, #9999	; 0x270f
 8000458:	4293      	cmp	r3, r2
 800045a:	ddf7      	ble.n	800044c <main+0x30>
		ADC_Init1();
 800045c:	f7ff ff3c 	bl	80002d8 <ADC_Init1>
		printf("\nADC1 Started.");
 8000460:	480e      	ldr	r0, [pc, #56]	; (800049c <main+0x80>)
 8000462:	f000 f91d 	bl	80006a0 <iprintf>
		//Read converted result
		result = ADC_Get_Result();
 8000466:	f7ff ff63 	bl	8000330 <ADC_Get_Result>
 800046a:	4603      	mov	r3, r0
 800046c:	607b      	str	r3, [r7, #4]
		printf("Value: %d\r",result);
 800046e:	6879      	ldr	r1, [r7, #4]
 8000470:	4809      	ldr	r0, [pc, #36]	; (8000498 <main+0x7c>)
 8000472:	f000 f915 	bl	80006a0 <iprintf>
		for(int i = 0; i<10000;i=i+1);
 8000476:	2300      	movs	r3, #0
 8000478:	60bb      	str	r3, [r7, #8]
 800047a:	e002      	b.n	8000482 <main+0x66>
 800047c:	68bb      	ldr	r3, [r7, #8]
 800047e:	3301      	adds	r3, #1
 8000480:	60bb      	str	r3, [r7, #8]
 8000482:	68bb      	ldr	r3, [r7, #8]
 8000484:	f242 720f 	movw	r2, #9999	; 0x270f
 8000488:	4293      	cmp	r3, r2
 800048a:	ddf7      	ble.n	800047c <main+0x60>
		ADC_Init0();
 800048c:	e7ce      	b.n	800042c <main+0x10>
 800048e:	bf00      	nop
 8000490:	080016c0 	.word	0x080016c0
 8000494:	080016d4 	.word	0x080016d4
 8000498:	080016e8 	.word	0x080016e8
 800049c:	080016f4 	.word	0x080016f4

080004a0 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80004a0:	b580      	push	{r7, lr}
 80004a2:	b086      	sub	sp, #24
 80004a4:	af00      	add	r7, sp, #0
 80004a6:	60f8      	str	r0, [r7, #12]
 80004a8:	60b9      	str	r1, [r7, #8]
 80004aa:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004ac:	2300      	movs	r3, #0
 80004ae:	617b      	str	r3, [r7, #20]
 80004b0:	e00a      	b.n	80004c8 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80004b2:	f3af 8000 	nop.w
 80004b6:	4601      	mov	r1, r0
 80004b8:	68bb      	ldr	r3, [r7, #8]
 80004ba:	1c5a      	adds	r2, r3, #1
 80004bc:	60ba      	str	r2, [r7, #8]
 80004be:	b2ca      	uxtb	r2, r1
 80004c0:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004c2:	697b      	ldr	r3, [r7, #20]
 80004c4:	3301      	adds	r3, #1
 80004c6:	617b      	str	r3, [r7, #20]
 80004c8:	697a      	ldr	r2, [r7, #20]
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	429a      	cmp	r2, r3
 80004ce:	dbf0      	blt.n	80004b2 <_read+0x12>
	}

return len;
 80004d0:	687b      	ldr	r3, [r7, #4]
}
 80004d2:	4618      	mov	r0, r3
 80004d4:	3718      	adds	r7, #24
 80004d6:	46bd      	mov	sp, r7
 80004d8:	bd80      	pop	{r7, pc}

080004da <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80004da:	b580      	push	{r7, lr}
 80004dc:	b086      	sub	sp, #24
 80004de:	af00      	add	r7, sp, #0
 80004e0:	60f8      	str	r0, [r7, #12]
 80004e2:	60b9      	str	r1, [r7, #8]
 80004e4:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004e6:	2300      	movs	r3, #0
 80004e8:	617b      	str	r3, [r7, #20]
 80004ea:	e009      	b.n	8000500 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80004ec:	68bb      	ldr	r3, [r7, #8]
 80004ee:	1c5a      	adds	r2, r3, #1
 80004f0:	60ba      	str	r2, [r7, #8]
 80004f2:	781b      	ldrb	r3, [r3, #0]
 80004f4:	4618      	mov	r0, r3
 80004f6:	f7ff ff83 	bl	8000400 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004fa:	697b      	ldr	r3, [r7, #20]
 80004fc:	3301      	adds	r3, #1
 80004fe:	617b      	str	r3, [r7, #20]
 8000500:	697a      	ldr	r2, [r7, #20]
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	429a      	cmp	r2, r3
 8000506:	dbf1      	blt.n	80004ec <_write+0x12>
	}
	return len;
 8000508:	687b      	ldr	r3, [r7, #4]
}
 800050a:	4618      	mov	r0, r3
 800050c:	3718      	adds	r7, #24
 800050e:	46bd      	mov	sp, r7
 8000510:	bd80      	pop	{r7, pc}

08000512 <_close>:

int _close(int file)
{
 8000512:	b480      	push	{r7}
 8000514:	b083      	sub	sp, #12
 8000516:	af00      	add	r7, sp, #0
 8000518:	6078      	str	r0, [r7, #4]
	return -1;
 800051a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800051e:	4618      	mov	r0, r3
 8000520:	370c      	adds	r7, #12
 8000522:	46bd      	mov	sp, r7
 8000524:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000528:	4770      	bx	lr

0800052a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800052a:	b480      	push	{r7}
 800052c:	b083      	sub	sp, #12
 800052e:	af00      	add	r7, sp, #0
 8000530:	6078      	str	r0, [r7, #4]
 8000532:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000534:	683b      	ldr	r3, [r7, #0]
 8000536:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800053a:	605a      	str	r2, [r3, #4]
	return 0;
 800053c:	2300      	movs	r3, #0
}
 800053e:	4618      	mov	r0, r3
 8000540:	370c      	adds	r7, #12
 8000542:	46bd      	mov	sp, r7
 8000544:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000548:	4770      	bx	lr

0800054a <_isatty>:

int _isatty(int file)
{
 800054a:	b480      	push	{r7}
 800054c:	b083      	sub	sp, #12
 800054e:	af00      	add	r7, sp, #0
 8000550:	6078      	str	r0, [r7, #4]
	return 1;
 8000552:	2301      	movs	r3, #1
}
 8000554:	4618      	mov	r0, r3
 8000556:	370c      	adds	r7, #12
 8000558:	46bd      	mov	sp, r7
 800055a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800055e:	4770      	bx	lr

08000560 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000560:	b480      	push	{r7}
 8000562:	b085      	sub	sp, #20
 8000564:	af00      	add	r7, sp, #0
 8000566:	60f8      	str	r0, [r7, #12]
 8000568:	60b9      	str	r1, [r7, #8]
 800056a:	607a      	str	r2, [r7, #4]
	return 0;
 800056c:	2300      	movs	r3, #0
}
 800056e:	4618      	mov	r0, r3
 8000570:	3714      	adds	r7, #20
 8000572:	46bd      	mov	sp, r7
 8000574:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000578:	4770      	bx	lr
	...

0800057c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800057c:	b580      	push	{r7, lr}
 800057e:	b086      	sub	sp, #24
 8000580:	af00      	add	r7, sp, #0
 8000582:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000584:	4a14      	ldr	r2, [pc, #80]	; (80005d8 <_sbrk+0x5c>)
 8000586:	4b15      	ldr	r3, [pc, #84]	; (80005dc <_sbrk+0x60>)
 8000588:	1ad3      	subs	r3, r2, r3
 800058a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800058c:	697b      	ldr	r3, [r7, #20]
 800058e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000590:	4b13      	ldr	r3, [pc, #76]	; (80005e0 <_sbrk+0x64>)
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	2b00      	cmp	r3, #0
 8000596:	d102      	bne.n	800059e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000598:	4b11      	ldr	r3, [pc, #68]	; (80005e0 <_sbrk+0x64>)
 800059a:	4a12      	ldr	r2, [pc, #72]	; (80005e4 <_sbrk+0x68>)
 800059c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800059e:	4b10      	ldr	r3, [pc, #64]	; (80005e0 <_sbrk+0x64>)
 80005a0:	681a      	ldr	r2, [r3, #0]
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	4413      	add	r3, r2
 80005a6:	693a      	ldr	r2, [r7, #16]
 80005a8:	429a      	cmp	r2, r3
 80005aa:	d207      	bcs.n	80005bc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80005ac:	f000 f846 	bl	800063c <__errno>
 80005b0:	4603      	mov	r3, r0
 80005b2:	220c      	movs	r2, #12
 80005b4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80005b6:	f04f 33ff 	mov.w	r3, #4294967295
 80005ba:	e009      	b.n	80005d0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80005bc:	4b08      	ldr	r3, [pc, #32]	; (80005e0 <_sbrk+0x64>)
 80005be:	681b      	ldr	r3, [r3, #0]
 80005c0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80005c2:	4b07      	ldr	r3, [pc, #28]	; (80005e0 <_sbrk+0x64>)
 80005c4:	681a      	ldr	r2, [r3, #0]
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	4413      	add	r3, r2
 80005ca:	4a05      	ldr	r2, [pc, #20]	; (80005e0 <_sbrk+0x64>)
 80005cc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80005ce:	68fb      	ldr	r3, [r7, #12]
}
 80005d0:	4618      	mov	r0, r3
 80005d2:	3718      	adds	r7, #24
 80005d4:	46bd      	mov	sp, r7
 80005d6:	bd80      	pop	{r7, pc}
 80005d8:	20018000 	.word	0x20018000
 80005dc:	00000400 	.word	0x00000400
 80005e0:	20000080 	.word	0x20000080
 80005e4:	20000098 	.word	0x20000098

080005e8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005e8:	480d      	ldr	r0, [pc, #52]	; (8000620 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005ea:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80005ec:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005f0:	480c      	ldr	r0, [pc, #48]	; (8000624 <LoopForever+0x6>)
  ldr r1, =_edata
 80005f2:	490d      	ldr	r1, [pc, #52]	; (8000628 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005f4:	4a0d      	ldr	r2, [pc, #52]	; (800062c <LoopForever+0xe>)
  movs r3, #0
 80005f6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005f8:	e002      	b.n	8000600 <LoopCopyDataInit>

080005fa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005fa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005fc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005fe:	3304      	adds	r3, #4

08000600 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000600:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000602:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000604:	d3f9      	bcc.n	80005fa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000606:	4a0a      	ldr	r2, [pc, #40]	; (8000630 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000608:	4c0a      	ldr	r4, [pc, #40]	; (8000634 <LoopForever+0x16>)
  movs r3, #0
 800060a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800060c:	e001      	b.n	8000612 <LoopFillZerobss>

0800060e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800060e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000610:	3204      	adds	r2, #4

08000612 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000612:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000614:	d3fb      	bcc.n	800060e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000616:	f000 f817 	bl	8000648 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800061a:	f7ff feff 	bl	800041c <main>

0800061e <LoopForever>:

LoopForever:
    b LoopForever
 800061e:	e7fe      	b.n	800061e <LoopForever>
  ldr   r0, =_estack
 8000620:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000624:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000628:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 800062c:	080017a4 	.word	0x080017a4
  ldr r2, =_sbss
 8000630:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000634:	20000094 	.word	0x20000094

08000638 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000638:	e7fe      	b.n	8000638 <ADC_IRQHandler>
	...

0800063c <__errno>:
 800063c:	4b01      	ldr	r3, [pc, #4]	; (8000644 <__errno+0x8>)
 800063e:	6818      	ldr	r0, [r3, #0]
 8000640:	4770      	bx	lr
 8000642:	bf00      	nop
 8000644:	20000000 	.word	0x20000000

08000648 <__libc_init_array>:
 8000648:	b570      	push	{r4, r5, r6, lr}
 800064a:	4d0d      	ldr	r5, [pc, #52]	; (8000680 <__libc_init_array+0x38>)
 800064c:	4c0d      	ldr	r4, [pc, #52]	; (8000684 <__libc_init_array+0x3c>)
 800064e:	1b64      	subs	r4, r4, r5
 8000650:	10a4      	asrs	r4, r4, #2
 8000652:	2600      	movs	r6, #0
 8000654:	42a6      	cmp	r6, r4
 8000656:	d109      	bne.n	800066c <__libc_init_array+0x24>
 8000658:	4d0b      	ldr	r5, [pc, #44]	; (8000688 <__libc_init_array+0x40>)
 800065a:	4c0c      	ldr	r4, [pc, #48]	; (800068c <__libc_init_array+0x44>)
 800065c:	f001 f824 	bl	80016a8 <_init>
 8000660:	1b64      	subs	r4, r4, r5
 8000662:	10a4      	asrs	r4, r4, #2
 8000664:	2600      	movs	r6, #0
 8000666:	42a6      	cmp	r6, r4
 8000668:	d105      	bne.n	8000676 <__libc_init_array+0x2e>
 800066a:	bd70      	pop	{r4, r5, r6, pc}
 800066c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000670:	4798      	blx	r3
 8000672:	3601      	adds	r6, #1
 8000674:	e7ee      	b.n	8000654 <__libc_init_array+0xc>
 8000676:	f855 3b04 	ldr.w	r3, [r5], #4
 800067a:	4798      	blx	r3
 800067c:	3601      	adds	r6, #1
 800067e:	e7f2      	b.n	8000666 <__libc_init_array+0x1e>
 8000680:	0800179c 	.word	0x0800179c
 8000684:	0800179c 	.word	0x0800179c
 8000688:	0800179c 	.word	0x0800179c
 800068c:	080017a0 	.word	0x080017a0

08000690 <memset>:
 8000690:	4402      	add	r2, r0
 8000692:	4603      	mov	r3, r0
 8000694:	4293      	cmp	r3, r2
 8000696:	d100      	bne.n	800069a <memset+0xa>
 8000698:	4770      	bx	lr
 800069a:	f803 1b01 	strb.w	r1, [r3], #1
 800069e:	e7f9      	b.n	8000694 <memset+0x4>

080006a0 <iprintf>:
 80006a0:	b40f      	push	{r0, r1, r2, r3}
 80006a2:	4b0a      	ldr	r3, [pc, #40]	; (80006cc <iprintf+0x2c>)
 80006a4:	b513      	push	{r0, r1, r4, lr}
 80006a6:	681c      	ldr	r4, [r3, #0]
 80006a8:	b124      	cbz	r4, 80006b4 <iprintf+0x14>
 80006aa:	69a3      	ldr	r3, [r4, #24]
 80006ac:	b913      	cbnz	r3, 80006b4 <iprintf+0x14>
 80006ae:	4620      	mov	r0, r4
 80006b0:	f000 fa5e 	bl	8000b70 <__sinit>
 80006b4:	ab05      	add	r3, sp, #20
 80006b6:	9a04      	ldr	r2, [sp, #16]
 80006b8:	68a1      	ldr	r1, [r4, #8]
 80006ba:	9301      	str	r3, [sp, #4]
 80006bc:	4620      	mov	r0, r4
 80006be:	f000 fc67 	bl	8000f90 <_vfiprintf_r>
 80006c2:	b002      	add	sp, #8
 80006c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006c8:	b004      	add	sp, #16
 80006ca:	4770      	bx	lr
 80006cc:	20000000 	.word	0x20000000

080006d0 <_puts_r>:
 80006d0:	b570      	push	{r4, r5, r6, lr}
 80006d2:	460e      	mov	r6, r1
 80006d4:	4605      	mov	r5, r0
 80006d6:	b118      	cbz	r0, 80006e0 <_puts_r+0x10>
 80006d8:	6983      	ldr	r3, [r0, #24]
 80006da:	b90b      	cbnz	r3, 80006e0 <_puts_r+0x10>
 80006dc:	f000 fa48 	bl	8000b70 <__sinit>
 80006e0:	69ab      	ldr	r3, [r5, #24]
 80006e2:	68ac      	ldr	r4, [r5, #8]
 80006e4:	b913      	cbnz	r3, 80006ec <_puts_r+0x1c>
 80006e6:	4628      	mov	r0, r5
 80006e8:	f000 fa42 	bl	8000b70 <__sinit>
 80006ec:	4b2c      	ldr	r3, [pc, #176]	; (80007a0 <_puts_r+0xd0>)
 80006ee:	429c      	cmp	r4, r3
 80006f0:	d120      	bne.n	8000734 <_puts_r+0x64>
 80006f2:	686c      	ldr	r4, [r5, #4]
 80006f4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80006f6:	07db      	lsls	r3, r3, #31
 80006f8:	d405      	bmi.n	8000706 <_puts_r+0x36>
 80006fa:	89a3      	ldrh	r3, [r4, #12]
 80006fc:	0598      	lsls	r0, r3, #22
 80006fe:	d402      	bmi.n	8000706 <_puts_r+0x36>
 8000700:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000702:	f000 fad3 	bl	8000cac <__retarget_lock_acquire_recursive>
 8000706:	89a3      	ldrh	r3, [r4, #12]
 8000708:	0719      	lsls	r1, r3, #28
 800070a:	d51d      	bpl.n	8000748 <_puts_r+0x78>
 800070c:	6923      	ldr	r3, [r4, #16]
 800070e:	b1db      	cbz	r3, 8000748 <_puts_r+0x78>
 8000710:	3e01      	subs	r6, #1
 8000712:	68a3      	ldr	r3, [r4, #8]
 8000714:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000718:	3b01      	subs	r3, #1
 800071a:	60a3      	str	r3, [r4, #8]
 800071c:	bb39      	cbnz	r1, 800076e <_puts_r+0x9e>
 800071e:	2b00      	cmp	r3, #0
 8000720:	da38      	bge.n	8000794 <_puts_r+0xc4>
 8000722:	4622      	mov	r2, r4
 8000724:	210a      	movs	r1, #10
 8000726:	4628      	mov	r0, r5
 8000728:	f000 f848 	bl	80007bc <__swbuf_r>
 800072c:	3001      	adds	r0, #1
 800072e:	d011      	beq.n	8000754 <_puts_r+0x84>
 8000730:	250a      	movs	r5, #10
 8000732:	e011      	b.n	8000758 <_puts_r+0x88>
 8000734:	4b1b      	ldr	r3, [pc, #108]	; (80007a4 <_puts_r+0xd4>)
 8000736:	429c      	cmp	r4, r3
 8000738:	d101      	bne.n	800073e <_puts_r+0x6e>
 800073a:	68ac      	ldr	r4, [r5, #8]
 800073c:	e7da      	b.n	80006f4 <_puts_r+0x24>
 800073e:	4b1a      	ldr	r3, [pc, #104]	; (80007a8 <_puts_r+0xd8>)
 8000740:	429c      	cmp	r4, r3
 8000742:	bf08      	it	eq
 8000744:	68ec      	ldreq	r4, [r5, #12]
 8000746:	e7d5      	b.n	80006f4 <_puts_r+0x24>
 8000748:	4621      	mov	r1, r4
 800074a:	4628      	mov	r0, r5
 800074c:	f000 f888 	bl	8000860 <__swsetup_r>
 8000750:	2800      	cmp	r0, #0
 8000752:	d0dd      	beq.n	8000710 <_puts_r+0x40>
 8000754:	f04f 35ff 	mov.w	r5, #4294967295
 8000758:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800075a:	07da      	lsls	r2, r3, #31
 800075c:	d405      	bmi.n	800076a <_puts_r+0x9a>
 800075e:	89a3      	ldrh	r3, [r4, #12]
 8000760:	059b      	lsls	r3, r3, #22
 8000762:	d402      	bmi.n	800076a <_puts_r+0x9a>
 8000764:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000766:	f000 faa2 	bl	8000cae <__retarget_lock_release_recursive>
 800076a:	4628      	mov	r0, r5
 800076c:	bd70      	pop	{r4, r5, r6, pc}
 800076e:	2b00      	cmp	r3, #0
 8000770:	da04      	bge.n	800077c <_puts_r+0xac>
 8000772:	69a2      	ldr	r2, [r4, #24]
 8000774:	429a      	cmp	r2, r3
 8000776:	dc06      	bgt.n	8000786 <_puts_r+0xb6>
 8000778:	290a      	cmp	r1, #10
 800077a:	d004      	beq.n	8000786 <_puts_r+0xb6>
 800077c:	6823      	ldr	r3, [r4, #0]
 800077e:	1c5a      	adds	r2, r3, #1
 8000780:	6022      	str	r2, [r4, #0]
 8000782:	7019      	strb	r1, [r3, #0]
 8000784:	e7c5      	b.n	8000712 <_puts_r+0x42>
 8000786:	4622      	mov	r2, r4
 8000788:	4628      	mov	r0, r5
 800078a:	f000 f817 	bl	80007bc <__swbuf_r>
 800078e:	3001      	adds	r0, #1
 8000790:	d1bf      	bne.n	8000712 <_puts_r+0x42>
 8000792:	e7df      	b.n	8000754 <_puts_r+0x84>
 8000794:	6823      	ldr	r3, [r4, #0]
 8000796:	250a      	movs	r5, #10
 8000798:	1c5a      	adds	r2, r3, #1
 800079a:	6022      	str	r2, [r4, #0]
 800079c:	701d      	strb	r5, [r3, #0]
 800079e:	e7db      	b.n	8000758 <_puts_r+0x88>
 80007a0:	08001728 	.word	0x08001728
 80007a4:	08001748 	.word	0x08001748
 80007a8:	08001708 	.word	0x08001708

080007ac <puts>:
 80007ac:	4b02      	ldr	r3, [pc, #8]	; (80007b8 <puts+0xc>)
 80007ae:	4601      	mov	r1, r0
 80007b0:	6818      	ldr	r0, [r3, #0]
 80007b2:	f7ff bf8d 	b.w	80006d0 <_puts_r>
 80007b6:	bf00      	nop
 80007b8:	20000000 	.word	0x20000000

080007bc <__swbuf_r>:
 80007bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007be:	460e      	mov	r6, r1
 80007c0:	4614      	mov	r4, r2
 80007c2:	4605      	mov	r5, r0
 80007c4:	b118      	cbz	r0, 80007ce <__swbuf_r+0x12>
 80007c6:	6983      	ldr	r3, [r0, #24]
 80007c8:	b90b      	cbnz	r3, 80007ce <__swbuf_r+0x12>
 80007ca:	f000 f9d1 	bl	8000b70 <__sinit>
 80007ce:	4b21      	ldr	r3, [pc, #132]	; (8000854 <__swbuf_r+0x98>)
 80007d0:	429c      	cmp	r4, r3
 80007d2:	d12b      	bne.n	800082c <__swbuf_r+0x70>
 80007d4:	686c      	ldr	r4, [r5, #4]
 80007d6:	69a3      	ldr	r3, [r4, #24]
 80007d8:	60a3      	str	r3, [r4, #8]
 80007da:	89a3      	ldrh	r3, [r4, #12]
 80007dc:	071a      	lsls	r2, r3, #28
 80007de:	d52f      	bpl.n	8000840 <__swbuf_r+0x84>
 80007e0:	6923      	ldr	r3, [r4, #16]
 80007e2:	b36b      	cbz	r3, 8000840 <__swbuf_r+0x84>
 80007e4:	6923      	ldr	r3, [r4, #16]
 80007e6:	6820      	ldr	r0, [r4, #0]
 80007e8:	1ac0      	subs	r0, r0, r3
 80007ea:	6963      	ldr	r3, [r4, #20]
 80007ec:	b2f6      	uxtb	r6, r6
 80007ee:	4283      	cmp	r3, r0
 80007f0:	4637      	mov	r7, r6
 80007f2:	dc04      	bgt.n	80007fe <__swbuf_r+0x42>
 80007f4:	4621      	mov	r1, r4
 80007f6:	4628      	mov	r0, r5
 80007f8:	f000 f926 	bl	8000a48 <_fflush_r>
 80007fc:	bb30      	cbnz	r0, 800084c <__swbuf_r+0x90>
 80007fe:	68a3      	ldr	r3, [r4, #8]
 8000800:	3b01      	subs	r3, #1
 8000802:	60a3      	str	r3, [r4, #8]
 8000804:	6823      	ldr	r3, [r4, #0]
 8000806:	1c5a      	adds	r2, r3, #1
 8000808:	6022      	str	r2, [r4, #0]
 800080a:	701e      	strb	r6, [r3, #0]
 800080c:	6963      	ldr	r3, [r4, #20]
 800080e:	3001      	adds	r0, #1
 8000810:	4283      	cmp	r3, r0
 8000812:	d004      	beq.n	800081e <__swbuf_r+0x62>
 8000814:	89a3      	ldrh	r3, [r4, #12]
 8000816:	07db      	lsls	r3, r3, #31
 8000818:	d506      	bpl.n	8000828 <__swbuf_r+0x6c>
 800081a:	2e0a      	cmp	r6, #10
 800081c:	d104      	bne.n	8000828 <__swbuf_r+0x6c>
 800081e:	4621      	mov	r1, r4
 8000820:	4628      	mov	r0, r5
 8000822:	f000 f911 	bl	8000a48 <_fflush_r>
 8000826:	b988      	cbnz	r0, 800084c <__swbuf_r+0x90>
 8000828:	4638      	mov	r0, r7
 800082a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800082c:	4b0a      	ldr	r3, [pc, #40]	; (8000858 <__swbuf_r+0x9c>)
 800082e:	429c      	cmp	r4, r3
 8000830:	d101      	bne.n	8000836 <__swbuf_r+0x7a>
 8000832:	68ac      	ldr	r4, [r5, #8]
 8000834:	e7cf      	b.n	80007d6 <__swbuf_r+0x1a>
 8000836:	4b09      	ldr	r3, [pc, #36]	; (800085c <__swbuf_r+0xa0>)
 8000838:	429c      	cmp	r4, r3
 800083a:	bf08      	it	eq
 800083c:	68ec      	ldreq	r4, [r5, #12]
 800083e:	e7ca      	b.n	80007d6 <__swbuf_r+0x1a>
 8000840:	4621      	mov	r1, r4
 8000842:	4628      	mov	r0, r5
 8000844:	f000 f80c 	bl	8000860 <__swsetup_r>
 8000848:	2800      	cmp	r0, #0
 800084a:	d0cb      	beq.n	80007e4 <__swbuf_r+0x28>
 800084c:	f04f 37ff 	mov.w	r7, #4294967295
 8000850:	e7ea      	b.n	8000828 <__swbuf_r+0x6c>
 8000852:	bf00      	nop
 8000854:	08001728 	.word	0x08001728
 8000858:	08001748 	.word	0x08001748
 800085c:	08001708 	.word	0x08001708

08000860 <__swsetup_r>:
 8000860:	4b32      	ldr	r3, [pc, #200]	; (800092c <__swsetup_r+0xcc>)
 8000862:	b570      	push	{r4, r5, r6, lr}
 8000864:	681d      	ldr	r5, [r3, #0]
 8000866:	4606      	mov	r6, r0
 8000868:	460c      	mov	r4, r1
 800086a:	b125      	cbz	r5, 8000876 <__swsetup_r+0x16>
 800086c:	69ab      	ldr	r3, [r5, #24]
 800086e:	b913      	cbnz	r3, 8000876 <__swsetup_r+0x16>
 8000870:	4628      	mov	r0, r5
 8000872:	f000 f97d 	bl	8000b70 <__sinit>
 8000876:	4b2e      	ldr	r3, [pc, #184]	; (8000930 <__swsetup_r+0xd0>)
 8000878:	429c      	cmp	r4, r3
 800087a:	d10f      	bne.n	800089c <__swsetup_r+0x3c>
 800087c:	686c      	ldr	r4, [r5, #4]
 800087e:	89a3      	ldrh	r3, [r4, #12]
 8000880:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000884:	0719      	lsls	r1, r3, #28
 8000886:	d42c      	bmi.n	80008e2 <__swsetup_r+0x82>
 8000888:	06dd      	lsls	r5, r3, #27
 800088a:	d411      	bmi.n	80008b0 <__swsetup_r+0x50>
 800088c:	2309      	movs	r3, #9
 800088e:	6033      	str	r3, [r6, #0]
 8000890:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000894:	81a3      	strh	r3, [r4, #12]
 8000896:	f04f 30ff 	mov.w	r0, #4294967295
 800089a:	e03e      	b.n	800091a <__swsetup_r+0xba>
 800089c:	4b25      	ldr	r3, [pc, #148]	; (8000934 <__swsetup_r+0xd4>)
 800089e:	429c      	cmp	r4, r3
 80008a0:	d101      	bne.n	80008a6 <__swsetup_r+0x46>
 80008a2:	68ac      	ldr	r4, [r5, #8]
 80008a4:	e7eb      	b.n	800087e <__swsetup_r+0x1e>
 80008a6:	4b24      	ldr	r3, [pc, #144]	; (8000938 <__swsetup_r+0xd8>)
 80008a8:	429c      	cmp	r4, r3
 80008aa:	bf08      	it	eq
 80008ac:	68ec      	ldreq	r4, [r5, #12]
 80008ae:	e7e6      	b.n	800087e <__swsetup_r+0x1e>
 80008b0:	0758      	lsls	r0, r3, #29
 80008b2:	d512      	bpl.n	80008da <__swsetup_r+0x7a>
 80008b4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80008b6:	b141      	cbz	r1, 80008ca <__swsetup_r+0x6a>
 80008b8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80008bc:	4299      	cmp	r1, r3
 80008be:	d002      	beq.n	80008c6 <__swsetup_r+0x66>
 80008c0:	4630      	mov	r0, r6
 80008c2:	f000 fa5b 	bl	8000d7c <_free_r>
 80008c6:	2300      	movs	r3, #0
 80008c8:	6363      	str	r3, [r4, #52]	; 0x34
 80008ca:	89a3      	ldrh	r3, [r4, #12]
 80008cc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80008d0:	81a3      	strh	r3, [r4, #12]
 80008d2:	2300      	movs	r3, #0
 80008d4:	6063      	str	r3, [r4, #4]
 80008d6:	6923      	ldr	r3, [r4, #16]
 80008d8:	6023      	str	r3, [r4, #0]
 80008da:	89a3      	ldrh	r3, [r4, #12]
 80008dc:	f043 0308 	orr.w	r3, r3, #8
 80008e0:	81a3      	strh	r3, [r4, #12]
 80008e2:	6923      	ldr	r3, [r4, #16]
 80008e4:	b94b      	cbnz	r3, 80008fa <__swsetup_r+0x9a>
 80008e6:	89a3      	ldrh	r3, [r4, #12]
 80008e8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80008ec:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80008f0:	d003      	beq.n	80008fa <__swsetup_r+0x9a>
 80008f2:	4621      	mov	r1, r4
 80008f4:	4630      	mov	r0, r6
 80008f6:	f000 fa01 	bl	8000cfc <__smakebuf_r>
 80008fa:	89a0      	ldrh	r0, [r4, #12]
 80008fc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000900:	f010 0301 	ands.w	r3, r0, #1
 8000904:	d00a      	beq.n	800091c <__swsetup_r+0xbc>
 8000906:	2300      	movs	r3, #0
 8000908:	60a3      	str	r3, [r4, #8]
 800090a:	6963      	ldr	r3, [r4, #20]
 800090c:	425b      	negs	r3, r3
 800090e:	61a3      	str	r3, [r4, #24]
 8000910:	6923      	ldr	r3, [r4, #16]
 8000912:	b943      	cbnz	r3, 8000926 <__swsetup_r+0xc6>
 8000914:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000918:	d1ba      	bne.n	8000890 <__swsetup_r+0x30>
 800091a:	bd70      	pop	{r4, r5, r6, pc}
 800091c:	0781      	lsls	r1, r0, #30
 800091e:	bf58      	it	pl
 8000920:	6963      	ldrpl	r3, [r4, #20]
 8000922:	60a3      	str	r3, [r4, #8]
 8000924:	e7f4      	b.n	8000910 <__swsetup_r+0xb0>
 8000926:	2000      	movs	r0, #0
 8000928:	e7f7      	b.n	800091a <__swsetup_r+0xba>
 800092a:	bf00      	nop
 800092c:	20000000 	.word	0x20000000
 8000930:	08001728 	.word	0x08001728
 8000934:	08001748 	.word	0x08001748
 8000938:	08001708 	.word	0x08001708

0800093c <__sflush_r>:
 800093c:	898a      	ldrh	r2, [r1, #12]
 800093e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000942:	4605      	mov	r5, r0
 8000944:	0710      	lsls	r0, r2, #28
 8000946:	460c      	mov	r4, r1
 8000948:	d458      	bmi.n	80009fc <__sflush_r+0xc0>
 800094a:	684b      	ldr	r3, [r1, #4]
 800094c:	2b00      	cmp	r3, #0
 800094e:	dc05      	bgt.n	800095c <__sflush_r+0x20>
 8000950:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000952:	2b00      	cmp	r3, #0
 8000954:	dc02      	bgt.n	800095c <__sflush_r+0x20>
 8000956:	2000      	movs	r0, #0
 8000958:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800095c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800095e:	2e00      	cmp	r6, #0
 8000960:	d0f9      	beq.n	8000956 <__sflush_r+0x1a>
 8000962:	2300      	movs	r3, #0
 8000964:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000968:	682f      	ldr	r7, [r5, #0]
 800096a:	602b      	str	r3, [r5, #0]
 800096c:	d032      	beq.n	80009d4 <__sflush_r+0x98>
 800096e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000970:	89a3      	ldrh	r3, [r4, #12]
 8000972:	075a      	lsls	r2, r3, #29
 8000974:	d505      	bpl.n	8000982 <__sflush_r+0x46>
 8000976:	6863      	ldr	r3, [r4, #4]
 8000978:	1ac0      	subs	r0, r0, r3
 800097a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800097c:	b10b      	cbz	r3, 8000982 <__sflush_r+0x46>
 800097e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000980:	1ac0      	subs	r0, r0, r3
 8000982:	2300      	movs	r3, #0
 8000984:	4602      	mov	r2, r0
 8000986:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000988:	6a21      	ldr	r1, [r4, #32]
 800098a:	4628      	mov	r0, r5
 800098c:	47b0      	blx	r6
 800098e:	1c43      	adds	r3, r0, #1
 8000990:	89a3      	ldrh	r3, [r4, #12]
 8000992:	d106      	bne.n	80009a2 <__sflush_r+0x66>
 8000994:	6829      	ldr	r1, [r5, #0]
 8000996:	291d      	cmp	r1, #29
 8000998:	d82c      	bhi.n	80009f4 <__sflush_r+0xb8>
 800099a:	4a2a      	ldr	r2, [pc, #168]	; (8000a44 <__sflush_r+0x108>)
 800099c:	40ca      	lsrs	r2, r1
 800099e:	07d6      	lsls	r6, r2, #31
 80009a0:	d528      	bpl.n	80009f4 <__sflush_r+0xb8>
 80009a2:	2200      	movs	r2, #0
 80009a4:	6062      	str	r2, [r4, #4]
 80009a6:	04d9      	lsls	r1, r3, #19
 80009a8:	6922      	ldr	r2, [r4, #16]
 80009aa:	6022      	str	r2, [r4, #0]
 80009ac:	d504      	bpl.n	80009b8 <__sflush_r+0x7c>
 80009ae:	1c42      	adds	r2, r0, #1
 80009b0:	d101      	bne.n	80009b6 <__sflush_r+0x7a>
 80009b2:	682b      	ldr	r3, [r5, #0]
 80009b4:	b903      	cbnz	r3, 80009b8 <__sflush_r+0x7c>
 80009b6:	6560      	str	r0, [r4, #84]	; 0x54
 80009b8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80009ba:	602f      	str	r7, [r5, #0]
 80009bc:	2900      	cmp	r1, #0
 80009be:	d0ca      	beq.n	8000956 <__sflush_r+0x1a>
 80009c0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80009c4:	4299      	cmp	r1, r3
 80009c6:	d002      	beq.n	80009ce <__sflush_r+0x92>
 80009c8:	4628      	mov	r0, r5
 80009ca:	f000 f9d7 	bl	8000d7c <_free_r>
 80009ce:	2000      	movs	r0, #0
 80009d0:	6360      	str	r0, [r4, #52]	; 0x34
 80009d2:	e7c1      	b.n	8000958 <__sflush_r+0x1c>
 80009d4:	6a21      	ldr	r1, [r4, #32]
 80009d6:	2301      	movs	r3, #1
 80009d8:	4628      	mov	r0, r5
 80009da:	47b0      	blx	r6
 80009dc:	1c41      	adds	r1, r0, #1
 80009de:	d1c7      	bne.n	8000970 <__sflush_r+0x34>
 80009e0:	682b      	ldr	r3, [r5, #0]
 80009e2:	2b00      	cmp	r3, #0
 80009e4:	d0c4      	beq.n	8000970 <__sflush_r+0x34>
 80009e6:	2b1d      	cmp	r3, #29
 80009e8:	d001      	beq.n	80009ee <__sflush_r+0xb2>
 80009ea:	2b16      	cmp	r3, #22
 80009ec:	d101      	bne.n	80009f2 <__sflush_r+0xb6>
 80009ee:	602f      	str	r7, [r5, #0]
 80009f0:	e7b1      	b.n	8000956 <__sflush_r+0x1a>
 80009f2:	89a3      	ldrh	r3, [r4, #12]
 80009f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80009f8:	81a3      	strh	r3, [r4, #12]
 80009fa:	e7ad      	b.n	8000958 <__sflush_r+0x1c>
 80009fc:	690f      	ldr	r7, [r1, #16]
 80009fe:	2f00      	cmp	r7, #0
 8000a00:	d0a9      	beq.n	8000956 <__sflush_r+0x1a>
 8000a02:	0793      	lsls	r3, r2, #30
 8000a04:	680e      	ldr	r6, [r1, #0]
 8000a06:	bf08      	it	eq
 8000a08:	694b      	ldreq	r3, [r1, #20]
 8000a0a:	600f      	str	r7, [r1, #0]
 8000a0c:	bf18      	it	ne
 8000a0e:	2300      	movne	r3, #0
 8000a10:	eba6 0807 	sub.w	r8, r6, r7
 8000a14:	608b      	str	r3, [r1, #8]
 8000a16:	f1b8 0f00 	cmp.w	r8, #0
 8000a1a:	dd9c      	ble.n	8000956 <__sflush_r+0x1a>
 8000a1c:	6a21      	ldr	r1, [r4, #32]
 8000a1e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000a20:	4643      	mov	r3, r8
 8000a22:	463a      	mov	r2, r7
 8000a24:	4628      	mov	r0, r5
 8000a26:	47b0      	blx	r6
 8000a28:	2800      	cmp	r0, #0
 8000a2a:	dc06      	bgt.n	8000a3a <__sflush_r+0xfe>
 8000a2c:	89a3      	ldrh	r3, [r4, #12]
 8000a2e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000a32:	81a3      	strh	r3, [r4, #12]
 8000a34:	f04f 30ff 	mov.w	r0, #4294967295
 8000a38:	e78e      	b.n	8000958 <__sflush_r+0x1c>
 8000a3a:	4407      	add	r7, r0
 8000a3c:	eba8 0800 	sub.w	r8, r8, r0
 8000a40:	e7e9      	b.n	8000a16 <__sflush_r+0xda>
 8000a42:	bf00      	nop
 8000a44:	20400001 	.word	0x20400001

08000a48 <_fflush_r>:
 8000a48:	b538      	push	{r3, r4, r5, lr}
 8000a4a:	690b      	ldr	r3, [r1, #16]
 8000a4c:	4605      	mov	r5, r0
 8000a4e:	460c      	mov	r4, r1
 8000a50:	b913      	cbnz	r3, 8000a58 <_fflush_r+0x10>
 8000a52:	2500      	movs	r5, #0
 8000a54:	4628      	mov	r0, r5
 8000a56:	bd38      	pop	{r3, r4, r5, pc}
 8000a58:	b118      	cbz	r0, 8000a62 <_fflush_r+0x1a>
 8000a5a:	6983      	ldr	r3, [r0, #24]
 8000a5c:	b90b      	cbnz	r3, 8000a62 <_fflush_r+0x1a>
 8000a5e:	f000 f887 	bl	8000b70 <__sinit>
 8000a62:	4b14      	ldr	r3, [pc, #80]	; (8000ab4 <_fflush_r+0x6c>)
 8000a64:	429c      	cmp	r4, r3
 8000a66:	d11b      	bne.n	8000aa0 <_fflush_r+0x58>
 8000a68:	686c      	ldr	r4, [r5, #4]
 8000a6a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a6e:	2b00      	cmp	r3, #0
 8000a70:	d0ef      	beq.n	8000a52 <_fflush_r+0xa>
 8000a72:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000a74:	07d0      	lsls	r0, r2, #31
 8000a76:	d404      	bmi.n	8000a82 <_fflush_r+0x3a>
 8000a78:	0599      	lsls	r1, r3, #22
 8000a7a:	d402      	bmi.n	8000a82 <_fflush_r+0x3a>
 8000a7c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000a7e:	f000 f915 	bl	8000cac <__retarget_lock_acquire_recursive>
 8000a82:	4628      	mov	r0, r5
 8000a84:	4621      	mov	r1, r4
 8000a86:	f7ff ff59 	bl	800093c <__sflush_r>
 8000a8a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000a8c:	07da      	lsls	r2, r3, #31
 8000a8e:	4605      	mov	r5, r0
 8000a90:	d4e0      	bmi.n	8000a54 <_fflush_r+0xc>
 8000a92:	89a3      	ldrh	r3, [r4, #12]
 8000a94:	059b      	lsls	r3, r3, #22
 8000a96:	d4dd      	bmi.n	8000a54 <_fflush_r+0xc>
 8000a98:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000a9a:	f000 f908 	bl	8000cae <__retarget_lock_release_recursive>
 8000a9e:	e7d9      	b.n	8000a54 <_fflush_r+0xc>
 8000aa0:	4b05      	ldr	r3, [pc, #20]	; (8000ab8 <_fflush_r+0x70>)
 8000aa2:	429c      	cmp	r4, r3
 8000aa4:	d101      	bne.n	8000aaa <_fflush_r+0x62>
 8000aa6:	68ac      	ldr	r4, [r5, #8]
 8000aa8:	e7df      	b.n	8000a6a <_fflush_r+0x22>
 8000aaa:	4b04      	ldr	r3, [pc, #16]	; (8000abc <_fflush_r+0x74>)
 8000aac:	429c      	cmp	r4, r3
 8000aae:	bf08      	it	eq
 8000ab0:	68ec      	ldreq	r4, [r5, #12]
 8000ab2:	e7da      	b.n	8000a6a <_fflush_r+0x22>
 8000ab4:	08001728 	.word	0x08001728
 8000ab8:	08001748 	.word	0x08001748
 8000abc:	08001708 	.word	0x08001708

08000ac0 <std>:
 8000ac0:	2300      	movs	r3, #0
 8000ac2:	b510      	push	{r4, lr}
 8000ac4:	4604      	mov	r4, r0
 8000ac6:	e9c0 3300 	strd	r3, r3, [r0]
 8000aca:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000ace:	6083      	str	r3, [r0, #8]
 8000ad0:	8181      	strh	r1, [r0, #12]
 8000ad2:	6643      	str	r3, [r0, #100]	; 0x64
 8000ad4:	81c2      	strh	r2, [r0, #14]
 8000ad6:	6183      	str	r3, [r0, #24]
 8000ad8:	4619      	mov	r1, r3
 8000ada:	2208      	movs	r2, #8
 8000adc:	305c      	adds	r0, #92	; 0x5c
 8000ade:	f7ff fdd7 	bl	8000690 <memset>
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <std+0x38>)
 8000ae4:	6263      	str	r3, [r4, #36]	; 0x24
 8000ae6:	4b05      	ldr	r3, [pc, #20]	; (8000afc <std+0x3c>)
 8000ae8:	62a3      	str	r3, [r4, #40]	; 0x28
 8000aea:	4b05      	ldr	r3, [pc, #20]	; (8000b00 <std+0x40>)
 8000aec:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000aee:	4b05      	ldr	r3, [pc, #20]	; (8000b04 <std+0x44>)
 8000af0:	6224      	str	r4, [r4, #32]
 8000af2:	6323      	str	r3, [r4, #48]	; 0x30
 8000af4:	bd10      	pop	{r4, pc}
 8000af6:	bf00      	nop
 8000af8:	08001539 	.word	0x08001539
 8000afc:	0800155b 	.word	0x0800155b
 8000b00:	08001593 	.word	0x08001593
 8000b04:	080015b7 	.word	0x080015b7

08000b08 <_cleanup_r>:
 8000b08:	4901      	ldr	r1, [pc, #4]	; (8000b10 <_cleanup_r+0x8>)
 8000b0a:	f000 b8af 	b.w	8000c6c <_fwalk_reent>
 8000b0e:	bf00      	nop
 8000b10:	08000a49 	.word	0x08000a49

08000b14 <__sfmoreglue>:
 8000b14:	b570      	push	{r4, r5, r6, lr}
 8000b16:	2268      	movs	r2, #104	; 0x68
 8000b18:	1e4d      	subs	r5, r1, #1
 8000b1a:	4355      	muls	r5, r2
 8000b1c:	460e      	mov	r6, r1
 8000b1e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000b22:	f000 f997 	bl	8000e54 <_malloc_r>
 8000b26:	4604      	mov	r4, r0
 8000b28:	b140      	cbz	r0, 8000b3c <__sfmoreglue+0x28>
 8000b2a:	2100      	movs	r1, #0
 8000b2c:	e9c0 1600 	strd	r1, r6, [r0]
 8000b30:	300c      	adds	r0, #12
 8000b32:	60a0      	str	r0, [r4, #8]
 8000b34:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000b38:	f7ff fdaa 	bl	8000690 <memset>
 8000b3c:	4620      	mov	r0, r4
 8000b3e:	bd70      	pop	{r4, r5, r6, pc}

08000b40 <__sfp_lock_acquire>:
 8000b40:	4801      	ldr	r0, [pc, #4]	; (8000b48 <__sfp_lock_acquire+0x8>)
 8000b42:	f000 b8b3 	b.w	8000cac <__retarget_lock_acquire_recursive>
 8000b46:	bf00      	nop
 8000b48:	20000085 	.word	0x20000085

08000b4c <__sfp_lock_release>:
 8000b4c:	4801      	ldr	r0, [pc, #4]	; (8000b54 <__sfp_lock_release+0x8>)
 8000b4e:	f000 b8ae 	b.w	8000cae <__retarget_lock_release_recursive>
 8000b52:	bf00      	nop
 8000b54:	20000085 	.word	0x20000085

08000b58 <__sinit_lock_acquire>:
 8000b58:	4801      	ldr	r0, [pc, #4]	; (8000b60 <__sinit_lock_acquire+0x8>)
 8000b5a:	f000 b8a7 	b.w	8000cac <__retarget_lock_acquire_recursive>
 8000b5e:	bf00      	nop
 8000b60:	20000086 	.word	0x20000086

08000b64 <__sinit_lock_release>:
 8000b64:	4801      	ldr	r0, [pc, #4]	; (8000b6c <__sinit_lock_release+0x8>)
 8000b66:	f000 b8a2 	b.w	8000cae <__retarget_lock_release_recursive>
 8000b6a:	bf00      	nop
 8000b6c:	20000086 	.word	0x20000086

08000b70 <__sinit>:
 8000b70:	b510      	push	{r4, lr}
 8000b72:	4604      	mov	r4, r0
 8000b74:	f7ff fff0 	bl	8000b58 <__sinit_lock_acquire>
 8000b78:	69a3      	ldr	r3, [r4, #24]
 8000b7a:	b11b      	cbz	r3, 8000b84 <__sinit+0x14>
 8000b7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b80:	f7ff bff0 	b.w	8000b64 <__sinit_lock_release>
 8000b84:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000b88:	6523      	str	r3, [r4, #80]	; 0x50
 8000b8a:	4b13      	ldr	r3, [pc, #76]	; (8000bd8 <__sinit+0x68>)
 8000b8c:	4a13      	ldr	r2, [pc, #76]	; (8000bdc <__sinit+0x6c>)
 8000b8e:	681b      	ldr	r3, [r3, #0]
 8000b90:	62a2      	str	r2, [r4, #40]	; 0x28
 8000b92:	42a3      	cmp	r3, r4
 8000b94:	bf04      	itt	eq
 8000b96:	2301      	moveq	r3, #1
 8000b98:	61a3      	streq	r3, [r4, #24]
 8000b9a:	4620      	mov	r0, r4
 8000b9c:	f000 f820 	bl	8000be0 <__sfp>
 8000ba0:	6060      	str	r0, [r4, #4]
 8000ba2:	4620      	mov	r0, r4
 8000ba4:	f000 f81c 	bl	8000be0 <__sfp>
 8000ba8:	60a0      	str	r0, [r4, #8]
 8000baa:	4620      	mov	r0, r4
 8000bac:	f000 f818 	bl	8000be0 <__sfp>
 8000bb0:	2200      	movs	r2, #0
 8000bb2:	60e0      	str	r0, [r4, #12]
 8000bb4:	2104      	movs	r1, #4
 8000bb6:	6860      	ldr	r0, [r4, #4]
 8000bb8:	f7ff ff82 	bl	8000ac0 <std>
 8000bbc:	68a0      	ldr	r0, [r4, #8]
 8000bbe:	2201      	movs	r2, #1
 8000bc0:	2109      	movs	r1, #9
 8000bc2:	f7ff ff7d 	bl	8000ac0 <std>
 8000bc6:	68e0      	ldr	r0, [r4, #12]
 8000bc8:	2202      	movs	r2, #2
 8000bca:	2112      	movs	r1, #18
 8000bcc:	f7ff ff78 	bl	8000ac0 <std>
 8000bd0:	2301      	movs	r3, #1
 8000bd2:	61a3      	str	r3, [r4, #24]
 8000bd4:	e7d2      	b.n	8000b7c <__sinit+0xc>
 8000bd6:	bf00      	nop
 8000bd8:	08001704 	.word	0x08001704
 8000bdc:	08000b09 	.word	0x08000b09

08000be0 <__sfp>:
 8000be0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000be2:	4607      	mov	r7, r0
 8000be4:	f7ff ffac 	bl	8000b40 <__sfp_lock_acquire>
 8000be8:	4b1e      	ldr	r3, [pc, #120]	; (8000c64 <__sfp+0x84>)
 8000bea:	681e      	ldr	r6, [r3, #0]
 8000bec:	69b3      	ldr	r3, [r6, #24]
 8000bee:	b913      	cbnz	r3, 8000bf6 <__sfp+0x16>
 8000bf0:	4630      	mov	r0, r6
 8000bf2:	f7ff ffbd 	bl	8000b70 <__sinit>
 8000bf6:	3648      	adds	r6, #72	; 0x48
 8000bf8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000bfc:	3b01      	subs	r3, #1
 8000bfe:	d503      	bpl.n	8000c08 <__sfp+0x28>
 8000c00:	6833      	ldr	r3, [r6, #0]
 8000c02:	b30b      	cbz	r3, 8000c48 <__sfp+0x68>
 8000c04:	6836      	ldr	r6, [r6, #0]
 8000c06:	e7f7      	b.n	8000bf8 <__sfp+0x18>
 8000c08:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000c0c:	b9d5      	cbnz	r5, 8000c44 <__sfp+0x64>
 8000c0e:	4b16      	ldr	r3, [pc, #88]	; (8000c68 <__sfp+0x88>)
 8000c10:	60e3      	str	r3, [r4, #12]
 8000c12:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000c16:	6665      	str	r5, [r4, #100]	; 0x64
 8000c18:	f000 f847 	bl	8000caa <__retarget_lock_init_recursive>
 8000c1c:	f7ff ff96 	bl	8000b4c <__sfp_lock_release>
 8000c20:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000c24:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000c28:	6025      	str	r5, [r4, #0]
 8000c2a:	61a5      	str	r5, [r4, #24]
 8000c2c:	2208      	movs	r2, #8
 8000c2e:	4629      	mov	r1, r5
 8000c30:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000c34:	f7ff fd2c 	bl	8000690 <memset>
 8000c38:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000c3c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000c40:	4620      	mov	r0, r4
 8000c42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c44:	3468      	adds	r4, #104	; 0x68
 8000c46:	e7d9      	b.n	8000bfc <__sfp+0x1c>
 8000c48:	2104      	movs	r1, #4
 8000c4a:	4638      	mov	r0, r7
 8000c4c:	f7ff ff62 	bl	8000b14 <__sfmoreglue>
 8000c50:	4604      	mov	r4, r0
 8000c52:	6030      	str	r0, [r6, #0]
 8000c54:	2800      	cmp	r0, #0
 8000c56:	d1d5      	bne.n	8000c04 <__sfp+0x24>
 8000c58:	f7ff ff78 	bl	8000b4c <__sfp_lock_release>
 8000c5c:	230c      	movs	r3, #12
 8000c5e:	603b      	str	r3, [r7, #0]
 8000c60:	e7ee      	b.n	8000c40 <__sfp+0x60>
 8000c62:	bf00      	nop
 8000c64:	08001704 	.word	0x08001704
 8000c68:	ffff0001 	.word	0xffff0001

08000c6c <_fwalk_reent>:
 8000c6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c70:	4606      	mov	r6, r0
 8000c72:	4688      	mov	r8, r1
 8000c74:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000c78:	2700      	movs	r7, #0
 8000c7a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000c7e:	f1b9 0901 	subs.w	r9, r9, #1
 8000c82:	d505      	bpl.n	8000c90 <_fwalk_reent+0x24>
 8000c84:	6824      	ldr	r4, [r4, #0]
 8000c86:	2c00      	cmp	r4, #0
 8000c88:	d1f7      	bne.n	8000c7a <_fwalk_reent+0xe>
 8000c8a:	4638      	mov	r0, r7
 8000c8c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000c90:	89ab      	ldrh	r3, [r5, #12]
 8000c92:	2b01      	cmp	r3, #1
 8000c94:	d907      	bls.n	8000ca6 <_fwalk_reent+0x3a>
 8000c96:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000c9a:	3301      	adds	r3, #1
 8000c9c:	d003      	beq.n	8000ca6 <_fwalk_reent+0x3a>
 8000c9e:	4629      	mov	r1, r5
 8000ca0:	4630      	mov	r0, r6
 8000ca2:	47c0      	blx	r8
 8000ca4:	4307      	orrs	r7, r0
 8000ca6:	3568      	adds	r5, #104	; 0x68
 8000ca8:	e7e9      	b.n	8000c7e <_fwalk_reent+0x12>

08000caa <__retarget_lock_init_recursive>:
 8000caa:	4770      	bx	lr

08000cac <__retarget_lock_acquire_recursive>:
 8000cac:	4770      	bx	lr

08000cae <__retarget_lock_release_recursive>:
 8000cae:	4770      	bx	lr

08000cb0 <__swhatbuf_r>:
 8000cb0:	b570      	push	{r4, r5, r6, lr}
 8000cb2:	460e      	mov	r6, r1
 8000cb4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cb8:	2900      	cmp	r1, #0
 8000cba:	b096      	sub	sp, #88	; 0x58
 8000cbc:	4614      	mov	r4, r2
 8000cbe:	461d      	mov	r5, r3
 8000cc0:	da08      	bge.n	8000cd4 <__swhatbuf_r+0x24>
 8000cc2:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000cc6:	2200      	movs	r2, #0
 8000cc8:	602a      	str	r2, [r5, #0]
 8000cca:	061a      	lsls	r2, r3, #24
 8000ccc:	d410      	bmi.n	8000cf0 <__swhatbuf_r+0x40>
 8000cce:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000cd2:	e00e      	b.n	8000cf2 <__swhatbuf_r+0x42>
 8000cd4:	466a      	mov	r2, sp
 8000cd6:	f000 fc95 	bl	8001604 <_fstat_r>
 8000cda:	2800      	cmp	r0, #0
 8000cdc:	dbf1      	blt.n	8000cc2 <__swhatbuf_r+0x12>
 8000cde:	9a01      	ldr	r2, [sp, #4]
 8000ce0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000ce4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000ce8:	425a      	negs	r2, r3
 8000cea:	415a      	adcs	r2, r3
 8000cec:	602a      	str	r2, [r5, #0]
 8000cee:	e7ee      	b.n	8000cce <__swhatbuf_r+0x1e>
 8000cf0:	2340      	movs	r3, #64	; 0x40
 8000cf2:	2000      	movs	r0, #0
 8000cf4:	6023      	str	r3, [r4, #0]
 8000cf6:	b016      	add	sp, #88	; 0x58
 8000cf8:	bd70      	pop	{r4, r5, r6, pc}
	...

08000cfc <__smakebuf_r>:
 8000cfc:	898b      	ldrh	r3, [r1, #12]
 8000cfe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000d00:	079d      	lsls	r5, r3, #30
 8000d02:	4606      	mov	r6, r0
 8000d04:	460c      	mov	r4, r1
 8000d06:	d507      	bpl.n	8000d18 <__smakebuf_r+0x1c>
 8000d08:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000d0c:	6023      	str	r3, [r4, #0]
 8000d0e:	6123      	str	r3, [r4, #16]
 8000d10:	2301      	movs	r3, #1
 8000d12:	6163      	str	r3, [r4, #20]
 8000d14:	b002      	add	sp, #8
 8000d16:	bd70      	pop	{r4, r5, r6, pc}
 8000d18:	ab01      	add	r3, sp, #4
 8000d1a:	466a      	mov	r2, sp
 8000d1c:	f7ff ffc8 	bl	8000cb0 <__swhatbuf_r>
 8000d20:	9900      	ldr	r1, [sp, #0]
 8000d22:	4605      	mov	r5, r0
 8000d24:	4630      	mov	r0, r6
 8000d26:	f000 f895 	bl	8000e54 <_malloc_r>
 8000d2a:	b948      	cbnz	r0, 8000d40 <__smakebuf_r+0x44>
 8000d2c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d30:	059a      	lsls	r2, r3, #22
 8000d32:	d4ef      	bmi.n	8000d14 <__smakebuf_r+0x18>
 8000d34:	f023 0303 	bic.w	r3, r3, #3
 8000d38:	f043 0302 	orr.w	r3, r3, #2
 8000d3c:	81a3      	strh	r3, [r4, #12]
 8000d3e:	e7e3      	b.n	8000d08 <__smakebuf_r+0xc>
 8000d40:	4b0d      	ldr	r3, [pc, #52]	; (8000d78 <__smakebuf_r+0x7c>)
 8000d42:	62b3      	str	r3, [r6, #40]	; 0x28
 8000d44:	89a3      	ldrh	r3, [r4, #12]
 8000d46:	6020      	str	r0, [r4, #0]
 8000d48:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000d4c:	81a3      	strh	r3, [r4, #12]
 8000d4e:	9b00      	ldr	r3, [sp, #0]
 8000d50:	6163      	str	r3, [r4, #20]
 8000d52:	9b01      	ldr	r3, [sp, #4]
 8000d54:	6120      	str	r0, [r4, #16]
 8000d56:	b15b      	cbz	r3, 8000d70 <__smakebuf_r+0x74>
 8000d58:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000d5c:	4630      	mov	r0, r6
 8000d5e:	f000 fc63 	bl	8001628 <_isatty_r>
 8000d62:	b128      	cbz	r0, 8000d70 <__smakebuf_r+0x74>
 8000d64:	89a3      	ldrh	r3, [r4, #12]
 8000d66:	f023 0303 	bic.w	r3, r3, #3
 8000d6a:	f043 0301 	orr.w	r3, r3, #1
 8000d6e:	81a3      	strh	r3, [r4, #12]
 8000d70:	89a0      	ldrh	r0, [r4, #12]
 8000d72:	4305      	orrs	r5, r0
 8000d74:	81a5      	strh	r5, [r4, #12]
 8000d76:	e7cd      	b.n	8000d14 <__smakebuf_r+0x18>
 8000d78:	08000b09 	.word	0x08000b09

08000d7c <_free_r>:
 8000d7c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000d7e:	2900      	cmp	r1, #0
 8000d80:	d044      	beq.n	8000e0c <_free_r+0x90>
 8000d82:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000d86:	9001      	str	r0, [sp, #4]
 8000d88:	2b00      	cmp	r3, #0
 8000d8a:	f1a1 0404 	sub.w	r4, r1, #4
 8000d8e:	bfb8      	it	lt
 8000d90:	18e4      	addlt	r4, r4, r3
 8000d92:	f000 fc6b 	bl	800166c <__malloc_lock>
 8000d96:	4a1e      	ldr	r2, [pc, #120]	; (8000e10 <_free_r+0x94>)
 8000d98:	9801      	ldr	r0, [sp, #4]
 8000d9a:	6813      	ldr	r3, [r2, #0]
 8000d9c:	b933      	cbnz	r3, 8000dac <_free_r+0x30>
 8000d9e:	6063      	str	r3, [r4, #4]
 8000da0:	6014      	str	r4, [r2, #0]
 8000da2:	b003      	add	sp, #12
 8000da4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000da8:	f000 bc66 	b.w	8001678 <__malloc_unlock>
 8000dac:	42a3      	cmp	r3, r4
 8000dae:	d908      	bls.n	8000dc2 <_free_r+0x46>
 8000db0:	6825      	ldr	r5, [r4, #0]
 8000db2:	1961      	adds	r1, r4, r5
 8000db4:	428b      	cmp	r3, r1
 8000db6:	bf01      	itttt	eq
 8000db8:	6819      	ldreq	r1, [r3, #0]
 8000dba:	685b      	ldreq	r3, [r3, #4]
 8000dbc:	1949      	addeq	r1, r1, r5
 8000dbe:	6021      	streq	r1, [r4, #0]
 8000dc0:	e7ed      	b.n	8000d9e <_free_r+0x22>
 8000dc2:	461a      	mov	r2, r3
 8000dc4:	685b      	ldr	r3, [r3, #4]
 8000dc6:	b10b      	cbz	r3, 8000dcc <_free_r+0x50>
 8000dc8:	42a3      	cmp	r3, r4
 8000dca:	d9fa      	bls.n	8000dc2 <_free_r+0x46>
 8000dcc:	6811      	ldr	r1, [r2, #0]
 8000dce:	1855      	adds	r5, r2, r1
 8000dd0:	42a5      	cmp	r5, r4
 8000dd2:	d10b      	bne.n	8000dec <_free_r+0x70>
 8000dd4:	6824      	ldr	r4, [r4, #0]
 8000dd6:	4421      	add	r1, r4
 8000dd8:	1854      	adds	r4, r2, r1
 8000dda:	42a3      	cmp	r3, r4
 8000ddc:	6011      	str	r1, [r2, #0]
 8000dde:	d1e0      	bne.n	8000da2 <_free_r+0x26>
 8000de0:	681c      	ldr	r4, [r3, #0]
 8000de2:	685b      	ldr	r3, [r3, #4]
 8000de4:	6053      	str	r3, [r2, #4]
 8000de6:	4421      	add	r1, r4
 8000de8:	6011      	str	r1, [r2, #0]
 8000dea:	e7da      	b.n	8000da2 <_free_r+0x26>
 8000dec:	d902      	bls.n	8000df4 <_free_r+0x78>
 8000dee:	230c      	movs	r3, #12
 8000df0:	6003      	str	r3, [r0, #0]
 8000df2:	e7d6      	b.n	8000da2 <_free_r+0x26>
 8000df4:	6825      	ldr	r5, [r4, #0]
 8000df6:	1961      	adds	r1, r4, r5
 8000df8:	428b      	cmp	r3, r1
 8000dfa:	bf04      	itt	eq
 8000dfc:	6819      	ldreq	r1, [r3, #0]
 8000dfe:	685b      	ldreq	r3, [r3, #4]
 8000e00:	6063      	str	r3, [r4, #4]
 8000e02:	bf04      	itt	eq
 8000e04:	1949      	addeq	r1, r1, r5
 8000e06:	6021      	streq	r1, [r4, #0]
 8000e08:	6054      	str	r4, [r2, #4]
 8000e0a:	e7ca      	b.n	8000da2 <_free_r+0x26>
 8000e0c:	b003      	add	sp, #12
 8000e0e:	bd30      	pop	{r4, r5, pc}
 8000e10:	20000088 	.word	0x20000088

08000e14 <sbrk_aligned>:
 8000e14:	b570      	push	{r4, r5, r6, lr}
 8000e16:	4e0e      	ldr	r6, [pc, #56]	; (8000e50 <sbrk_aligned+0x3c>)
 8000e18:	460c      	mov	r4, r1
 8000e1a:	6831      	ldr	r1, [r6, #0]
 8000e1c:	4605      	mov	r5, r0
 8000e1e:	b911      	cbnz	r1, 8000e26 <sbrk_aligned+0x12>
 8000e20:	f000 fb7a 	bl	8001518 <_sbrk_r>
 8000e24:	6030      	str	r0, [r6, #0]
 8000e26:	4621      	mov	r1, r4
 8000e28:	4628      	mov	r0, r5
 8000e2a:	f000 fb75 	bl	8001518 <_sbrk_r>
 8000e2e:	1c43      	adds	r3, r0, #1
 8000e30:	d00a      	beq.n	8000e48 <sbrk_aligned+0x34>
 8000e32:	1cc4      	adds	r4, r0, #3
 8000e34:	f024 0403 	bic.w	r4, r4, #3
 8000e38:	42a0      	cmp	r0, r4
 8000e3a:	d007      	beq.n	8000e4c <sbrk_aligned+0x38>
 8000e3c:	1a21      	subs	r1, r4, r0
 8000e3e:	4628      	mov	r0, r5
 8000e40:	f000 fb6a 	bl	8001518 <_sbrk_r>
 8000e44:	3001      	adds	r0, #1
 8000e46:	d101      	bne.n	8000e4c <sbrk_aligned+0x38>
 8000e48:	f04f 34ff 	mov.w	r4, #4294967295
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	bd70      	pop	{r4, r5, r6, pc}
 8000e50:	2000008c 	.word	0x2000008c

08000e54 <_malloc_r>:
 8000e54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e58:	1ccd      	adds	r5, r1, #3
 8000e5a:	f025 0503 	bic.w	r5, r5, #3
 8000e5e:	3508      	adds	r5, #8
 8000e60:	2d0c      	cmp	r5, #12
 8000e62:	bf38      	it	cc
 8000e64:	250c      	movcc	r5, #12
 8000e66:	2d00      	cmp	r5, #0
 8000e68:	4607      	mov	r7, r0
 8000e6a:	db01      	blt.n	8000e70 <_malloc_r+0x1c>
 8000e6c:	42a9      	cmp	r1, r5
 8000e6e:	d905      	bls.n	8000e7c <_malloc_r+0x28>
 8000e70:	230c      	movs	r3, #12
 8000e72:	603b      	str	r3, [r7, #0]
 8000e74:	2600      	movs	r6, #0
 8000e76:	4630      	mov	r0, r6
 8000e78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000e7c:	4e2e      	ldr	r6, [pc, #184]	; (8000f38 <_malloc_r+0xe4>)
 8000e7e:	f000 fbf5 	bl	800166c <__malloc_lock>
 8000e82:	6833      	ldr	r3, [r6, #0]
 8000e84:	461c      	mov	r4, r3
 8000e86:	bb34      	cbnz	r4, 8000ed6 <_malloc_r+0x82>
 8000e88:	4629      	mov	r1, r5
 8000e8a:	4638      	mov	r0, r7
 8000e8c:	f7ff ffc2 	bl	8000e14 <sbrk_aligned>
 8000e90:	1c43      	adds	r3, r0, #1
 8000e92:	4604      	mov	r4, r0
 8000e94:	d14d      	bne.n	8000f32 <_malloc_r+0xde>
 8000e96:	6834      	ldr	r4, [r6, #0]
 8000e98:	4626      	mov	r6, r4
 8000e9a:	2e00      	cmp	r6, #0
 8000e9c:	d140      	bne.n	8000f20 <_malloc_r+0xcc>
 8000e9e:	6823      	ldr	r3, [r4, #0]
 8000ea0:	4631      	mov	r1, r6
 8000ea2:	4638      	mov	r0, r7
 8000ea4:	eb04 0803 	add.w	r8, r4, r3
 8000ea8:	f000 fb36 	bl	8001518 <_sbrk_r>
 8000eac:	4580      	cmp	r8, r0
 8000eae:	d13a      	bne.n	8000f26 <_malloc_r+0xd2>
 8000eb0:	6821      	ldr	r1, [r4, #0]
 8000eb2:	3503      	adds	r5, #3
 8000eb4:	1a6d      	subs	r5, r5, r1
 8000eb6:	f025 0503 	bic.w	r5, r5, #3
 8000eba:	3508      	adds	r5, #8
 8000ebc:	2d0c      	cmp	r5, #12
 8000ebe:	bf38      	it	cc
 8000ec0:	250c      	movcc	r5, #12
 8000ec2:	4629      	mov	r1, r5
 8000ec4:	4638      	mov	r0, r7
 8000ec6:	f7ff ffa5 	bl	8000e14 <sbrk_aligned>
 8000eca:	3001      	adds	r0, #1
 8000ecc:	d02b      	beq.n	8000f26 <_malloc_r+0xd2>
 8000ece:	6823      	ldr	r3, [r4, #0]
 8000ed0:	442b      	add	r3, r5
 8000ed2:	6023      	str	r3, [r4, #0]
 8000ed4:	e00e      	b.n	8000ef4 <_malloc_r+0xa0>
 8000ed6:	6822      	ldr	r2, [r4, #0]
 8000ed8:	1b52      	subs	r2, r2, r5
 8000eda:	d41e      	bmi.n	8000f1a <_malloc_r+0xc6>
 8000edc:	2a0b      	cmp	r2, #11
 8000ede:	d916      	bls.n	8000f0e <_malloc_r+0xba>
 8000ee0:	1961      	adds	r1, r4, r5
 8000ee2:	42a3      	cmp	r3, r4
 8000ee4:	6025      	str	r5, [r4, #0]
 8000ee6:	bf18      	it	ne
 8000ee8:	6059      	strne	r1, [r3, #4]
 8000eea:	6863      	ldr	r3, [r4, #4]
 8000eec:	bf08      	it	eq
 8000eee:	6031      	streq	r1, [r6, #0]
 8000ef0:	5162      	str	r2, [r4, r5]
 8000ef2:	604b      	str	r3, [r1, #4]
 8000ef4:	4638      	mov	r0, r7
 8000ef6:	f104 060b 	add.w	r6, r4, #11
 8000efa:	f000 fbbd 	bl	8001678 <__malloc_unlock>
 8000efe:	f026 0607 	bic.w	r6, r6, #7
 8000f02:	1d23      	adds	r3, r4, #4
 8000f04:	1af2      	subs	r2, r6, r3
 8000f06:	d0b6      	beq.n	8000e76 <_malloc_r+0x22>
 8000f08:	1b9b      	subs	r3, r3, r6
 8000f0a:	50a3      	str	r3, [r4, r2]
 8000f0c:	e7b3      	b.n	8000e76 <_malloc_r+0x22>
 8000f0e:	6862      	ldr	r2, [r4, #4]
 8000f10:	42a3      	cmp	r3, r4
 8000f12:	bf0c      	ite	eq
 8000f14:	6032      	streq	r2, [r6, #0]
 8000f16:	605a      	strne	r2, [r3, #4]
 8000f18:	e7ec      	b.n	8000ef4 <_malloc_r+0xa0>
 8000f1a:	4623      	mov	r3, r4
 8000f1c:	6864      	ldr	r4, [r4, #4]
 8000f1e:	e7b2      	b.n	8000e86 <_malloc_r+0x32>
 8000f20:	4634      	mov	r4, r6
 8000f22:	6876      	ldr	r6, [r6, #4]
 8000f24:	e7b9      	b.n	8000e9a <_malloc_r+0x46>
 8000f26:	230c      	movs	r3, #12
 8000f28:	603b      	str	r3, [r7, #0]
 8000f2a:	4638      	mov	r0, r7
 8000f2c:	f000 fba4 	bl	8001678 <__malloc_unlock>
 8000f30:	e7a1      	b.n	8000e76 <_malloc_r+0x22>
 8000f32:	6025      	str	r5, [r4, #0]
 8000f34:	e7de      	b.n	8000ef4 <_malloc_r+0xa0>
 8000f36:	bf00      	nop
 8000f38:	20000088 	.word	0x20000088

08000f3c <__sfputc_r>:
 8000f3c:	6893      	ldr	r3, [r2, #8]
 8000f3e:	3b01      	subs	r3, #1
 8000f40:	2b00      	cmp	r3, #0
 8000f42:	b410      	push	{r4}
 8000f44:	6093      	str	r3, [r2, #8]
 8000f46:	da08      	bge.n	8000f5a <__sfputc_r+0x1e>
 8000f48:	6994      	ldr	r4, [r2, #24]
 8000f4a:	42a3      	cmp	r3, r4
 8000f4c:	db01      	blt.n	8000f52 <__sfputc_r+0x16>
 8000f4e:	290a      	cmp	r1, #10
 8000f50:	d103      	bne.n	8000f5a <__sfputc_r+0x1e>
 8000f52:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000f56:	f7ff bc31 	b.w	80007bc <__swbuf_r>
 8000f5a:	6813      	ldr	r3, [r2, #0]
 8000f5c:	1c58      	adds	r0, r3, #1
 8000f5e:	6010      	str	r0, [r2, #0]
 8000f60:	7019      	strb	r1, [r3, #0]
 8000f62:	4608      	mov	r0, r1
 8000f64:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000f68:	4770      	bx	lr

08000f6a <__sfputs_r>:
 8000f6a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f6c:	4606      	mov	r6, r0
 8000f6e:	460f      	mov	r7, r1
 8000f70:	4614      	mov	r4, r2
 8000f72:	18d5      	adds	r5, r2, r3
 8000f74:	42ac      	cmp	r4, r5
 8000f76:	d101      	bne.n	8000f7c <__sfputs_r+0x12>
 8000f78:	2000      	movs	r0, #0
 8000f7a:	e007      	b.n	8000f8c <__sfputs_r+0x22>
 8000f7c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f80:	463a      	mov	r2, r7
 8000f82:	4630      	mov	r0, r6
 8000f84:	f7ff ffda 	bl	8000f3c <__sfputc_r>
 8000f88:	1c43      	adds	r3, r0, #1
 8000f8a:	d1f3      	bne.n	8000f74 <__sfputs_r+0xa>
 8000f8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000f90 <_vfiprintf_r>:
 8000f90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000f94:	460d      	mov	r5, r1
 8000f96:	b09d      	sub	sp, #116	; 0x74
 8000f98:	4614      	mov	r4, r2
 8000f9a:	4698      	mov	r8, r3
 8000f9c:	4606      	mov	r6, r0
 8000f9e:	b118      	cbz	r0, 8000fa8 <_vfiprintf_r+0x18>
 8000fa0:	6983      	ldr	r3, [r0, #24]
 8000fa2:	b90b      	cbnz	r3, 8000fa8 <_vfiprintf_r+0x18>
 8000fa4:	f7ff fde4 	bl	8000b70 <__sinit>
 8000fa8:	4b89      	ldr	r3, [pc, #548]	; (80011d0 <_vfiprintf_r+0x240>)
 8000faa:	429d      	cmp	r5, r3
 8000fac:	d11b      	bne.n	8000fe6 <_vfiprintf_r+0x56>
 8000fae:	6875      	ldr	r5, [r6, #4]
 8000fb0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000fb2:	07d9      	lsls	r1, r3, #31
 8000fb4:	d405      	bmi.n	8000fc2 <_vfiprintf_r+0x32>
 8000fb6:	89ab      	ldrh	r3, [r5, #12]
 8000fb8:	059a      	lsls	r2, r3, #22
 8000fba:	d402      	bmi.n	8000fc2 <_vfiprintf_r+0x32>
 8000fbc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000fbe:	f7ff fe75 	bl	8000cac <__retarget_lock_acquire_recursive>
 8000fc2:	89ab      	ldrh	r3, [r5, #12]
 8000fc4:	071b      	lsls	r3, r3, #28
 8000fc6:	d501      	bpl.n	8000fcc <_vfiprintf_r+0x3c>
 8000fc8:	692b      	ldr	r3, [r5, #16]
 8000fca:	b9eb      	cbnz	r3, 8001008 <_vfiprintf_r+0x78>
 8000fcc:	4629      	mov	r1, r5
 8000fce:	4630      	mov	r0, r6
 8000fd0:	f7ff fc46 	bl	8000860 <__swsetup_r>
 8000fd4:	b1c0      	cbz	r0, 8001008 <_vfiprintf_r+0x78>
 8000fd6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000fd8:	07dc      	lsls	r4, r3, #31
 8000fda:	d50e      	bpl.n	8000ffa <_vfiprintf_r+0x6a>
 8000fdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000fe0:	b01d      	add	sp, #116	; 0x74
 8000fe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000fe6:	4b7b      	ldr	r3, [pc, #492]	; (80011d4 <_vfiprintf_r+0x244>)
 8000fe8:	429d      	cmp	r5, r3
 8000fea:	d101      	bne.n	8000ff0 <_vfiprintf_r+0x60>
 8000fec:	68b5      	ldr	r5, [r6, #8]
 8000fee:	e7df      	b.n	8000fb0 <_vfiprintf_r+0x20>
 8000ff0:	4b79      	ldr	r3, [pc, #484]	; (80011d8 <_vfiprintf_r+0x248>)
 8000ff2:	429d      	cmp	r5, r3
 8000ff4:	bf08      	it	eq
 8000ff6:	68f5      	ldreq	r5, [r6, #12]
 8000ff8:	e7da      	b.n	8000fb0 <_vfiprintf_r+0x20>
 8000ffa:	89ab      	ldrh	r3, [r5, #12]
 8000ffc:	0598      	lsls	r0, r3, #22
 8000ffe:	d4ed      	bmi.n	8000fdc <_vfiprintf_r+0x4c>
 8001000:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001002:	f7ff fe54 	bl	8000cae <__retarget_lock_release_recursive>
 8001006:	e7e9      	b.n	8000fdc <_vfiprintf_r+0x4c>
 8001008:	2300      	movs	r3, #0
 800100a:	9309      	str	r3, [sp, #36]	; 0x24
 800100c:	2320      	movs	r3, #32
 800100e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8001012:	f8cd 800c 	str.w	r8, [sp, #12]
 8001016:	2330      	movs	r3, #48	; 0x30
 8001018:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80011dc <_vfiprintf_r+0x24c>
 800101c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8001020:	f04f 0901 	mov.w	r9, #1
 8001024:	4623      	mov	r3, r4
 8001026:	469a      	mov	sl, r3
 8001028:	f813 2b01 	ldrb.w	r2, [r3], #1
 800102c:	b10a      	cbz	r2, 8001032 <_vfiprintf_r+0xa2>
 800102e:	2a25      	cmp	r2, #37	; 0x25
 8001030:	d1f9      	bne.n	8001026 <_vfiprintf_r+0x96>
 8001032:	ebba 0b04 	subs.w	fp, sl, r4
 8001036:	d00b      	beq.n	8001050 <_vfiprintf_r+0xc0>
 8001038:	465b      	mov	r3, fp
 800103a:	4622      	mov	r2, r4
 800103c:	4629      	mov	r1, r5
 800103e:	4630      	mov	r0, r6
 8001040:	f7ff ff93 	bl	8000f6a <__sfputs_r>
 8001044:	3001      	adds	r0, #1
 8001046:	f000 80aa 	beq.w	800119e <_vfiprintf_r+0x20e>
 800104a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800104c:	445a      	add	r2, fp
 800104e:	9209      	str	r2, [sp, #36]	; 0x24
 8001050:	f89a 3000 	ldrb.w	r3, [sl]
 8001054:	2b00      	cmp	r3, #0
 8001056:	f000 80a2 	beq.w	800119e <_vfiprintf_r+0x20e>
 800105a:	2300      	movs	r3, #0
 800105c:	f04f 32ff 	mov.w	r2, #4294967295
 8001060:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001064:	f10a 0a01 	add.w	sl, sl, #1
 8001068:	9304      	str	r3, [sp, #16]
 800106a:	9307      	str	r3, [sp, #28]
 800106c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8001070:	931a      	str	r3, [sp, #104]	; 0x68
 8001072:	4654      	mov	r4, sl
 8001074:	2205      	movs	r2, #5
 8001076:	f814 1b01 	ldrb.w	r1, [r4], #1
 800107a:	4858      	ldr	r0, [pc, #352]	; (80011dc <_vfiprintf_r+0x24c>)
 800107c:	f7ff f8b0 	bl	80001e0 <memchr>
 8001080:	9a04      	ldr	r2, [sp, #16]
 8001082:	b9d8      	cbnz	r0, 80010bc <_vfiprintf_r+0x12c>
 8001084:	06d1      	lsls	r1, r2, #27
 8001086:	bf44      	itt	mi
 8001088:	2320      	movmi	r3, #32
 800108a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800108e:	0713      	lsls	r3, r2, #28
 8001090:	bf44      	itt	mi
 8001092:	232b      	movmi	r3, #43	; 0x2b
 8001094:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001098:	f89a 3000 	ldrb.w	r3, [sl]
 800109c:	2b2a      	cmp	r3, #42	; 0x2a
 800109e:	d015      	beq.n	80010cc <_vfiprintf_r+0x13c>
 80010a0:	9a07      	ldr	r2, [sp, #28]
 80010a2:	4654      	mov	r4, sl
 80010a4:	2000      	movs	r0, #0
 80010a6:	f04f 0c0a 	mov.w	ip, #10
 80010aa:	4621      	mov	r1, r4
 80010ac:	f811 3b01 	ldrb.w	r3, [r1], #1
 80010b0:	3b30      	subs	r3, #48	; 0x30
 80010b2:	2b09      	cmp	r3, #9
 80010b4:	d94e      	bls.n	8001154 <_vfiprintf_r+0x1c4>
 80010b6:	b1b0      	cbz	r0, 80010e6 <_vfiprintf_r+0x156>
 80010b8:	9207      	str	r2, [sp, #28]
 80010ba:	e014      	b.n	80010e6 <_vfiprintf_r+0x156>
 80010bc:	eba0 0308 	sub.w	r3, r0, r8
 80010c0:	fa09 f303 	lsl.w	r3, r9, r3
 80010c4:	4313      	orrs	r3, r2
 80010c6:	9304      	str	r3, [sp, #16]
 80010c8:	46a2      	mov	sl, r4
 80010ca:	e7d2      	b.n	8001072 <_vfiprintf_r+0xe2>
 80010cc:	9b03      	ldr	r3, [sp, #12]
 80010ce:	1d19      	adds	r1, r3, #4
 80010d0:	681b      	ldr	r3, [r3, #0]
 80010d2:	9103      	str	r1, [sp, #12]
 80010d4:	2b00      	cmp	r3, #0
 80010d6:	bfbb      	ittet	lt
 80010d8:	425b      	neglt	r3, r3
 80010da:	f042 0202 	orrlt.w	r2, r2, #2
 80010de:	9307      	strge	r3, [sp, #28]
 80010e0:	9307      	strlt	r3, [sp, #28]
 80010e2:	bfb8      	it	lt
 80010e4:	9204      	strlt	r2, [sp, #16]
 80010e6:	7823      	ldrb	r3, [r4, #0]
 80010e8:	2b2e      	cmp	r3, #46	; 0x2e
 80010ea:	d10c      	bne.n	8001106 <_vfiprintf_r+0x176>
 80010ec:	7863      	ldrb	r3, [r4, #1]
 80010ee:	2b2a      	cmp	r3, #42	; 0x2a
 80010f0:	d135      	bne.n	800115e <_vfiprintf_r+0x1ce>
 80010f2:	9b03      	ldr	r3, [sp, #12]
 80010f4:	1d1a      	adds	r2, r3, #4
 80010f6:	681b      	ldr	r3, [r3, #0]
 80010f8:	9203      	str	r2, [sp, #12]
 80010fa:	2b00      	cmp	r3, #0
 80010fc:	bfb8      	it	lt
 80010fe:	f04f 33ff 	movlt.w	r3, #4294967295
 8001102:	3402      	adds	r4, #2
 8001104:	9305      	str	r3, [sp, #20]
 8001106:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80011ec <_vfiprintf_r+0x25c>
 800110a:	7821      	ldrb	r1, [r4, #0]
 800110c:	2203      	movs	r2, #3
 800110e:	4650      	mov	r0, sl
 8001110:	f7ff f866 	bl	80001e0 <memchr>
 8001114:	b140      	cbz	r0, 8001128 <_vfiprintf_r+0x198>
 8001116:	2340      	movs	r3, #64	; 0x40
 8001118:	eba0 000a 	sub.w	r0, r0, sl
 800111c:	fa03 f000 	lsl.w	r0, r3, r0
 8001120:	9b04      	ldr	r3, [sp, #16]
 8001122:	4303      	orrs	r3, r0
 8001124:	3401      	adds	r4, #1
 8001126:	9304      	str	r3, [sp, #16]
 8001128:	f814 1b01 	ldrb.w	r1, [r4], #1
 800112c:	482c      	ldr	r0, [pc, #176]	; (80011e0 <_vfiprintf_r+0x250>)
 800112e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8001132:	2206      	movs	r2, #6
 8001134:	f7ff f854 	bl	80001e0 <memchr>
 8001138:	2800      	cmp	r0, #0
 800113a:	d03f      	beq.n	80011bc <_vfiprintf_r+0x22c>
 800113c:	4b29      	ldr	r3, [pc, #164]	; (80011e4 <_vfiprintf_r+0x254>)
 800113e:	bb1b      	cbnz	r3, 8001188 <_vfiprintf_r+0x1f8>
 8001140:	9b03      	ldr	r3, [sp, #12]
 8001142:	3307      	adds	r3, #7
 8001144:	f023 0307 	bic.w	r3, r3, #7
 8001148:	3308      	adds	r3, #8
 800114a:	9303      	str	r3, [sp, #12]
 800114c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800114e:	443b      	add	r3, r7
 8001150:	9309      	str	r3, [sp, #36]	; 0x24
 8001152:	e767      	b.n	8001024 <_vfiprintf_r+0x94>
 8001154:	fb0c 3202 	mla	r2, ip, r2, r3
 8001158:	460c      	mov	r4, r1
 800115a:	2001      	movs	r0, #1
 800115c:	e7a5      	b.n	80010aa <_vfiprintf_r+0x11a>
 800115e:	2300      	movs	r3, #0
 8001160:	3401      	adds	r4, #1
 8001162:	9305      	str	r3, [sp, #20]
 8001164:	4619      	mov	r1, r3
 8001166:	f04f 0c0a 	mov.w	ip, #10
 800116a:	4620      	mov	r0, r4
 800116c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001170:	3a30      	subs	r2, #48	; 0x30
 8001172:	2a09      	cmp	r2, #9
 8001174:	d903      	bls.n	800117e <_vfiprintf_r+0x1ee>
 8001176:	2b00      	cmp	r3, #0
 8001178:	d0c5      	beq.n	8001106 <_vfiprintf_r+0x176>
 800117a:	9105      	str	r1, [sp, #20]
 800117c:	e7c3      	b.n	8001106 <_vfiprintf_r+0x176>
 800117e:	fb0c 2101 	mla	r1, ip, r1, r2
 8001182:	4604      	mov	r4, r0
 8001184:	2301      	movs	r3, #1
 8001186:	e7f0      	b.n	800116a <_vfiprintf_r+0x1da>
 8001188:	ab03      	add	r3, sp, #12
 800118a:	9300      	str	r3, [sp, #0]
 800118c:	462a      	mov	r2, r5
 800118e:	4b16      	ldr	r3, [pc, #88]	; (80011e8 <_vfiprintf_r+0x258>)
 8001190:	a904      	add	r1, sp, #16
 8001192:	4630      	mov	r0, r6
 8001194:	f3af 8000 	nop.w
 8001198:	4607      	mov	r7, r0
 800119a:	1c78      	adds	r0, r7, #1
 800119c:	d1d6      	bne.n	800114c <_vfiprintf_r+0x1bc>
 800119e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80011a0:	07d9      	lsls	r1, r3, #31
 80011a2:	d405      	bmi.n	80011b0 <_vfiprintf_r+0x220>
 80011a4:	89ab      	ldrh	r3, [r5, #12]
 80011a6:	059a      	lsls	r2, r3, #22
 80011a8:	d402      	bmi.n	80011b0 <_vfiprintf_r+0x220>
 80011aa:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80011ac:	f7ff fd7f 	bl	8000cae <__retarget_lock_release_recursive>
 80011b0:	89ab      	ldrh	r3, [r5, #12]
 80011b2:	065b      	lsls	r3, r3, #25
 80011b4:	f53f af12 	bmi.w	8000fdc <_vfiprintf_r+0x4c>
 80011b8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80011ba:	e711      	b.n	8000fe0 <_vfiprintf_r+0x50>
 80011bc:	ab03      	add	r3, sp, #12
 80011be:	9300      	str	r3, [sp, #0]
 80011c0:	462a      	mov	r2, r5
 80011c2:	4b09      	ldr	r3, [pc, #36]	; (80011e8 <_vfiprintf_r+0x258>)
 80011c4:	a904      	add	r1, sp, #16
 80011c6:	4630      	mov	r0, r6
 80011c8:	f000 f880 	bl	80012cc <_printf_i>
 80011cc:	e7e4      	b.n	8001198 <_vfiprintf_r+0x208>
 80011ce:	bf00      	nop
 80011d0:	08001728 	.word	0x08001728
 80011d4:	08001748 	.word	0x08001748
 80011d8:	08001708 	.word	0x08001708
 80011dc:	08001768 	.word	0x08001768
 80011e0:	08001772 	.word	0x08001772
 80011e4:	00000000 	.word	0x00000000
 80011e8:	08000f6b 	.word	0x08000f6b
 80011ec:	0800176e 	.word	0x0800176e

080011f0 <_printf_common>:
 80011f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80011f4:	4616      	mov	r6, r2
 80011f6:	4699      	mov	r9, r3
 80011f8:	688a      	ldr	r2, [r1, #8]
 80011fa:	690b      	ldr	r3, [r1, #16]
 80011fc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001200:	4293      	cmp	r3, r2
 8001202:	bfb8      	it	lt
 8001204:	4613      	movlt	r3, r2
 8001206:	6033      	str	r3, [r6, #0]
 8001208:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800120c:	4607      	mov	r7, r0
 800120e:	460c      	mov	r4, r1
 8001210:	b10a      	cbz	r2, 8001216 <_printf_common+0x26>
 8001212:	3301      	adds	r3, #1
 8001214:	6033      	str	r3, [r6, #0]
 8001216:	6823      	ldr	r3, [r4, #0]
 8001218:	0699      	lsls	r1, r3, #26
 800121a:	bf42      	ittt	mi
 800121c:	6833      	ldrmi	r3, [r6, #0]
 800121e:	3302      	addmi	r3, #2
 8001220:	6033      	strmi	r3, [r6, #0]
 8001222:	6825      	ldr	r5, [r4, #0]
 8001224:	f015 0506 	ands.w	r5, r5, #6
 8001228:	d106      	bne.n	8001238 <_printf_common+0x48>
 800122a:	f104 0a19 	add.w	sl, r4, #25
 800122e:	68e3      	ldr	r3, [r4, #12]
 8001230:	6832      	ldr	r2, [r6, #0]
 8001232:	1a9b      	subs	r3, r3, r2
 8001234:	42ab      	cmp	r3, r5
 8001236:	dc26      	bgt.n	8001286 <_printf_common+0x96>
 8001238:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800123c:	1e13      	subs	r3, r2, #0
 800123e:	6822      	ldr	r2, [r4, #0]
 8001240:	bf18      	it	ne
 8001242:	2301      	movne	r3, #1
 8001244:	0692      	lsls	r2, r2, #26
 8001246:	d42b      	bmi.n	80012a0 <_printf_common+0xb0>
 8001248:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800124c:	4649      	mov	r1, r9
 800124e:	4638      	mov	r0, r7
 8001250:	47c0      	blx	r8
 8001252:	3001      	adds	r0, #1
 8001254:	d01e      	beq.n	8001294 <_printf_common+0xa4>
 8001256:	6823      	ldr	r3, [r4, #0]
 8001258:	68e5      	ldr	r5, [r4, #12]
 800125a:	6832      	ldr	r2, [r6, #0]
 800125c:	f003 0306 	and.w	r3, r3, #6
 8001260:	2b04      	cmp	r3, #4
 8001262:	bf08      	it	eq
 8001264:	1aad      	subeq	r5, r5, r2
 8001266:	68a3      	ldr	r3, [r4, #8]
 8001268:	6922      	ldr	r2, [r4, #16]
 800126a:	bf0c      	ite	eq
 800126c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001270:	2500      	movne	r5, #0
 8001272:	4293      	cmp	r3, r2
 8001274:	bfc4      	itt	gt
 8001276:	1a9b      	subgt	r3, r3, r2
 8001278:	18ed      	addgt	r5, r5, r3
 800127a:	2600      	movs	r6, #0
 800127c:	341a      	adds	r4, #26
 800127e:	42b5      	cmp	r5, r6
 8001280:	d11a      	bne.n	80012b8 <_printf_common+0xc8>
 8001282:	2000      	movs	r0, #0
 8001284:	e008      	b.n	8001298 <_printf_common+0xa8>
 8001286:	2301      	movs	r3, #1
 8001288:	4652      	mov	r2, sl
 800128a:	4649      	mov	r1, r9
 800128c:	4638      	mov	r0, r7
 800128e:	47c0      	blx	r8
 8001290:	3001      	adds	r0, #1
 8001292:	d103      	bne.n	800129c <_printf_common+0xac>
 8001294:	f04f 30ff 	mov.w	r0, #4294967295
 8001298:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800129c:	3501      	adds	r5, #1
 800129e:	e7c6      	b.n	800122e <_printf_common+0x3e>
 80012a0:	18e1      	adds	r1, r4, r3
 80012a2:	1c5a      	adds	r2, r3, #1
 80012a4:	2030      	movs	r0, #48	; 0x30
 80012a6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80012aa:	4422      	add	r2, r4
 80012ac:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80012b0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80012b4:	3302      	adds	r3, #2
 80012b6:	e7c7      	b.n	8001248 <_printf_common+0x58>
 80012b8:	2301      	movs	r3, #1
 80012ba:	4622      	mov	r2, r4
 80012bc:	4649      	mov	r1, r9
 80012be:	4638      	mov	r0, r7
 80012c0:	47c0      	blx	r8
 80012c2:	3001      	adds	r0, #1
 80012c4:	d0e6      	beq.n	8001294 <_printf_common+0xa4>
 80012c6:	3601      	adds	r6, #1
 80012c8:	e7d9      	b.n	800127e <_printf_common+0x8e>
	...

080012cc <_printf_i>:
 80012cc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80012d0:	7e0f      	ldrb	r7, [r1, #24]
 80012d2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80012d4:	2f78      	cmp	r7, #120	; 0x78
 80012d6:	4691      	mov	r9, r2
 80012d8:	4680      	mov	r8, r0
 80012da:	460c      	mov	r4, r1
 80012dc:	469a      	mov	sl, r3
 80012de:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80012e2:	d807      	bhi.n	80012f4 <_printf_i+0x28>
 80012e4:	2f62      	cmp	r7, #98	; 0x62
 80012e6:	d80a      	bhi.n	80012fe <_printf_i+0x32>
 80012e8:	2f00      	cmp	r7, #0
 80012ea:	f000 80d8 	beq.w	800149e <_printf_i+0x1d2>
 80012ee:	2f58      	cmp	r7, #88	; 0x58
 80012f0:	f000 80a3 	beq.w	800143a <_printf_i+0x16e>
 80012f4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80012f8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80012fc:	e03a      	b.n	8001374 <_printf_i+0xa8>
 80012fe:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001302:	2b15      	cmp	r3, #21
 8001304:	d8f6      	bhi.n	80012f4 <_printf_i+0x28>
 8001306:	a101      	add	r1, pc, #4	; (adr r1, 800130c <_printf_i+0x40>)
 8001308:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800130c:	08001365 	.word	0x08001365
 8001310:	08001379 	.word	0x08001379
 8001314:	080012f5 	.word	0x080012f5
 8001318:	080012f5 	.word	0x080012f5
 800131c:	080012f5 	.word	0x080012f5
 8001320:	080012f5 	.word	0x080012f5
 8001324:	08001379 	.word	0x08001379
 8001328:	080012f5 	.word	0x080012f5
 800132c:	080012f5 	.word	0x080012f5
 8001330:	080012f5 	.word	0x080012f5
 8001334:	080012f5 	.word	0x080012f5
 8001338:	08001485 	.word	0x08001485
 800133c:	080013a9 	.word	0x080013a9
 8001340:	08001467 	.word	0x08001467
 8001344:	080012f5 	.word	0x080012f5
 8001348:	080012f5 	.word	0x080012f5
 800134c:	080014a7 	.word	0x080014a7
 8001350:	080012f5 	.word	0x080012f5
 8001354:	080013a9 	.word	0x080013a9
 8001358:	080012f5 	.word	0x080012f5
 800135c:	080012f5 	.word	0x080012f5
 8001360:	0800146f 	.word	0x0800146f
 8001364:	682b      	ldr	r3, [r5, #0]
 8001366:	1d1a      	adds	r2, r3, #4
 8001368:	681b      	ldr	r3, [r3, #0]
 800136a:	602a      	str	r2, [r5, #0]
 800136c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001370:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001374:	2301      	movs	r3, #1
 8001376:	e0a3      	b.n	80014c0 <_printf_i+0x1f4>
 8001378:	6820      	ldr	r0, [r4, #0]
 800137a:	6829      	ldr	r1, [r5, #0]
 800137c:	0606      	lsls	r6, r0, #24
 800137e:	f101 0304 	add.w	r3, r1, #4
 8001382:	d50a      	bpl.n	800139a <_printf_i+0xce>
 8001384:	680e      	ldr	r6, [r1, #0]
 8001386:	602b      	str	r3, [r5, #0]
 8001388:	2e00      	cmp	r6, #0
 800138a:	da03      	bge.n	8001394 <_printf_i+0xc8>
 800138c:	232d      	movs	r3, #45	; 0x2d
 800138e:	4276      	negs	r6, r6
 8001390:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001394:	485e      	ldr	r0, [pc, #376]	; (8001510 <_printf_i+0x244>)
 8001396:	230a      	movs	r3, #10
 8001398:	e019      	b.n	80013ce <_printf_i+0x102>
 800139a:	680e      	ldr	r6, [r1, #0]
 800139c:	602b      	str	r3, [r5, #0]
 800139e:	f010 0f40 	tst.w	r0, #64	; 0x40
 80013a2:	bf18      	it	ne
 80013a4:	b236      	sxthne	r6, r6
 80013a6:	e7ef      	b.n	8001388 <_printf_i+0xbc>
 80013a8:	682b      	ldr	r3, [r5, #0]
 80013aa:	6820      	ldr	r0, [r4, #0]
 80013ac:	1d19      	adds	r1, r3, #4
 80013ae:	6029      	str	r1, [r5, #0]
 80013b0:	0601      	lsls	r1, r0, #24
 80013b2:	d501      	bpl.n	80013b8 <_printf_i+0xec>
 80013b4:	681e      	ldr	r6, [r3, #0]
 80013b6:	e002      	b.n	80013be <_printf_i+0xf2>
 80013b8:	0646      	lsls	r6, r0, #25
 80013ba:	d5fb      	bpl.n	80013b4 <_printf_i+0xe8>
 80013bc:	881e      	ldrh	r6, [r3, #0]
 80013be:	4854      	ldr	r0, [pc, #336]	; (8001510 <_printf_i+0x244>)
 80013c0:	2f6f      	cmp	r7, #111	; 0x6f
 80013c2:	bf0c      	ite	eq
 80013c4:	2308      	moveq	r3, #8
 80013c6:	230a      	movne	r3, #10
 80013c8:	2100      	movs	r1, #0
 80013ca:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80013ce:	6865      	ldr	r5, [r4, #4]
 80013d0:	60a5      	str	r5, [r4, #8]
 80013d2:	2d00      	cmp	r5, #0
 80013d4:	bfa2      	ittt	ge
 80013d6:	6821      	ldrge	r1, [r4, #0]
 80013d8:	f021 0104 	bicge.w	r1, r1, #4
 80013dc:	6021      	strge	r1, [r4, #0]
 80013de:	b90e      	cbnz	r6, 80013e4 <_printf_i+0x118>
 80013e0:	2d00      	cmp	r5, #0
 80013e2:	d04d      	beq.n	8001480 <_printf_i+0x1b4>
 80013e4:	4615      	mov	r5, r2
 80013e6:	fbb6 f1f3 	udiv	r1, r6, r3
 80013ea:	fb03 6711 	mls	r7, r3, r1, r6
 80013ee:	5dc7      	ldrb	r7, [r0, r7]
 80013f0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80013f4:	4637      	mov	r7, r6
 80013f6:	42bb      	cmp	r3, r7
 80013f8:	460e      	mov	r6, r1
 80013fa:	d9f4      	bls.n	80013e6 <_printf_i+0x11a>
 80013fc:	2b08      	cmp	r3, #8
 80013fe:	d10b      	bne.n	8001418 <_printf_i+0x14c>
 8001400:	6823      	ldr	r3, [r4, #0]
 8001402:	07de      	lsls	r6, r3, #31
 8001404:	d508      	bpl.n	8001418 <_printf_i+0x14c>
 8001406:	6923      	ldr	r3, [r4, #16]
 8001408:	6861      	ldr	r1, [r4, #4]
 800140a:	4299      	cmp	r1, r3
 800140c:	bfde      	ittt	le
 800140e:	2330      	movle	r3, #48	; 0x30
 8001410:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001414:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001418:	1b52      	subs	r2, r2, r5
 800141a:	6122      	str	r2, [r4, #16]
 800141c:	f8cd a000 	str.w	sl, [sp]
 8001420:	464b      	mov	r3, r9
 8001422:	aa03      	add	r2, sp, #12
 8001424:	4621      	mov	r1, r4
 8001426:	4640      	mov	r0, r8
 8001428:	f7ff fee2 	bl	80011f0 <_printf_common>
 800142c:	3001      	adds	r0, #1
 800142e:	d14c      	bne.n	80014ca <_printf_i+0x1fe>
 8001430:	f04f 30ff 	mov.w	r0, #4294967295
 8001434:	b004      	add	sp, #16
 8001436:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800143a:	4835      	ldr	r0, [pc, #212]	; (8001510 <_printf_i+0x244>)
 800143c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001440:	6829      	ldr	r1, [r5, #0]
 8001442:	6823      	ldr	r3, [r4, #0]
 8001444:	f851 6b04 	ldr.w	r6, [r1], #4
 8001448:	6029      	str	r1, [r5, #0]
 800144a:	061d      	lsls	r5, r3, #24
 800144c:	d514      	bpl.n	8001478 <_printf_i+0x1ac>
 800144e:	07df      	lsls	r7, r3, #31
 8001450:	bf44      	itt	mi
 8001452:	f043 0320 	orrmi.w	r3, r3, #32
 8001456:	6023      	strmi	r3, [r4, #0]
 8001458:	b91e      	cbnz	r6, 8001462 <_printf_i+0x196>
 800145a:	6823      	ldr	r3, [r4, #0]
 800145c:	f023 0320 	bic.w	r3, r3, #32
 8001460:	6023      	str	r3, [r4, #0]
 8001462:	2310      	movs	r3, #16
 8001464:	e7b0      	b.n	80013c8 <_printf_i+0xfc>
 8001466:	6823      	ldr	r3, [r4, #0]
 8001468:	f043 0320 	orr.w	r3, r3, #32
 800146c:	6023      	str	r3, [r4, #0]
 800146e:	2378      	movs	r3, #120	; 0x78
 8001470:	4828      	ldr	r0, [pc, #160]	; (8001514 <_printf_i+0x248>)
 8001472:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001476:	e7e3      	b.n	8001440 <_printf_i+0x174>
 8001478:	0659      	lsls	r1, r3, #25
 800147a:	bf48      	it	mi
 800147c:	b2b6      	uxthmi	r6, r6
 800147e:	e7e6      	b.n	800144e <_printf_i+0x182>
 8001480:	4615      	mov	r5, r2
 8001482:	e7bb      	b.n	80013fc <_printf_i+0x130>
 8001484:	682b      	ldr	r3, [r5, #0]
 8001486:	6826      	ldr	r6, [r4, #0]
 8001488:	6961      	ldr	r1, [r4, #20]
 800148a:	1d18      	adds	r0, r3, #4
 800148c:	6028      	str	r0, [r5, #0]
 800148e:	0635      	lsls	r5, r6, #24
 8001490:	681b      	ldr	r3, [r3, #0]
 8001492:	d501      	bpl.n	8001498 <_printf_i+0x1cc>
 8001494:	6019      	str	r1, [r3, #0]
 8001496:	e002      	b.n	800149e <_printf_i+0x1d2>
 8001498:	0670      	lsls	r0, r6, #25
 800149a:	d5fb      	bpl.n	8001494 <_printf_i+0x1c8>
 800149c:	8019      	strh	r1, [r3, #0]
 800149e:	2300      	movs	r3, #0
 80014a0:	6123      	str	r3, [r4, #16]
 80014a2:	4615      	mov	r5, r2
 80014a4:	e7ba      	b.n	800141c <_printf_i+0x150>
 80014a6:	682b      	ldr	r3, [r5, #0]
 80014a8:	1d1a      	adds	r2, r3, #4
 80014aa:	602a      	str	r2, [r5, #0]
 80014ac:	681d      	ldr	r5, [r3, #0]
 80014ae:	6862      	ldr	r2, [r4, #4]
 80014b0:	2100      	movs	r1, #0
 80014b2:	4628      	mov	r0, r5
 80014b4:	f7fe fe94 	bl	80001e0 <memchr>
 80014b8:	b108      	cbz	r0, 80014be <_printf_i+0x1f2>
 80014ba:	1b40      	subs	r0, r0, r5
 80014bc:	6060      	str	r0, [r4, #4]
 80014be:	6863      	ldr	r3, [r4, #4]
 80014c0:	6123      	str	r3, [r4, #16]
 80014c2:	2300      	movs	r3, #0
 80014c4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80014c8:	e7a8      	b.n	800141c <_printf_i+0x150>
 80014ca:	6923      	ldr	r3, [r4, #16]
 80014cc:	462a      	mov	r2, r5
 80014ce:	4649      	mov	r1, r9
 80014d0:	4640      	mov	r0, r8
 80014d2:	47d0      	blx	sl
 80014d4:	3001      	adds	r0, #1
 80014d6:	d0ab      	beq.n	8001430 <_printf_i+0x164>
 80014d8:	6823      	ldr	r3, [r4, #0]
 80014da:	079b      	lsls	r3, r3, #30
 80014dc:	d413      	bmi.n	8001506 <_printf_i+0x23a>
 80014de:	68e0      	ldr	r0, [r4, #12]
 80014e0:	9b03      	ldr	r3, [sp, #12]
 80014e2:	4298      	cmp	r0, r3
 80014e4:	bfb8      	it	lt
 80014e6:	4618      	movlt	r0, r3
 80014e8:	e7a4      	b.n	8001434 <_printf_i+0x168>
 80014ea:	2301      	movs	r3, #1
 80014ec:	4632      	mov	r2, r6
 80014ee:	4649      	mov	r1, r9
 80014f0:	4640      	mov	r0, r8
 80014f2:	47d0      	blx	sl
 80014f4:	3001      	adds	r0, #1
 80014f6:	d09b      	beq.n	8001430 <_printf_i+0x164>
 80014f8:	3501      	adds	r5, #1
 80014fa:	68e3      	ldr	r3, [r4, #12]
 80014fc:	9903      	ldr	r1, [sp, #12]
 80014fe:	1a5b      	subs	r3, r3, r1
 8001500:	42ab      	cmp	r3, r5
 8001502:	dcf2      	bgt.n	80014ea <_printf_i+0x21e>
 8001504:	e7eb      	b.n	80014de <_printf_i+0x212>
 8001506:	2500      	movs	r5, #0
 8001508:	f104 0619 	add.w	r6, r4, #25
 800150c:	e7f5      	b.n	80014fa <_printf_i+0x22e>
 800150e:	bf00      	nop
 8001510:	08001779 	.word	0x08001779
 8001514:	0800178a 	.word	0x0800178a

08001518 <_sbrk_r>:
 8001518:	b538      	push	{r3, r4, r5, lr}
 800151a:	4d06      	ldr	r5, [pc, #24]	; (8001534 <_sbrk_r+0x1c>)
 800151c:	2300      	movs	r3, #0
 800151e:	4604      	mov	r4, r0
 8001520:	4608      	mov	r0, r1
 8001522:	602b      	str	r3, [r5, #0]
 8001524:	f7ff f82a 	bl	800057c <_sbrk>
 8001528:	1c43      	adds	r3, r0, #1
 800152a:	d102      	bne.n	8001532 <_sbrk_r+0x1a>
 800152c:	682b      	ldr	r3, [r5, #0]
 800152e:	b103      	cbz	r3, 8001532 <_sbrk_r+0x1a>
 8001530:	6023      	str	r3, [r4, #0]
 8001532:	bd38      	pop	{r3, r4, r5, pc}
 8001534:	20000090 	.word	0x20000090

08001538 <__sread>:
 8001538:	b510      	push	{r4, lr}
 800153a:	460c      	mov	r4, r1
 800153c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001540:	f000 f8a0 	bl	8001684 <_read_r>
 8001544:	2800      	cmp	r0, #0
 8001546:	bfab      	itete	ge
 8001548:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800154a:	89a3      	ldrhlt	r3, [r4, #12]
 800154c:	181b      	addge	r3, r3, r0
 800154e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001552:	bfac      	ite	ge
 8001554:	6563      	strge	r3, [r4, #84]	; 0x54
 8001556:	81a3      	strhlt	r3, [r4, #12]
 8001558:	bd10      	pop	{r4, pc}

0800155a <__swrite>:
 800155a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800155e:	461f      	mov	r7, r3
 8001560:	898b      	ldrh	r3, [r1, #12]
 8001562:	05db      	lsls	r3, r3, #23
 8001564:	4605      	mov	r5, r0
 8001566:	460c      	mov	r4, r1
 8001568:	4616      	mov	r6, r2
 800156a:	d505      	bpl.n	8001578 <__swrite+0x1e>
 800156c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001570:	2302      	movs	r3, #2
 8001572:	2200      	movs	r2, #0
 8001574:	f000 f868 	bl	8001648 <_lseek_r>
 8001578:	89a3      	ldrh	r3, [r4, #12]
 800157a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800157e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001582:	81a3      	strh	r3, [r4, #12]
 8001584:	4632      	mov	r2, r6
 8001586:	463b      	mov	r3, r7
 8001588:	4628      	mov	r0, r5
 800158a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800158e:	f000 b817 	b.w	80015c0 <_write_r>

08001592 <__sseek>:
 8001592:	b510      	push	{r4, lr}
 8001594:	460c      	mov	r4, r1
 8001596:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800159a:	f000 f855 	bl	8001648 <_lseek_r>
 800159e:	1c43      	adds	r3, r0, #1
 80015a0:	89a3      	ldrh	r3, [r4, #12]
 80015a2:	bf15      	itete	ne
 80015a4:	6560      	strne	r0, [r4, #84]	; 0x54
 80015a6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80015aa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80015ae:	81a3      	strheq	r3, [r4, #12]
 80015b0:	bf18      	it	ne
 80015b2:	81a3      	strhne	r3, [r4, #12]
 80015b4:	bd10      	pop	{r4, pc}

080015b6 <__sclose>:
 80015b6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80015ba:	f000 b813 	b.w	80015e4 <_close_r>
	...

080015c0 <_write_r>:
 80015c0:	b538      	push	{r3, r4, r5, lr}
 80015c2:	4d07      	ldr	r5, [pc, #28]	; (80015e0 <_write_r+0x20>)
 80015c4:	4604      	mov	r4, r0
 80015c6:	4608      	mov	r0, r1
 80015c8:	4611      	mov	r1, r2
 80015ca:	2200      	movs	r2, #0
 80015cc:	602a      	str	r2, [r5, #0]
 80015ce:	461a      	mov	r2, r3
 80015d0:	f7fe ff83 	bl	80004da <_write>
 80015d4:	1c43      	adds	r3, r0, #1
 80015d6:	d102      	bne.n	80015de <_write_r+0x1e>
 80015d8:	682b      	ldr	r3, [r5, #0]
 80015da:	b103      	cbz	r3, 80015de <_write_r+0x1e>
 80015dc:	6023      	str	r3, [r4, #0]
 80015de:	bd38      	pop	{r3, r4, r5, pc}
 80015e0:	20000090 	.word	0x20000090

080015e4 <_close_r>:
 80015e4:	b538      	push	{r3, r4, r5, lr}
 80015e6:	4d06      	ldr	r5, [pc, #24]	; (8001600 <_close_r+0x1c>)
 80015e8:	2300      	movs	r3, #0
 80015ea:	4604      	mov	r4, r0
 80015ec:	4608      	mov	r0, r1
 80015ee:	602b      	str	r3, [r5, #0]
 80015f0:	f7fe ff8f 	bl	8000512 <_close>
 80015f4:	1c43      	adds	r3, r0, #1
 80015f6:	d102      	bne.n	80015fe <_close_r+0x1a>
 80015f8:	682b      	ldr	r3, [r5, #0]
 80015fa:	b103      	cbz	r3, 80015fe <_close_r+0x1a>
 80015fc:	6023      	str	r3, [r4, #0]
 80015fe:	bd38      	pop	{r3, r4, r5, pc}
 8001600:	20000090 	.word	0x20000090

08001604 <_fstat_r>:
 8001604:	b538      	push	{r3, r4, r5, lr}
 8001606:	4d07      	ldr	r5, [pc, #28]	; (8001624 <_fstat_r+0x20>)
 8001608:	2300      	movs	r3, #0
 800160a:	4604      	mov	r4, r0
 800160c:	4608      	mov	r0, r1
 800160e:	4611      	mov	r1, r2
 8001610:	602b      	str	r3, [r5, #0]
 8001612:	f7fe ff8a 	bl	800052a <_fstat>
 8001616:	1c43      	adds	r3, r0, #1
 8001618:	d102      	bne.n	8001620 <_fstat_r+0x1c>
 800161a:	682b      	ldr	r3, [r5, #0]
 800161c:	b103      	cbz	r3, 8001620 <_fstat_r+0x1c>
 800161e:	6023      	str	r3, [r4, #0]
 8001620:	bd38      	pop	{r3, r4, r5, pc}
 8001622:	bf00      	nop
 8001624:	20000090 	.word	0x20000090

08001628 <_isatty_r>:
 8001628:	b538      	push	{r3, r4, r5, lr}
 800162a:	4d06      	ldr	r5, [pc, #24]	; (8001644 <_isatty_r+0x1c>)
 800162c:	2300      	movs	r3, #0
 800162e:	4604      	mov	r4, r0
 8001630:	4608      	mov	r0, r1
 8001632:	602b      	str	r3, [r5, #0]
 8001634:	f7fe ff89 	bl	800054a <_isatty>
 8001638:	1c43      	adds	r3, r0, #1
 800163a:	d102      	bne.n	8001642 <_isatty_r+0x1a>
 800163c:	682b      	ldr	r3, [r5, #0]
 800163e:	b103      	cbz	r3, 8001642 <_isatty_r+0x1a>
 8001640:	6023      	str	r3, [r4, #0]
 8001642:	bd38      	pop	{r3, r4, r5, pc}
 8001644:	20000090 	.word	0x20000090

08001648 <_lseek_r>:
 8001648:	b538      	push	{r3, r4, r5, lr}
 800164a:	4d07      	ldr	r5, [pc, #28]	; (8001668 <_lseek_r+0x20>)
 800164c:	4604      	mov	r4, r0
 800164e:	4608      	mov	r0, r1
 8001650:	4611      	mov	r1, r2
 8001652:	2200      	movs	r2, #0
 8001654:	602a      	str	r2, [r5, #0]
 8001656:	461a      	mov	r2, r3
 8001658:	f7fe ff82 	bl	8000560 <_lseek>
 800165c:	1c43      	adds	r3, r0, #1
 800165e:	d102      	bne.n	8001666 <_lseek_r+0x1e>
 8001660:	682b      	ldr	r3, [r5, #0]
 8001662:	b103      	cbz	r3, 8001666 <_lseek_r+0x1e>
 8001664:	6023      	str	r3, [r4, #0]
 8001666:	bd38      	pop	{r3, r4, r5, pc}
 8001668:	20000090 	.word	0x20000090

0800166c <__malloc_lock>:
 800166c:	4801      	ldr	r0, [pc, #4]	; (8001674 <__malloc_lock+0x8>)
 800166e:	f7ff bb1d 	b.w	8000cac <__retarget_lock_acquire_recursive>
 8001672:	bf00      	nop
 8001674:	20000084 	.word	0x20000084

08001678 <__malloc_unlock>:
 8001678:	4801      	ldr	r0, [pc, #4]	; (8001680 <__malloc_unlock+0x8>)
 800167a:	f7ff bb18 	b.w	8000cae <__retarget_lock_release_recursive>
 800167e:	bf00      	nop
 8001680:	20000084 	.word	0x20000084

08001684 <_read_r>:
 8001684:	b538      	push	{r3, r4, r5, lr}
 8001686:	4d07      	ldr	r5, [pc, #28]	; (80016a4 <_read_r+0x20>)
 8001688:	4604      	mov	r4, r0
 800168a:	4608      	mov	r0, r1
 800168c:	4611      	mov	r1, r2
 800168e:	2200      	movs	r2, #0
 8001690:	602a      	str	r2, [r5, #0]
 8001692:	461a      	mov	r2, r3
 8001694:	f7fe ff04 	bl	80004a0 <_read>
 8001698:	1c43      	adds	r3, r0, #1
 800169a:	d102      	bne.n	80016a2 <_read_r+0x1e>
 800169c:	682b      	ldr	r3, [r5, #0]
 800169e:	b103      	cbz	r3, 80016a2 <_read_r+0x1e>
 80016a0:	6023      	str	r3, [r4, #0]
 80016a2:	bd38      	pop	{r3, r4, r5, pc}
 80016a4:	20000090 	.word	0x20000090

080016a8 <_init>:
 80016a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80016aa:	bf00      	nop
 80016ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80016ae:	bc08      	pop	{r3}
 80016b0:	469e      	mov	lr, r3
 80016b2:	4770      	bx	lr

080016b4 <_fini>:
 80016b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80016b6:	bf00      	nop
 80016b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80016ba:	bc08      	pop	{r3}
 80016bc:	469e      	mov	lr, r3
 80016be:	4770      	bx	lr
